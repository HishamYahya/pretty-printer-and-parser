-- Generated code, do not modify
module Test_Pretty_Cases where
import While
test_simple_expr_pairs = [
  ("42",Const 42),
  ("x",Var "x"),
  ("__x",Var "__x"),
  ("x67",Var "x67"),
  ("_67",Var "_67"),
  ("x+1",Binop Plus (Var "x") (Const 1)),
  ("x*2",Binop Times (Var "x") (Const 2)),
  ("a+b*c",Binop Plus (Var "a") (Binop Times (Var "b") (Var "c"))),
  ("(a+b)*c",Binop Times (Binop Plus (Var "a") (Var "b")) (Var "c")),
  ("a+b <= c*d",Binop LessEq (Binop Plus (Var "a") (Var "b")) (Binop Times (Var "c") (Var "d")))
  ]

test_simple_com_pairs = [
  ("{}",Seq []),
  ("{ }",Seq []),
  ("x=1",Assign "x" (Const 1)),
  ("if b then x=1 else x=2",If (Var "b") (Assign "x" (Const 1)) (Assign "x" (Const 2))),
  ("{ x=1; y=2 }",Seq [Assign "x" (Const 1),Assign "y" (Const 2)]),
  ("{ x=1 }",Seq [Assign "x" (Const 1)]),
  ("while a do {a=a-1; b=b+b}",While (Var "a") (Seq [Assign "a" (Binop Minus (Var "a") (Const 1)),Assign "b" (Binop Plus (Var "b") (Var "b"))]))
  ]

test_expr_pairs_random = [
  ("0",Const 0),
  ("z||-x",Binop Or (Var "z") (Uminus (Var "x"))),
  ("-(0==-(-y)<=z)",Uminus (Binop LessEq (Binop Equal (Const 0) (Uminus (Uminus (Var "y")))) (Var "z"))),
  ("-(1)",Uminus (Const 1)),
  ("b",Var "b"),
  ("-15||-15<(-9<(1||-(-23)))",Binop Or (Const (-15)) (Binop Less (Const (-15)) (Binop Less (Const (-9)) (Binop Or (Const 1) (Uminus (Const (-23))))))),
  ("-(25)",Uminus (Const 25)),
  ("z",Var "z"),
  ("x",Var "x"),
  ("-z",Uminus (Var "z")),
  ("y",Var "y"),
  ("29",Const 29),
  ("-(x+-z/y)",Uminus (Binop Plus (Var "x") (Binop Div (Uminus (Var "z")) (Var "y")))),
  ("1==(b-(a<11)/-(0)<1-(a+(0<b)))",Binop Equal (Const 1) (Binop Less (Binop Minus (Var "b") (Binop Div (Binop Less (Var "a") (Const 11)) (Uminus (Const 0)))) (Binop Minus (Const 1) (Binop Plus (Var "a") (Binop Less (Const 0) (Var "b")))))),
  ("y||x",Binop Or (Var "y") (Var "x")),
  ("-(-(x*(-28<-(0))))",Uminus (Uminus (Binop Times (Var "x") (Binop Less (Const (-28)) (Uminus (Const 0)))))),
  ("(y||-(1))*1/(1/x)+-20",Binop Plus (Binop Div (Binop Times (Binop Or (Var "y") (Uminus (Const 1))) (Const 1)) (Binop Div (Const 1) (Var "x"))) (Const (-20))),
  ("-(-(1&&-(0&&0)))",Uminus (Uminus (Binop And (Const 1) (Uminus (Binop And (Const 0) (Const 0)))))),
  ("(17||0)+-29",Binop Plus (Binop Or (Const 17) (Const 0)) (Const (-29))),
  ("-(28*(1+-(y/0)))",Uminus (Binop Times (Const 28) (Binop Plus (Const 1) (Uminus (Binop Div (Var "y") (Const 0)))))),
  ("1",Const 1),
  ("((b==-(0)<=z)-(1--(0/6)))/z",Binop Div (Binop Minus (Binop LessEq (Binop Equal (Var "b") (Uminus (Const 0))) (Var "z")) (Binop Minus (Const 1) (Uminus (Binop Div (Const 0) (Const 6))))) (Var "z")),
  ("0--x+-11<=-((0<=a)/(b/-15)<(-11<-(0)))",Binop LessEq (Binop Plus (Binop Minus (Const 0) (Uminus (Var "x"))) (Const (-11))) (Uminus (Binop Less (Binop Div (Binop LessEq (Const 0) (Var "a")) (Binop Div (Var "b") (Const (-15)))) (Binop Less (Const (-11)) (Uminus (Const 0)))))),
  ("-((0<0*(0==-15))+22)",Uminus (Binop Plus (Binop Less (Const 0) (Binop Times (Const 0) (Binop Equal (Const 0) (Const (-15))))) (Const 22))),
  ("5<b-y",Binop Less (Const 5) (Binop Minus (Var "b") (Var "y"))),
  ("-(b&&(-x==-z)/y)",Uminus (Binop And (Var "b") (Binop Div (Binop Equal (Uminus (Var "x")) (Uminus (Var "z"))) (Var "y")))),
  ("b--(1<=8<z/x)",Binop Minus (Var "b") (Uminus (Binop Less (Binop LessEq (Const 1) (Const 8)) (Binop Div (Var "z") (Var "x"))))),
  ("0&&z",Binop And (Const 0) (Var "z")),
  ("a&&-(0)--(-25)-y<-(-(8)<z)",Binop And (Var "a") (Binop Less (Binop Minus (Binop Minus (Uminus (Const 0)) (Uminus (Const (-25)))) (Var "y")) (Uminus (Binop Less (Uminus (Const 8)) (Var "z"))))),
  ("-29",Const (-29)),
  ("x<(0&&-(-x+y))",Binop Less (Var "x") (Binop And (Const 0) (Uminus (Binop Plus (Uminus (Var "x")) (Var "y"))))),
  ("-(-(0-0))<=(-a||0)<(0<=b)",Binop Less (Binop LessEq (Uminus (Uminus (Binop Minus (Const 0) (Const 0)))) (Binop Or (Uminus (Var "a")) (Const 0))) (Binop LessEq (Const 0) (Var "b"))),
  ("-(0)",Uminus (Const 0)),
  ("a",Var "a"),
  ("z<z",Binop Less (Var "z") (Var "z")),
  ("y<=b",Binop LessEq (Var "y") (Var "b")),
  ("-9*(((1&&0)*-a<1)+-(1))",Binop Times (Const (-9)) (Binop Plus (Binop Less (Binop Times (Binop And (Const 1) (Const 0)) (Uminus (Var "a"))) (Const 1)) (Uminus (Const 1)))),
  ("-(-y/(x-b))==0==a",Binop Equal (Binop Equal (Uminus (Binop Div (Uminus (Var "y")) (Binop Minus (Var "x") (Var "b")))) (Const 0)) (Var "a")),
  ("0+(-(-(0))<-((y&&1)==y))",Binop Plus (Const 0) (Binop Less (Uminus (Uminus (Const 0))) (Uminus (Binop Equal (Binop And (Var "y") (Const 1)) (Var "y"))))),
  ("b*1||18",Binop Or (Binop Times (Var "b") (Const 1)) (Const 18)),
  ("-a==(0<(-y==-(1)))",Binop Equal (Uminus (Var "a")) (Binop Less (Const 0) (Binop Equal (Uminus (Var "y")) (Uminus (Const 1))))),
  ("0<(x&&0||-x)/(-3<1)+0",Binop Less (Const 0) (Binop Plus (Binop Div (Binop Or (Binop And (Var "x") (Const 0)) (Uminus (Var "x"))) (Binop Less (Const (-3)) (Const 1))) (Const 0))),
  ("-9*((x||(b||0))+(x--19)/x)==(x==-25)/-5",Binop Equal (Binop Times (Const (-9)) (Binop Plus (Binop Or (Var "x") (Binop Or (Var "b") (Const 0))) (Binop Div (Binop Minus (Var "x") (Const (-19))) (Var "x")))) (Binop Div (Binop Equal (Var "x") (Const (-25))) (Const (-5)))),
  ("b<18--(-10)*(x||1)",Binop Less (Var "b") (Binop Minus (Const 18) (Binop Times (Uminus (Const (-10))) (Binop Or (Var "x") (Const 1))))),
  ("-(x*a)",Uminus (Binop Times (Var "x") (Var "a"))),
  ("-12",Const (-12)),
  ("-(-(y/-(1)))",Uminus (Uminus (Binop Div (Var "y") (Uminus (Const 1))))),
  ("12",Const 12),
  ("-(a+1<=-10)<-((x<=1)*(a&&x)-(-(0)||0))",Binop Less (Uminus (Binop LessEq (Binop Plus (Var "a") (Const 1)) (Const (-10)))) (Uminus (Binop Minus (Binop Times (Binop LessEq (Var "x") (Const 1)) (Binop And (Var "a") (Var "x"))) (Binop Or (Uminus (Const 0)) (Const 0))))),
  ("0*0",Binop Times (Const 0) (Const 0)),
  ("-1&&b",Binop And (Const (-1)) (Var "b")),
  ("11",Const 11),
  ("-(b&&z-(15||a))",Uminus (Binop And (Var "b") (Binop Minus (Var "z") (Binop Or (Const 15) (Var "a"))))),
  ("0/((1==y||b<27)+a*(z<z))/(0+(-(x<a)<x))",Binop Div (Binop Div (Const 0) (Binop Plus (Binop Or (Binop Equal (Const 1) (Var "y")) (Binop Less (Var "b") (Const 27))) (Binop Times (Var "a") (Binop Less (Var "z") (Var "z"))))) (Binop Plus (Const 0) (Binop Less (Uminus (Binop Less (Var "x") (Var "a"))) (Var "x")))),
  ("b<=x",Binop LessEq (Var "b") (Var "x")),
  ("-x<1*x",Binop Less (Uminus (Var "x")) (Binop Times (Const 1) (Var "x"))),
  ("-(-4)-((0-z<(1<=a)<=y*26/-(0))-(0==x)*(-z-(-13==1)))",Binop Minus (Uminus (Const (-4))) (Binop Minus (Binop LessEq (Binop Less (Binop Minus (Const 0) (Var "z")) (Binop LessEq (Const 1) (Var "a"))) (Binop Div (Binop Times (Var "y") (Const 26)) (Uminus (Const 0)))) (Binop Times (Binop Equal (Const 0) (Var "x")) (Binop Minus (Uminus (Var "z")) (Binop Equal (Const (-13)) (Const 1)))))),
  ("-(23<0)*(-(-26*a)||-(0))||b",Binop Or (Binop Times (Uminus (Binop Less (Const 23) (Const 0))) (Binop Or (Uminus (Binop Times (Const (-26)) (Var "a"))) (Uminus (Const 0)))) (Var "b")),
  ("(0&&(-14&&(b<=z)/-14))<=-(24-(y<y)==a)",Binop LessEq (Binop And (Const 0) (Binop And (Const (-14)) (Binop Div (Binop LessEq (Var "b") (Var "z")) (Const (-14))))) (Uminus (Binop Equal (Binop Minus (Const 24) (Binop Less (Var "y") (Var "y"))) (Var "a")))),
  ("-(x/((17&&y||a*b)<-(b<6)))",Uminus (Binop Div (Var "x") (Binop Less (Binop Or (Binop And (Const 17) (Var "y")) (Binop Times (Var "a") (Var "b"))) (Uminus (Binop Less (Var "b") (Const 6)))))),
  ("b+b||0",Binop Or (Binop Plus (Var "b") (Var "b")) (Const 0)),
  ("-z+1+(-y<-y)",Binop Plus (Binop Plus (Uminus (Var "z")) (Const 1)) (Binop Less (Uminus (Var "y")) (Uminus (Var "y")))),
  ("(-27<(1<-(0))<-(1))*x",Binop Times (Binop Less (Binop Less (Const (-27)) (Binop Less (Const 1) (Uminus (Const 0)))) (Uminus (Const 1))) (Var "x")),
  ("-(a/(a+(z||0||a==x)))",Uminus (Binop Div (Var "a") (Binop Plus (Var "a") (Binop Or (Binop Or (Var "z") (Const 0)) (Binop Equal (Var "a") (Var "x")))))),
  ("-(-(-7))",Uminus (Uminus (Const (-7)))),
  ("1||a/b",Binop Or (Const 1) (Binop Div (Var "a") (Var "b"))),
  ("-(-(24)||y*-(0))<-(0)",Binop Less (Uminus (Binop Or (Uminus (Const 24)) (Binop Times (Var "y") (Uminus (Const 0))))) (Uminus (Const 0))),
  ("-a&&-(-(0/-z))",Binop And (Uminus (Var "a")) (Uminus (Uminus (Binop Div (Const 0) (Uminus (Var "z")))))),
  ("b-a",Binop Minus (Var "b") (Var "a")),
  ("-((z-z)*(1/-11))+((y||-27)<=1+x==0)-((x||15==(x<1))--(6))",Binop Minus (Binop Plus (Uminus (Binop Times (Binop Minus (Var "z") (Var "z")) (Binop Div (Const 1) (Const (-11))))) (Binop Equal (Binop LessEq (Binop Or (Var "y") (Const (-27))) (Binop Plus (Const 1) (Var "x"))) (Const 0))) (Binop Minus (Binop Or (Var "x") (Binop Equal (Const 15) (Binop Less (Var "x") (Const 1)))) (Uminus (Const 6)))),
  ("8",Const 8),
  ("(-x&&-(-y))<x",Binop Less (Binop And (Uminus (Var "x")) (Uminus (Uminus (Var "y")))) (Var "x")),
  ("z==(y--(0)*1)*z",Binop Equal (Var "z") (Binop Times (Binop Minus (Var "y") (Binop Times (Uminus (Const 0)) (Const 1))) (Var "z"))),
  ("-(-(0--(-(1))))",Uminus (Uminus (Binop Minus (Const 0) (Uminus (Uminus (Const 1)))))),
  ("-(1-(0-y-(z&&y==1)))",Uminus (Binop Minus (Const 1) (Binop Minus (Binop Minus (Const 0) (Var "y")) (Binop And (Var "z") (Binop Equal (Var "y") (Const 1)))))),
  ("x*-(0)",Binop Times (Var "x") (Uminus (Const 0))),
  ("x&&(-(1)+-(1))*x||1+b",Binop Or (Binop And (Var "x") (Binop Times (Binop Plus (Uminus (Const 1)) (Uminus (Const 1))) (Var "x"))) (Binop Plus (Const 1) (Var "b"))),
  ("z-0",Binop Minus (Var "z") (Const 0)),
  ("-(y||-(-(1)))<(12||0)",Binop Less (Uminus (Binop Or (Var "y") (Uminus (Uminus (Const 1))))) (Binop Or (Const 12) (Const 0))),
  ("-28/1/(-y/y+(y+y))--((z<=x<-12)-1)",Binop Minus (Binop Div (Binop Div (Const (-28)) (Const 1)) (Binop Plus (Binop Div (Uminus (Var "y")) (Var "y")) (Binop Plus (Var "y") (Var "y")))) (Uminus (Binop Minus (Binop Less (Binop LessEq (Var "z") (Var "x")) (Const (-12))) (Const 1)))),
  ("z<(z||22)<-(-a)",Binop Less (Binop Less (Var "z") (Binop Or (Var "z") (Const 22))) (Uminus (Uminus (Var "a")))),
  ("-(-26)",Uminus (Const (-26))),
  ("(1--(1))*y",Binop Times (Binop Minus (Const 1) (Uminus (Const 1))) (Var "y")),
  ("0+-((y||1)/-(8)+1)",Binop Plus (Const 0) (Uminus (Binop Plus (Binop Div (Binop Or (Var "y") (Const 1)) (Uminus (Const 8))) (Const 1)))),
  ("(-(-(1==0))&&-30)<=y",Binop LessEq (Binop And (Uminus (Uminus (Binop Equal (Const 1) (Const 0)))) (Const (-30))) (Var "y")),
  ("(a<1)*((-z||b)<=-(1))&&1",Binop And (Binop Times (Binop Less (Var "a") (Const 1)) (Binop LessEq (Binop Or (Uminus (Var "z")) (Var "b")) (Uminus (Const 1)))) (Const 1)),
  ("-y",Uminus (Var "y")),
  ("-14",Const (-14)),
  ("(1||1)-y",Binop Minus (Binop Or (Const 1) (Const 1)) (Var "y")),
  ("(-(1)<=-(1)&&x==b)*(1+-b+(1<(1<y)))==x",Binop Equal (Binop Times (Binop And (Binop LessEq (Uminus (Const 1)) (Uminus (Const 1))) (Binop Equal (Var "x") (Var "b"))) (Binop Plus (Binop Plus (Const 1) (Uminus (Var "b"))) (Binop Less (Const 1) (Binop Less (Const 1) (Var "y"))))) (Var "x")),
  ("1&&0<=(1/-3&&1)/(0*x)",Binop And (Const 1) (Binop LessEq (Const 0) (Binop Div (Binop And (Binop Div (Const 1) (Const (-3))) (Const 1)) (Binop Times (Const 0) (Var "x"))))),
  ("(-y<((a==-16)*-21||-(y/z)))*x",Binop Times (Binop Less (Uminus (Var "y")) (Binop Or (Binop Times (Binop Equal (Var "a") (Const (-16))) (Const (-21))) (Uminus (Binop Div (Var "y") (Var "z"))))) (Var "x")),
  ("-(4)||0",Binop Or (Uminus (Const 4)) (Const 0)),
  ("-(-2)<10",Binop Less (Uminus (Const (-2))) (Const 10)),
  ("-5",Const (-5)),
  ("(-a<6)*b+1==(a<=-z)",Binop Equal (Binop Plus (Binop Times (Binop Less (Uminus (Var "a")) (Const 6)) (Var "b")) (Const 1)) (Binop LessEq (Var "a") (Uminus (Var "z")))),
  ("16",Const 16),
  ("-(-(b&&b<=1))<-((-(0)&&1-z)/(1+(1-y)))",Binop Less (Uminus (Uminus (Binop And (Var "b") (Binop LessEq (Var "b") (Const 1))))) (Uminus (Binop Div (Binop And (Uminus (Const 0)) (Binop Minus (Const 1) (Var "z"))) (Binop Plus (Const 1) (Binop Minus (Const 1) (Var "y")))))),
  ("0+(((x<=1)--29&&0==23)<(14<=-(z*x)))",Binop Plus (Const 0) (Binop Less (Binop And (Binop Minus (Binop LessEq (Var "x") (Const 1)) (Const (-29))) (Binop Equal (Const 0) (Const 23))) (Binop LessEq (Const 14) (Uminus (Binop Times (Var "z") (Var "x")))))),
  ("z+-(-(-(18)))||b*((0||0)/(-16||24))",Binop Or (Binop Plus (Var "z") (Uminus (Uminus (Uminus (Const 18))))) (Binop Times (Var "b") (Binop Div (Binop Or (Const 0) (Const 0)) (Binop Or (Const (-16)) (Const 24))))),
  ("1+-(-15)<=1||(a+14*b&&0)+x",Binop Or (Binop LessEq (Binop Plus (Const 1) (Uminus (Const (-15)))) (Const 1)) (Binop Plus (Binop And (Binop Plus (Var "a") (Binop Times (Const 14) (Var "b"))) (Const 0)) (Var "x"))),
  ("2",Const 2),
  ("y||(x<=-(y*1))*(-(0&&26)+-(y||b))",Binop Or (Var "y") (Binop Times (Binop LessEq (Var "x") (Uminus (Binop Times (Var "y") (Const 1)))) (Binop Plus (Uminus (Binop And (Const 0) (Const 26))) (Uminus (Binop Or (Var "y") (Var "b")))))),
  ("(a&&-(0)<=-b&&b)/(b==x)",Binop Div (Binop And (Binop And (Var "a") (Binop LessEq (Uminus (Const 0)) (Uminus (Var "b")))) (Var "b")) (Binop Equal (Var "b") (Var "x"))),
  ("x==x+(1*-(0)==y)",Binop Equal (Var "x") (Binop Plus (Var "x") (Binop Equal (Binop Times (Const 1) (Uminus (Const 0))) (Var "y")))),
  ("3",Const 3),
  ("-(-y)",Uminus (Uminus (Var "y"))),
  ("z<a<=-(-b+(z||0)<-(0<=x))",Binop LessEq (Binop Less (Var "z") (Var "a")) (Uminus (Binop Less (Binop Plus (Uminus (Var "b")) (Binop Or (Var "z") (Const 0))) (Uminus (Binop LessEq (Const 0) (Var "x")))))),
  ("z*-((a<-16)-17-y)",Binop Times (Var "z") (Uminus (Binop Minus (Binop Minus (Binop Less (Var "a") (Const (-16))) (Const 17)) (Var "y")))),
  ("a-(0-a)",Binop Minus (Var "a") (Binop Minus (Const 0) (Var "a"))),
  ("0||11",Binop Or (Const 0) (Const 11)),
  ("(z<30)*-(-(0<z)/1)",Binop Times (Binop Less (Var "z") (Const 30)) (Uminus (Binop Div (Uminus (Binop Less (Const 0) (Var "z"))) (Const 1)))),
  ("z==((14<=z||1/-b)==(0&&z))",Binop Equal (Var "z") (Binop Equal (Binop Or (Binop LessEq (Const 14) (Var "z")) (Binop Div (Const 1) (Uminus (Var "b")))) (Binop And (Const 0) (Var "z")))),
  ("-(b+-(29))",Uminus (Binop Plus (Var "b") (Uminus (Const 29)))),
  ("(1==-x<(z/1&&25+0))+(a&&(0<-2&&y))<=1",Binop LessEq (Binop Plus (Binop Less (Binop Equal (Const 1) (Uminus (Var "x"))) (Binop And (Binop Div (Var "z") (Const 1)) (Binop Plus (Const 25) (Const 0)))) (Binop And (Var "a") (Binop And (Binop Less (Const 0) (Const (-2))) (Var "y")))) (Const 1)),
  ("-a",Uminus (Var "a")),
  ("1/-(y/1--y)",Binop Div (Const 1) (Uminus (Binop Minus (Binop Div (Var "y") (Const 1)) (Uminus (Var "y"))))),
  ("(-(-(1)&&0)-(1<=b*0<1))/a",Binop Div (Binop Minus (Uminus (Binop And (Uminus (Const 1)) (Const 0))) (Binop Less (Binop LessEq (Const 1) (Binop Times (Var "b") (Const 0))) (Const 1))) (Var "a")),
  ("-(((z||a)&&z)*-29/b)",Uminus (Binop Div (Binop Times (Binop And (Binop Or (Var "z") (Var "a")) (Var "z")) (Const (-29))) (Var "b"))),
  ("1+x",Binop Plus (Const 1) (Var "x")),
  ("y&&(a==(0==y))+y&&(-22-b<=y)/4==-(-(1))",Binop And (Binop And (Var "y") (Binop Plus (Binop Equal (Var "a") (Binop Equal (Const 0) (Var "y"))) (Var "y"))) (Binop Equal (Binop Div (Binop LessEq (Binop Minus (Const (-22)) (Var "b")) (Var "y")) (Const 4)) (Uminus (Uminus (Const 1))))),
  ("(1-y)*(0*-29)||y",Binop Or (Binop Times (Binop Minus (Const 1) (Var "y")) (Binop Times (Const 0) (Const (-29)))) (Var "y")),
  ("-14*(z<=((1||0||1/1)<a))",Binop Times (Const (-14)) (Binop LessEq (Var "z") (Binop Less (Binop Or (Binop Or (Const 1) (Const 0)) (Binop Div (Const 1) (Const 1))) (Var "a")))),
  ("-(3)",Uminus (Const 3)),
  ("26",Const 26),
  ("-(((b*z||(0||1))<=0)+y)",Uminus (Binop Plus (Binop LessEq (Binop Or (Binop Times (Var "b") (Var "z")) (Binop Or (Const 0) (Const 1))) (Const 0)) (Var "y"))),
  ("(-((y==25)+(z||-6))<=z)/(-(-(1||-4))==-(-x))",Binop Div (Binop LessEq (Uminus (Binop Plus (Binop Equal (Var "y") (Const 25)) (Binop Or (Var "z") (Const (-6))))) (Var "z")) (Binop Equal (Uminus (Uminus (Binop Or (Const 1) (Const (-4))))) (Uminus (Uminus (Var "x"))))),
  ("12+2",Binop Plus (Const 12) (Const 2)),
  ("((9||y/a<-a)-z)/z",Binop Div (Binop Minus (Binop Or (Const 9) (Binop Less (Binop Div (Var "y") (Var "a")) (Uminus (Var "a")))) (Var "z")) (Var "z")),
  ("21-y",Binop Minus (Const 21) (Var "y")),
  ("(2+z)*-(1)-y<=((-20<=b)+0/z==0)||(0||z)",Binop Or (Binop LessEq (Binop Minus (Binop Times (Binop Plus (Const 2) (Var "z")) (Uminus (Const 1))) (Var "y")) (Binop Equal (Binop Plus (Binop LessEq (Const (-20)) (Var "b")) (Binop Div (Const 0) (Var "z"))) (Const 0))) (Binop Or (Const 0) (Var "z"))),
  ("x*(-(0)+-5)",Binop Times (Var "x") (Binop Plus (Uminus (Const 0)) (Const (-5)))),
  ("(b-x)/(0*-(1*1)<=1)",Binop Div (Binop Minus (Var "b") (Var "x")) (Binop LessEq (Binop Times (Const 0) (Uminus (Binop Times (Const 1) (Const 1)))) (Const 1))),
  ("-(a*y)",Uminus (Binop Times (Var "a") (Var "y"))),
  ("-y<(y<-(1))&&-(-(22))+(y<0)*(0-z)<b",Binop And (Binop Less (Uminus (Var "y")) (Binop Less (Var "y") (Uminus (Const 1)))) (Binop Less (Binop Plus (Uminus (Uminus (Const 22))) (Binop Times (Binop Less (Var "y") (Const 0)) (Binop Minus (Const 0) (Var "z")))) (Var "b"))),
  ("(y<=(y==1==-b))/z+((-(0)&&b)==-b)",Binop Plus (Binop Div (Binop LessEq (Var "y") (Binop Equal (Binop Equal (Var "y") (Const 1)) (Uminus (Var "b")))) (Var "z")) (Binop Equal (Binop And (Uminus (Const 0)) (Var "b")) (Uminus (Var "b")))),
  ("-((z&&0)-a)",Uminus (Binop Minus (Binop And (Var "z") (Const 0)) (Var "a"))),
  ("(-(-(27))+(-(1)&&0/0*z))/(a/-(1))",Binop Div (Binop Plus (Uminus (Uminus (Const 27))) (Binop And (Uminus (Const 1)) (Binop Times (Binop Div (Const 0) (Const 0)) (Var "z")))) (Binop Div (Var "a") (Uminus (Const 1)))),
  ("-(y==(-10<4))/0&&y",Binop And (Binop Div (Uminus (Binop Equal (Var "y") (Binop Less (Const (-10)) (Const 4)))) (Const 0)) (Var "y")),
  ("(0&&z)*0&&z",Binop And (Binop Times (Binop And (Const 0) (Var "z")) (Const 0)) (Var "z")),
  ("x==-(-(1||-3))/(-(b+b)<=(19&&a))",Binop Equal (Var "x") (Binop Div (Uminus (Uminus (Binop Or (Const 1) (Const (-3))))) (Binop LessEq (Uminus (Binop Plus (Var "b") (Var "b"))) (Binop And (Const 19) (Var "a"))))),
  ("-((0||b)<=-b<=(a==a==x+z))&&0",Binop And (Uminus (Binop LessEq (Binop LessEq (Binop Or (Const 0) (Var "b")) (Uminus (Var "b"))) (Binop Equal (Binop Equal (Var "a") (Var "a")) (Binop Plus (Var "x") (Var "z"))))) (Const 0)),
  ("-(22)+a",Binop Plus (Uminus (Const 22)) (Var "a")),
  ("-(-(0))",Uminus (Uminus (Const 0))),
  ("x--(-(0))",Binop Minus (Var "x") (Uminus (Uminus (Const 0)))),
  ("-(1-(z<=0)==0*(1+b)==0)",Uminus (Binop Equal (Binop Equal (Binop Minus (Const 1) (Binop LessEq (Var "z") (Const 0))) (Binop Times (Const 0) (Binop Plus (Const 1) (Var "b")))) (Const 0))),
  ("x*(x||0||-(0))",Binop Times (Var "x") (Binop Or (Binop Or (Var "x") (Const 0)) (Uminus (Const 0)))),
  ("0==0==a<=(-(-(1)*-(1))||0)",Binop LessEq (Binop Equal (Binop Equal (Const 0) (Const 0)) (Var "a")) (Binop Or (Uminus (Binop Times (Uminus (Const 1)) (Uminus (Const 1)))) (Const 0))),
  ("-b<x",Binop Less (Uminus (Var "b")) (Var "x")),
  ("0--(-(0-0))",Binop Minus (Const 0) (Uminus (Uminus (Binop Minus (Const 0) (Const 0))))),
  ("1==-8",Binop Equal (Const 1) (Const (-8))),
  ("-x",Uminus (Var "x")),
  ("(4||0)==(-(1)<=-(b+b))<=1",Binop LessEq (Binop Equal (Binop Or (Const 4) (Const 0)) (Binop LessEq (Uminus (Const 1)) (Uminus (Binop Plus (Var "b") (Var "b"))))) (Const 1)),
  ("(1/5==(0<1)<=b||-(-(a-y)))*1",Binop Times (Binop Or (Binop LessEq (Binop Equal (Binop Div (Const 1) (Const 5)) (Binop Less (Const 0) (Const 1))) (Var "b")) (Uminus (Uminus (Binop Minus (Var "a") (Var "y"))))) (Const 1)),
  ("x*((-(17+b)-z)*1)",Binop Times (Var "x") (Binop Times (Binop Minus (Uminus (Binop Plus (Const 17) (Var "b"))) (Var "z")) (Const 1))),
  ("-(0||0)<(1<(z*-24||-(1<=z)))",Binop Less (Uminus (Binop Or (Const 0) (Const 0))) (Binop Less (Const 1) (Binop Or (Binop Times (Var "z") (Const (-24))) (Uminus (Binop LessEq (Const 1) (Var "z")))))),
  ("-(b+(-(1)<=-(0))/1)",Uminus (Binop Plus (Var "b") (Binop Div (Binop LessEq (Uminus (Const 1)) (Uminus (Const 0))) (Const 1)))),
  ("a<(z<=x==x)-(-(-(0))&&-z)",Binop Less (Var "a") (Binop Minus (Binop Equal (Binop LessEq (Var "z") (Var "x")) (Var "x")) (Binop And (Uminus (Uminus (Const 0))) (Uminus (Var "z"))))),
  ("z-1",Binop Minus (Var "z") (Const 1)),
  ("1*a-z",Binop Minus (Binop Times (Const 1) (Var "a")) (Var "z")),
  ("-b",Uminus (Var "b")),
  ("0<=(z||-y)-b&&x/y",Binop And (Binop LessEq (Const 0) (Binop Minus (Binop Or (Var "z") (Uminus (Var "y"))) (Var "b"))) (Binop Div (Var "x") (Var "y"))),
  ("(0||(z||1)<(z<10))&&(a||-(b/0)/1)",Binop And (Binop Or (Const 0) (Binop Less (Binop Or (Var "z") (Const 1)) (Binop Less (Var "z") (Const 10)))) (Binop Or (Var "a") (Binop Div (Uminus (Binop Div (Var "b") (Const 0))) (Const 1)))),
  ("x*(1+(b/y+21==0))",Binop Times (Var "x") (Binop Plus (Const 1) (Binop Equal (Binop Plus (Binop Div (Var "b") (Var "y")) (Const 21)) (Const 0)))),
  ("-(1)/(-(1)+-(-(1)))+a",Binop Plus (Binop Div (Uminus (Const 1)) (Binop Plus (Uminus (Const 1)) (Uminus (Uminus (Const 1))))) (Var "a")),
  ("-((-(1)<=8-5<=(b<z)/1)/a)",Uminus (Binop Div (Binop LessEq (Binop LessEq (Uminus (Const 1)) (Binop Minus (Const 8) (Const 5))) (Binop Div (Binop Less (Var "b") (Var "z")) (Const 1))) (Var "a"))),
  ("1&&-(x<-x)<=-14",Binop And (Const 1) (Binop LessEq (Uminus (Binop Less (Var "x") (Uminus (Var "x")))) (Const (-14)))),
  ("0&&1/(0*(1||b))||y*(22==a||y+-14)==1+1",Binop Or (Binop And (Const 0) (Binop Div (Const 1) (Binop Times (Const 0) (Binop Or (Const 1) (Var "b"))))) (Binop Equal (Binop Times (Var "y") (Binop Or (Binop Equal (Const 22) (Var "a")) (Binop Plus (Var "y") (Const (-14))))) (Binop Plus (Const 1) (Const 1)))),
  ("-30",Const (-30)),
  ("y<=0",Binop LessEq (Var "y") (Const 0)),
  ("a/((-(30)==-(20)&&z)==-4)",Binop Div (Var "a") (Binop Equal (Binop And (Binop Equal (Uminus (Const 30)) (Uminus (Const 20))) (Var "z")) (Const (-4)))),
  ("-10",Const (-10)),
  ("x<x+8",Binop Less (Var "x") (Binop Plus (Var "x") (Const 8))),
  ("(7&&x)<a<=(1<=1<=a)",Binop LessEq (Binop Less (Binop And (Const 7) (Var "x")) (Var "a")) (Binop LessEq (Binop LessEq (Const 1) (Const 1)) (Var "a"))),
  ("x-1*(x--b)",Binop Minus (Var "x") (Binop Times (Const 1) (Binop Minus (Var "x") (Uminus (Var "b"))))),
  ("-((-26||0==-19==(y<3))&&b)",Uminus (Binop And (Binop Or (Const (-26)) (Binop Equal (Binop Equal (Const 0) (Const (-19))) (Binop Less (Var "y") (Const 3)))) (Var "b"))),
  ("-23",Const (-23)),
  ("-(3*y-x)",Uminus (Binop Minus (Binop Times (Const 3) (Var "y")) (Var "x"))),
  ("(-a<=-(x--x))/z",Binop Div (Binop LessEq (Uminus (Var "a")) (Uminus (Binop Minus (Var "x") (Uminus (Var "x"))))) (Var "z")),
  ("a/1",Binop Div (Var "a") (Const 1)),
  ("x/(-(0)||-y)==-23||1",Binop Or (Binop Equal (Binop Div (Var "x") (Binop Or (Uminus (Const 0)) (Uminus (Var "y")))) (Const (-23))) (Const 1)),
  ("b&&y==(0<=y==-z)",Binop And (Var "b") (Binop Equal (Var "y") (Binop Equal (Binop LessEq (Const 0) (Var "y")) (Uminus (Var "z"))))),
  ("1/28<=(-y&&-15)",Binop LessEq (Binop Div (Const 1) (Const 28)) (Binop And (Uminus (Var "y")) (Const (-15)))),
  ("z+-(0||-(-3)*24)",Binop Plus (Var "z") (Uminus (Binop Or (Const 0) (Binop Times (Uminus (Const (-3))) (Const 24))))),
  ("-(1+-(0)||1)<=((-(a==a)&&a)<=((x||a)<=1))",Binop LessEq (Uminus (Binop Or (Binop Plus (Const 1) (Uminus (Const 0))) (Const 1))) (Binop LessEq (Binop And (Uminus (Binop Equal (Var "a") (Var "a"))) (Var "a")) (Binop LessEq (Binop Or (Var "x") (Var "a")) (Const 1)))),
  ("18<=-(0)",Binop LessEq (Const 18) (Uminus (Const 0))),
  ("-(b<=1)",Uminus (Binop LessEq (Var "b") (Const 1))),
  ("9",Const 9),
  ("a<1",Binop Less (Var "a") (Const 1)),
  ("(b<x)+6",Binop Plus (Binop Less (Var "b") (Var "x")) (Const 6)),
  ("0&&x",Binop And (Const 0) (Var "x")),
  ("-9",Const (-9)),
  ("28*((a<y)+0+b)",Binop Times (Const 28) (Binop Plus (Binop Plus (Binop Less (Var "a") (Var "y")) (Const 0)) (Var "b"))),
  ("-(1*-y)",Uminus (Binop Times (Const 1) (Uminus (Var "y")))),
  ("13<=-21",Binop LessEq (Const 13) (Const (-21))),
  ("-(-(1)--x)",Uminus (Binop Minus (Uminus (Const 1)) (Uminus (Var "x")))),
  ("-(-(-10))&&-9",Binop And (Uminus (Uminus (Const (-10)))) (Const (-9))),
  ("-(0||(-10||1+1)<=-(1-z))",Uminus (Binop Or (Const 0) (Binop LessEq (Binop Or (Const (-10)) (Binop Plus (Const 1) (Const 1))) (Uminus (Binop Minus (Const 1) (Var "z")))))),
  ("-22<=x",Binop LessEq (Const (-22)) (Var "x")),
  ("0<z||((1<=0)+0/-7||b)&&y",Binop Or (Binop Less (Const 0) (Var "z")) (Binop And (Binop Or (Binop Plus (Binop LessEq (Const 1) (Const 0)) (Binop Div (Const 0) (Const (-7)))) (Var "b")) (Var "y"))),
  ("-28",Const (-28)),
  ("-(-(-(1)*(-17==z)<=(a&&1||-(0))))",Uminus (Uminus (Binop LessEq (Binop Times (Uminus (Const 1)) (Binop Equal (Const (-17)) (Var "z"))) (Binop Or (Binop And (Var "a") (Const 1)) (Uminus (Const 0)))))),
  ("1<1",Binop Less (Const 1) (Const 1)),
  ("-22&&z",Binop And (Const (-22)) (Var "z")),
  ("-(b*x-((0<y<=1+1)-b))",Uminus (Binop Minus (Binop Times (Var "b") (Var "x")) (Binop Minus (Binop LessEq (Binop Less (Const 0) (Var "y")) (Binop Plus (Const 1) (Const 1))) (Var "b")))),
  ("0*(b*b/(z+0))",Binop Times (Const 0) (Binop Div (Binop Times (Var "b") (Var "b")) (Binop Plus (Var "z") (Const 0)))),
  ("1+((z<0-a)/((1<a)/(0/x))&&-(1||-(-28)))",Binop Plus (Const 1) (Binop And (Binop Div (Binop Less (Var "z") (Binop Minus (Const 0) (Var "a"))) (Binop Div (Binop Less (Const 1) (Var "a")) (Binop Div (Const 0) (Var "x")))) (Uminus (Binop Or (Const 1) (Uminus (Const (-28))))))),
  ("-(-((z&&y)<=-x))-(y||0--29*1==(-a<=0))",Binop Minus (Uminus (Uminus (Binop LessEq (Binop And (Var "z") (Var "y")) (Uminus (Var "x"))))) (Binop Or (Var "y") (Binop Equal (Binop Minus (Const 0) (Binop Times (Const (-29)) (Const 1))) (Binop LessEq (Uminus (Var "a")) (Const 0))))),
  ("-(-(-x+-19))||1<1",Binop Or (Uminus (Uminus (Binop Plus (Uminus (Var "x")) (Const (-19))))) (Binop Less (Const 1) (Const 1))),
  ("-20",Const (-20)),
  ("(1+((b<=1)-(15==z)+(-(21)==x)))/0",Binop Div (Binop Plus (Const 1) (Binop Plus (Binop Minus (Binop LessEq (Var "b") (Const 1)) (Binop Equal (Const 15) (Var "z"))) (Binop Equal (Uminus (Const 21)) (Var "x")))) (Const 0)),
  ("(0||0+-a&&16)*-21",Binop Times (Binop Or (Const 0) (Binop And (Binop Plus (Const 0) (Uminus (Var "a"))) (Const 16))) (Const (-21))),
  ("-25||(y==(z==z)*z||1)",Binop Or (Const (-25)) (Binop Or (Binop Equal (Var "y") (Binop Times (Binop Equal (Var "z") (Var "z")) (Var "z"))) (Const 1))),
  ("-(-12+(b--9)*(y||-4))/-a",Binop Div (Uminus (Binop Plus (Const (-12)) (Binop Times (Binop Minus (Var "b") (Const (-9))) (Binop Or (Var "y") (Const (-4)))))) (Uminus (Var "a"))),
  ("(0==x/1/x)+0/a/-x/(1&&1&&(b&&0))||a",Binop Or (Binop Plus (Binop Equal (Const 0) (Binop Div (Binop Div (Var "x") (Const 1)) (Var "x"))) (Binop Div (Binop Div (Binop Div (Const 0) (Var "a")) (Uminus (Var "x"))) (Binop And (Binop And (Const 1) (Const 1)) (Binop And (Var "b") (Const 0))))) (Var "a")),
  ("-(y&&a-0)",Uminus (Binop And (Var "y") (Binop Minus (Var "a") (Const 0)))),
  ("-(1*-4/-17)",Uminus (Binop Div (Binop Times (Const 1) (Const (-4))) (Const (-17)))),
  ("a&&z+-(0)<=1",Binop And (Var "a") (Binop LessEq (Binop Plus (Var "z") (Uminus (Const 0))) (Const 1))),
  ("((-(2)&&(b&&x))==1--28)-(1<-b+(-20+(0==1)))",Binop Minus (Binop Equal (Binop And (Uminus (Const 2)) (Binop And (Var "b") (Var "x"))) (Binop Minus (Const 1) (Const (-28)))) (Binop Less (Const 1) (Binop Plus (Uminus (Var "b")) (Binop Plus (Const (-20)) (Binop Equal (Const 0) (Const 1)))))),
  ("((-(0)<=0)*(-b*1)+1)/1",Binop Div (Binop Plus (Binop Times (Binop LessEq (Uminus (Const 0)) (Const 0)) (Binop Times (Uminus (Var "b")) (Const 1))) (Const 1)) (Const 1)),
  ("-17*((-(1)==(y<-x))/-(-(-(1))))",Binop Times (Const (-17)) (Binop Div (Binop Equal (Uminus (Const 1)) (Binop Less (Var "y") (Uminus (Var "x")))) (Uminus (Uminus (Uminus (Const 1)))))),
  ("-y+(y||x)||0",Binop Or (Binop Plus (Uminus (Var "y")) (Binop Or (Var "y") (Var "x"))) (Const 0)),
  ("0||1",Binop Or (Const 0) (Const 1)),
  ("-(-(1<=-5)-a&&-x)",Uminus (Binop And (Binop Minus (Uminus (Binop LessEq (Const 1) (Const (-5)))) (Var "a")) (Uminus (Var "x")))),
  ("-(1)&&-((x*-29<=-(0))-(y<=(b<y)))",Binop And (Uminus (Const 1)) (Uminus (Binop Minus (Binop LessEq (Binop Times (Var "x") (Const (-29))) (Uminus (Const 0))) (Binop LessEq (Var "y") (Binop Less (Var "b") (Var "y")))))),
  ("-(-z)",Uminus (Uminus (Var "z"))),
  ("(-(y&&b||0+a)||-6)--(-(z+18)/-16)",Binop Minus (Binop Or (Uminus (Binop Or (Binop And (Var "y") (Var "b")) (Binop Plus (Const 0) (Var "a")))) (Const (-6))) (Uminus (Binop Div (Uminus (Binop Plus (Var "z") (Const 18))) (Const (-16))))),
  ("21",Const 21),
  ("-16",Const (-16)),
  ("-17<=1",Binop LessEq (Const (-17)) (Const 1)),
  ("-(0)+-28-z-y",Binop Minus (Binop Minus (Binop Plus (Uminus (Const 0)) (Const (-28))) (Var "z")) (Var "y")),
  ("x+((-3+0)/(b&&0<=z)<=0)",Binop Plus (Var "x") (Binop LessEq (Binop Div (Binop Plus (Const (-3)) (Const 0)) (Binop And (Var "b") (Binop LessEq (Const 0) (Var "z")))) (Const 0))),
  ("a<(-y||x*b)&&-b&&b*(10<=0)",Binop And (Binop And (Binop Less (Var "a") (Binop Or (Uminus (Var "y")) (Binop Times (Var "x") (Var "b")))) (Uminus (Var "b"))) (Binop Times (Var "b") (Binop LessEq (Const 10) (Const 0)))),
  ("1*b",Binop Times (Const 1) (Var "b")),
  ("-(-(-b||-a)--((1==1)-(11||1)))",Uminus (Binop Minus (Uminus (Binop Or (Uminus (Var "b")) (Uminus (Var "a")))) (Uminus (Binop Minus (Binop Equal (Const 1) (Const 1)) (Binop Or (Const 11) (Const 1)))))),
  ("-(-(0*0)<(x==z/1))*-(1||-(0)&&y<a)",Binop Times (Uminus (Binop Less (Uminus (Binop Times (Const 0) (Const 0))) (Binop Equal (Var "x") (Binop Div (Var "z") (Const 1))))) (Uminus (Binop Or (Const 1) (Binop And (Uminus (Const 0)) (Binop Less (Var "y") (Var "a")))))),
  ("a||-(1)*a<=x",Binop Or (Var "a") (Binop LessEq (Binop Times (Uminus (Const 1)) (Var "a")) (Var "x"))),
  ("30<=-15",Binop LessEq (Const 30) (Const (-15))),
  ("-y<1<(a&&a||-10)*-21+28",Binop Less (Binop Less (Uminus (Var "y")) (Const 1)) (Binop Plus (Binop Times (Binop Or (Binop And (Var "a") (Var "a")) (Const (-10))) (Const (-21))) (Const 28))),
  ("-((a==a)--21/z-1<(1<=-(26==y)))",Uminus (Binop Less (Binop Minus (Binop Minus (Binop Equal (Var "a") (Var "a")) (Binop Div (Const (-21)) (Var "z"))) (Const 1)) (Binop LessEq (Const 1) (Uminus (Binop Equal (Const 26) (Var "y")))))),
  ("1*((y<=(1&&z))*a)<(a*-(0)==-(1))-a",Binop Less (Binop Times (Const 1) (Binop Times (Binop LessEq (Var "y") (Binop And (Const 1) (Var "z"))) (Var "a"))) (Binop Minus (Binop Equal (Binop Times (Var "a") (Uminus (Const 0))) (Uminus (Const 1))) (Var "a"))),
  ("y-(1||1)&&-23",Binop And (Binop Minus (Var "y") (Binop Or (Const 1) (Const 1))) (Const (-23))),
  ("(0||a==(0==0))/y||(1==(-2==b))-0/(b/y)-(-26||z+10)/y",Binop Or (Binop Div (Binop Or (Const 0) (Binop Equal (Var "a") (Binop Equal (Const 0) (Const 0)))) (Var "y")) (Binop Minus (Binop Minus (Binop Equal (Const 1) (Binop Equal (Const (-2)) (Var "b"))) (Binop Div (Const 0) (Binop Div (Var "b") (Var "y")))) (Binop Div (Binop Or (Const (-26)) (Binop Plus (Var "z") (Const 10))) (Var "y")))),
  ("-(1||a+a*y==a)",Uminus (Binop Or (Const 1) (Binop Equal (Binop Plus (Var "a") (Binop Times (Var "a") (Var "y"))) (Var "a")))),
  ("-9*(-(-8)||-(-(0)))==(z&&1)",Binop Equal (Binop Times (Const (-9)) (Binop Or (Uminus (Const (-8))) (Uminus (Uminus (Const 0))))) (Binop And (Var "z") (Const 1))),
  ("-(-((-22<0)/(-13/x)))<=-(15)",Binop LessEq (Uminus (Uminus (Binop Div (Binop Less (Const (-22)) (Const 0)) (Binop Div (Const (-13)) (Var "x"))))) (Uminus (Const 15))),
  ("(0-y)*((0<1<=-z)+-(b<=x)<y)",Binop Times (Binop Minus (Const 0) (Var "y")) (Binop Less (Binop Plus (Binop LessEq (Binop Less (Const 0) (Const 1)) (Uminus (Var "z"))) (Uminus (Binop LessEq (Var "b") (Var "x")))) (Var "y"))),
  ("-(b/((x<y)*z))<=-(0/(0<z)==b)",Binop LessEq (Uminus (Binop Div (Var "b") (Binop Times (Binop Less (Var "x") (Var "y")) (Var "z")))) (Uminus (Binop Equal (Binop Div (Const 0) (Binop Less (Const 0) (Var "z"))) (Var "b")))),
  ("y==-(-(b*-28)<=1+(a+x))",Binop Equal (Var "y") (Uminus (Binop LessEq (Uminus (Binop Times (Var "b") (Const (-28)))) (Binop Plus (Const 1) (Binop Plus (Var "a") (Var "x")))))),
  ("(3-1)/-3",Binop Div (Binop Minus (Const 3) (Const 1)) (Const (-3))),
  ("-(5)-((0&&-2)<(1<a)||-(1))==0",Binop Equal (Binop Minus (Uminus (Const 5)) (Binop Or (Binop Less (Binop And (Const 0) (Const (-2))) (Binop Less (Const 1) (Var "a"))) (Uminus (Const 1)))) (Const 0)),
  ("y&&z",Binop And (Var "y") (Var "z")),
  ("-(-x&&0*(y/y)<=(-(-11)&&-x))",Uminus (Binop And (Uminus (Var "x")) (Binop LessEq (Binop Times (Const 0) (Binop Div (Var "y") (Var "y"))) (Binop And (Uminus (Const (-11))) (Uminus (Var "x")))))),
  ("-(-(b||-a))",Uminus (Uminus (Binop Or (Var "b") (Uminus (Var "a"))))),
  ("y&&a*1+-y/((x||1)+0)",Binop And (Var "y") (Binop Plus (Binop Times (Var "a") (Const 1)) (Binop Div (Uminus (Var "y")) (Binop Plus (Binop Or (Var "x") (Const 1)) (Const 0))))),
  ("x<=0",Binop LessEq (Var "x") (Const 0)),
  ("a<=3",Binop LessEq (Var "a") (Const 3)),
  ("10",Const 10),
  ("0<1",Binop Less (Const 0) (Const 1)),
  ("-(z+-(b-17/a))",Uminus (Binop Plus (Var "z") (Uminus (Binop Minus (Var "b") (Binop Div (Const 17) (Var "a")))))),
  ("x+(1==1)",Binop Plus (Var "x") (Binop Equal (Const 1) (Const 1))),
  ("-(0/1*(b-0)/(1==y-z))/6",Binop Div (Uminus (Binop Div (Binop Times (Binop Div (Const 0) (Const 1)) (Binop Minus (Var "b") (Const 0))) (Binop Equal (Const 1) (Binop Minus (Var "y") (Var "z"))))) (Const 6)),
  ("-((1<=b&&0-1||b)<a)",Uminus (Binop Less (Binop Or (Binop And (Binop LessEq (Const 1) (Var "b")) (Binop Minus (Const 0) (Const 1))) (Var "b")) (Var "a"))),
  ("a+-z",Binop Plus (Var "a") (Uminus (Var "z"))),
  ("(a==b||-(1)==a)*y",Binop Times (Binop Or (Binop Equal (Var "a") (Var "b")) (Binop Equal (Uminus (Const 1)) (Var "a"))) (Var "y")),
  ("-(1)*2*(y||-x)+z",Binop Plus (Binop Times (Binop Times (Uminus (Const 1)) (Const 2)) (Binop Or (Var "y") (Uminus (Var "x")))) (Var "z")),
  ("((0&&a)-x<z)*(1<=a<=1&&b<b)<0",Binop Less (Binop Times (Binop Less (Binop Minus (Binop And (Const 0) (Var "a")) (Var "x")) (Var "z")) (Binop And (Binop LessEq (Binop LessEq (Const 1) (Var "a")) (Const 1)) (Binop Less (Var "b") (Var "b")))) (Const 0)),
  ("y==-(1)",Binop Equal (Var "y") (Uminus (Const 1))),
  ("6==(3||-(1))",Binop Equal (Const 6) (Binop Or (Const 3) (Uminus (Const 1)))),
  ("1-(-25/1-(-(7)&&(0||25))*(y<z&&9))",Binop Minus (Const 1) (Binop Minus (Binop Div (Const (-25)) (Const 1)) (Binop Times (Binop And (Uminus (Const 7)) (Binop Or (Const 0) (Const 25))) (Binop And (Binop Less (Var "y") (Var "z")) (Const 9))))),
  ("b<-23",Binop Less (Var "b") (Const (-23))),
  ("-(-(-y))",Uminus (Uminus (Uminus (Var "y")))),
  ("0+1",Binop Plus (Const 0) (Const 1)),
  ("1/1",Binop Div (Const 1) (Const 1)),
  ("(b<(b<21)+x*x)-((1||b)==1==(1&&z-a))||a<=y",Binop Or (Binop Minus (Binop Less (Var "b") (Binop Plus (Binop Less (Var "b") (Const 21)) (Binop Times (Var "x") (Var "x")))) (Binop Equal (Binop Equal (Binop Or (Const 1) (Var "b")) (Const 1)) (Binop And (Const 1) (Binop Minus (Var "z") (Var "a"))))) (Binop LessEq (Var "a") (Var "y"))),
  ("1||0",Binop Or (Const 1) (Const 0)),
  ("(z<1)/z/1",Binop Div (Binop Div (Binop Less (Var "z") (Const 1)) (Var "z")) (Const 1)),
  ("-((0==(0*x==-(0)))*(a<(z<(a==y))))",Uminus (Binop Times (Binop Equal (Const 0) (Binop Equal (Binop Times (Const 0) (Var "x")) (Uminus (Const 0)))) (Binop Less (Var "a") (Binop Less (Var "z") (Binop Equal (Var "a") (Var "y")))))),
  ("-19*0||-10",Binop Or (Binop Times (Const (-19)) (Const 0)) (Const (-10))),
  ("a*y",Binop Times (Var "a") (Var "y")),
  ("-(-((y<=1)/a))&&-(x||1)/a--21",Binop And (Uminus (Uminus (Binop Div (Binop LessEq (Var "y") (Const 1)) (Var "a")))) (Binop Minus (Binop Div (Uminus (Binop Or (Var "x") (Const 1))) (Var "a")) (Const (-21)))),
  ("-(a&&((a<=y)+(11||z)||1))",Uminus (Binop And (Var "a") (Binop Or (Binop Plus (Binop LessEq (Var "a") (Var "y")) (Binop Or (Const 11) (Var "z"))) (Const 1)))),
  ("-(-(b+a))<b&&0",Binop And (Binop Less (Uminus (Uminus (Binop Plus (Var "b") (Var "a")))) (Var "b")) (Const 0)),
  ("-2+(0&&1)||0",Binop Or (Binop Plus (Const (-2)) (Binop And (Const 0) (Const 1))) (Const 0)),
  ("(y||0)+0",Binop Plus (Binop Or (Var "y") (Const 0)) (Const 0)),
  ("1/(0<=x||1-1)/-(-(-(0)+y))",Binop Div (Binop Div (Const 1) (Binop Or (Binop LessEq (Const 0) (Var "x")) (Binop Minus (Const 1) (Const 1)))) (Uminus (Uminus (Binop Plus (Uminus (Const 0)) (Var "y"))))),
  ("4",Const 4),
  ("(z||14)*b",Binop Times (Binop Or (Var "z") (Const 14)) (Var "b")),
  ("-(x*y)-0<=15",Binop LessEq (Binop Minus (Uminus (Binop Times (Var "x") (Var "y"))) (Const 0)) (Const 15)),
  ("y<z",Binop Less (Var "y") (Var "z")),
  ("a*(((-13*b&&1/z)+0)*(1<x))",Binop Times (Var "a") (Binop Times (Binop Plus (Binop And (Binop Times (Const (-13)) (Var "b")) (Binop Div (Const 1) (Var "z"))) (Const 0)) (Binop Less (Const 1) (Var "x")))),
  ("-(-x<16+(1/30<=(9||1)))",Uminus (Binop Less (Uminus (Var "x")) (Binop Plus (Const 16) (Binop LessEq (Binop Div (Const 1) (Const 30)) (Binop Or (Const 9) (Const 1)))))),
  ("-(0&&z)&&-(-(1))",Binop And (Uminus (Binop And (Const 0) (Var "z"))) (Uminus (Uminus (Const 1)))),
  ("-((-(-a)<11)-(-z||-b))",Uminus (Binop Minus (Binop Less (Uminus (Uminus (Var "a"))) (Const 11)) (Binop Or (Uminus (Var "z")) (Uminus (Var "b"))))),
  ("(27+1&&x)*-b<=-6*(0<a==1-x)==b",Binop Equal (Binop LessEq (Binop Times (Binop And (Binop Plus (Const 27) (Const 1)) (Var "x")) (Uminus (Var "b"))) (Binop Times (Const (-6)) (Binop Equal (Binop Less (Const 0) (Var "a")) (Binop Minus (Const 1) (Var "x"))))) (Var "b")),
  ("y<(b<0)&&((z<=16)*0&&a)+(a&&9&&25)",Binop And (Binop Less (Var "y") (Binop Less (Var "b") (Const 0))) (Binop Plus (Binop And (Binop Times (Binop LessEq (Var "z") (Const 16)) (Const 0)) (Var "a")) (Binop And (Binop And (Var "a") (Const 9)) (Const 25)))),
  ("-(y/-b==((y==0)+0/1)/a)",Uminus (Binop Equal (Binop Div (Var "y") (Uminus (Var "b"))) (Binop Div (Binop Plus (Binop Equal (Var "y") (Const 0)) (Binop Div (Const 0) (Const 1))) (Var "a")))),
  ("z==13",Binop Equal (Var "z") (Const 13)),
  ("-a+1<y<1<=-x",Binop LessEq (Binop Less (Binop Less (Binop Plus (Uminus (Var "a")) (Const 1)) (Var "y")) (Const 1)) (Uminus (Var "x"))),
  ("-4+(a||4)--(0)==x<=x-0",Binop LessEq (Binop Equal (Binop Minus (Binop Plus (Const (-4)) (Binop Or (Var "a") (Const 4))) (Uminus (Const 0))) (Var "x")) (Binop Minus (Var "x") (Const 0))),
  ("-(29)",Uminus (Const 29)),
  ("(-5&&a)<b<(((y==1)-(z<=z)||b+-12)==z)",Binop Less (Binop Less (Binop And (Const (-5)) (Var "a")) (Var "b")) (Binop Equal (Binop Or (Binop Minus (Binop Equal (Var "y") (Const 1)) (Binop LessEq (Var "z") (Var "z"))) (Binop Plus (Var "b") (Const (-12)))) (Var "z"))),
  ("b<=1",Binop LessEq (Var "b") (Const 1))
  ]

test_small_expr_pairs_random = [
  ("8",Const 8),
  ("21",Const 21),
  ("x",Var "x"),
  ("(b==y)/((1||17)&&-b<0<(0+1==b))",Binop Div (Binop Equal (Var "b") (Var "y")) (Binop And (Binop Or (Const 1) (Const 17)) (Binop Less (Binop Less (Uminus (Var "b")) (Const 0)) (Binop Equal (Binop Plus (Const 0) (Const 1)) (Var "b"))))),
  ("y+-(-b)+-(1)<=0",Binop LessEq (Binop Plus (Binop Plus (Var "y") (Uminus (Uminus (Var "b")))) (Uminus (Const 1))) (Const 0)),
  ("z",Var "z"),
  ("-19",Const (-19)),
  ("a*-x",Binop Times (Var "a") (Uminus (Var "x"))),
  ("a",Var "a"),
  ("11",Const 11),
  ("-y<-a&&0",Binop And (Binop Less (Uminus (Var "y")) (Uminus (Var "a"))) (Const 0)),
  ("b",Var "b"),
  ("22",Const 22),
  ("-(-(-x)+x)",Uminus (Binop Plus (Uminus (Uminus (Var "x"))) (Var "x"))),
  ("0",Const 0),
  ("1",Const 1),
  ("-y*0",Binop Times (Uminus (Var "y")) (Const 0)),
  ("-(-(0))",Uminus (Uminus (Const 0))),
  ("y/-x",Binop Div (Var "y") (Uminus (Var "x"))),
  ("-6",Const (-6)),
  ("-(z+(z||1))+y",Binop Plus (Uminus (Binop Plus (Var "z") (Binop Or (Var "z") (Const 1)))) (Var "y")),
  ("0/0+1==-9",Binop Equal (Binop Plus (Binop Div (Const 0) (Const 0)) (Const 1)) (Const (-9))),
  ("-16==(11<b&&1)",Binop Equal (Const (-16)) (Binop And (Binop Less (Const 11) (Var "b")) (Const 1))),
  ("-8<=z-x",Binop LessEq (Const (-8)) (Binop Minus (Var "z") (Var "x"))),
  ("-18",Const (-18)),
  ("0+y",Binop Plus (Const 0) (Var "y")),
  ("-23",Const (-23)),
  ("-(-17)",Uminus (Const (-17))),
  ("z<z",Binop Less (Var "z") (Var "z")),
  ("6",Const 6),
  ("1==a",Binop Equal (Const 1) (Var "a")),
  ("-12",Const (-12)),
  ("y&&b",Binop And (Var "y") (Var "b")),
  ("-x",Uminus (Var "x")),
  ("1*(a+b||z||b)/(b&&-(0||z))",Binop Div (Binop Times (Const 1) (Binop Or (Binop Or (Binop Plus (Var "a") (Var "b")) (Var "z")) (Var "b"))) (Binop And (Var "b") (Uminus (Binop Or (Const 0) (Var "z"))))),
  ("0&&1<(0&&0||z)*0",Binop And (Const 0) (Binop Less (Const 1) (Binop Times (Binop Or (Binop And (Const 0) (Const 0)) (Var "z")) (Const 0)))),
  ("-(y*-11<=b)",Uminus (Binop LessEq (Binop Times (Var "y") (Const (-11))) (Var "b"))),
  ("-z*0",Binop Times (Uminus (Var "z")) (Const 0)),
  ("y<=y",Binop LessEq (Var "y") (Var "y")),
  ("(0<=a)*(-(1)<(b||2/y))",Binop Times (Binop LessEq (Const 0) (Var "a")) (Binop Less (Uminus (Const 1)) (Binop Or (Var "b") (Binop Div (Const 2) (Var "y"))))),
  ("-16",Const (-16)),
  ("-z",Uminus (Var "z")),
  ("y*(((x||a)<=a==-(0))*0)",Binop Times (Var "y") (Binop Times (Binop Equal (Binop LessEq (Binop Or (Var "x") (Var "a")) (Var "a")) (Uminus (Const 0))) (Const 0))),
  ("(z&&-(0))<0-x",Binop Less (Binop And (Var "z") (Uminus (Const 0))) (Binop Minus (Const 0) (Var "x"))),
  ("(z<(y*z&&0+-11))*1--(1)",Binop Minus (Binop Times (Binop Less (Var "z") (Binop And (Binop Times (Var "y") (Var "z")) (Binop Plus (Const 0) (Const (-11))))) (Const 1)) (Uminus (Const 1))),
  ("z&&y",Binop And (Var "z") (Var "y")),
  ("(b||z)==b&&0",Binop And (Binop Equal (Binop Or (Var "b") (Var "z")) (Var "b")) (Const 0)),
  ("x*z",Binop Times (Var "x") (Var "z")),
  ("-(1)+0",Binop Plus (Uminus (Const 1)) (Const 0)),
  ("a<=-(-x)-1==12",Binop Equal (Binop LessEq (Var "a") (Binop Minus (Uminus (Uminus (Var "x"))) (Const 1))) (Const 12)),
  ("y",Var "y"),
  ("x<z/(b<-(-24))<=x*(-(0)==-(1))",Binop LessEq (Binop Less (Var "x") (Binop Div (Var "z") (Binop Less (Var "b") (Uminus (Const (-24)))))) (Binop Times (Var "x") (Binop Equal (Uminus (Const 0)) (Uminus (Const 1))))),
  ("-(1)",Uminus (Const 1)),
  ("13",Const 13),
  ("y*(((-23||z)<-y)*z)+x",Binop Plus (Binop Times (Var "y") (Binop Times (Binop Less (Binop Or (Const (-23)) (Var "z")) (Uminus (Var "y"))) (Var "z"))) (Var "x")),
  ("-(b+0)",Uminus (Binop Plus (Var "b") (Const 0))),
  ("z&&(-(-a)&&-(-(0)))",Binop And (Var "z") (Binop And (Uminus (Uminus (Var "a"))) (Uminus (Uminus (Const 0))))),
  ("1<=(a==30)",Binop LessEq (Const 1) (Binop Equal (Var "a") (Const 30))),
  ("-27",Const (-27)),
  ("x+x",Binop Plus (Var "x") (Var "x")),
  ("-b-(a==z)",Binop Minus (Uminus (Var "b")) (Binop Equal (Var "a") (Var "z"))),
  ("4",Const 4),
  ("-(-20)-(1-(-(0)<-(0)))",Binop Minus (Uminus (Const (-20))) (Binop Minus (Const 1) (Binop Less (Uminus (Const 0)) (Uminus (Const 0))))),
  ("1-(1-a)",Binop Minus (Const 1) (Binop Minus (Const 1) (Var "a"))),
  ("-b",Uminus (Var "b")),
  ("-(1)||y",Binop Or (Uminus (Const 1)) (Var "y")),
  ("30",Const 30),
  ("-26",Const (-26)),
  ("-(0)",Uminus (Const 0)),
  ("y||1",Binop Or (Var "y") (Const 1)),
  ("-y",Uminus (Var "y")),
  ("a<b",Binop Less (Var "a") (Var "b")),
  ("-20",Const (-20)),
  ("0/y",Binop Div (Const 0) (Var "y")),
  ("1*y<=-(27)/1",Binop LessEq (Binop Times (Const 1) (Var "y")) (Binop Div (Uminus (Const 27)) (Const 1))),
  ("z+b",Binop Plus (Var "z") (Var "b")),
  ("-((b<a)*(a-y))",Uminus (Binop Times (Binop Less (Var "b") (Var "a")) (Binop Minus (Var "a") (Var "y")))),
  ("-(0)==(-21<25)<18",Binop Less (Binop Equal (Uminus (Const 0)) (Binop Less (Const (-21)) (Const 25))) (Const 18)),
  ("21==1",Binop Equal (Const 21) (Const 1)),
  ("0*b",Binop Times (Const 0) (Var "b")),
  ("1+1&&(b||b)",Binop And (Binop Plus (Const 1) (Const 1)) (Binop Or (Var "b") (Var "b"))),
  ("y||b",Binop Or (Var "y") (Var "b")),
  ("-21",Const (-21)),
  ("0+x",Binop Plus (Const 0) (Var "x")),
  ("7",Const 7),
  ("b*b/1+0<=(-(z<x)--8)*x",Binop LessEq (Binop Plus (Binop Div (Binop Times (Var "b") (Var "b")) (Const 1)) (Const 0)) (Binop Times (Binop Minus (Uminus (Binop Less (Var "z") (Var "x"))) (Const (-8))) (Var "x"))),
  ("20",Const 20),
  ("7&&0",Binop And (Const 7) (Const 0)),
  ("z-(-x+(0||z))<=-(-(b-x))||0",Binop Or (Binop LessEq (Binop Minus (Var "z") (Binop Plus (Uminus (Var "x")) (Binop Or (Const 0) (Var "z")))) (Uminus (Uminus (Binop Minus (Var "b") (Var "x"))))) (Const 0)),
  ("-(-a/-7)",Uminus (Binop Div (Uminus (Var "a")) (Const (-7)))),
  ("1-(z-y+((0||1)<-(0)<(x&&y)))",Binop Minus (Const 1) (Binop Plus (Binop Minus (Var "z") (Var "y")) (Binop Less (Binop Less (Binop Or (Const 0) (Const 1)) (Uminus (Const 0))) (Binop And (Var "x") (Var "y"))))),
  ("24",Const 24),
  ("z<=0",Binop LessEq (Var "z") (Const 0)),
  ("(4==z--(-10))/-x==a",Binop Equal (Binop Div (Binop Equal (Const 4) (Binop Minus (Var "z") (Uminus (Const (-10))))) (Uminus (Var "x"))) (Var "a")),
  ("(1<(x||20))*((x==0)*(0==0))-y==0",Binop Equal (Binop Minus (Binop Times (Binop Less (Const 1) (Binop Or (Var "x") (Const 20))) (Binop Times (Binop Equal (Var "x") (Const 0)) (Binop Equal (Const 0) (Const 0)))) (Var "y")) (Const 0)),
  ("(29||0)<=(-(0)<x<=0*z+0<(-(0)&&a))",Binop LessEq (Binop Or (Const 29) (Const 0)) (Binop Less (Binop LessEq (Binop Less (Uminus (Const 0)) (Var "x")) (Binop Plus (Binop Times (Const 0) (Var "z")) (Const 0))) (Binop And (Uminus (Const 0)) (Var "a")))),
  ("y*a",Binop Times (Var "y") (Var "a")),
  ("a&&-(b*b==0)",Binop And (Var "a") (Uminus (Binop Equal (Binop Times (Var "b") (Var "b")) (Const 0)))),
  ("0+a",Binop Plus (Const 0) (Var "a")),
  ("(y==1)*z",Binop Times (Binop Equal (Var "y") (Const 1)) (Var "z")),
  ("-22",Const (-22)),
  ("-(1)<=-(-a)<=y",Binop LessEq (Binop LessEq (Uminus (Const 1)) (Uminus (Uminus (Var "a")))) (Var "y")),
  ("17",Const 17),
  ("y==17",Binop Equal (Var "y") (Const 17)),
  ("z-1",Binop Minus (Var "z") (Const 1)),
  ("0||0",Binop Or (Const 0) (Const 0)),
  ("-14",Const (-14)),
  ("1/-z<a==a<b",Binop Less (Binop Equal (Binop Less (Binop Div (Const 1) (Uminus (Var "z"))) (Var "a")) (Var "a")) (Var "b")),
  ("z-x",Binop Minus (Var "z") (Var "x")),
  ("(0||0)*-(-(y/x))<=((z||x)/1||z-b)+(1||26<1)",Binop LessEq (Binop Times (Binop Or (Const 0) (Const 0)) (Uminus (Uminus (Binop Div (Var "y") (Var "x"))))) (Binop Plus (Binop Or (Binop Div (Binop Or (Var "z") (Var "x")) (Const 1)) (Binop Minus (Var "z") (Var "b"))) (Binop Or (Const 1) (Binop Less (Const 26) (Const 1))))),
  ("1+x",Binop Plus (Const 1) (Var "x")),
  ("27",Const 27),
  ("-(0||30)",Uminus (Binop Or (Const 0) (Const 30))),
  ("x*(b+1)",Binop Times (Var "x") (Binop Plus (Var "b") (Const 1))),
  ("-(1<=1-(-(-11)<(y<=0)))",Uminus (Binop LessEq (Const 1) (Binop Minus (Const 1) (Binop Less (Uminus (Const (-11))) (Binop LessEq (Var "y") (Const 0)))))),
  ("-11",Const (-11)),
  ("y||0&&26",Binop Or (Var "y") (Binop And (Const 0) (Const 26))),
  ("((0||x)<=a)/a&&b",Binop And (Binop Div (Binop LessEq (Binop Or (Const 0) (Var "x")) (Var "a")) (Var "a")) (Var "b")),
  ("-30",Const (-30)),
  ("-(a/(-19&&1))",Uminus (Binop Div (Var "a") (Binop And (Const (-19)) (Const 1)))),
  ("29",Const 29),
  ("a+-(-5)<=0",Binop LessEq (Binop Plus (Var "a") (Uminus (Const (-5)))) (Const 0)),
  ("1-(0<y-x)",Binop Minus (Const 1) (Binop Less (Const 0) (Binop Minus (Var "y") (Var "x")))),
  ("-x+-x",Binop Plus (Uminus (Var "x")) (Uminus (Var "x"))),
  ("(z||0)<x",Binop Less (Binop Or (Var "z") (Const 0)) (Var "x")),
  ("x<-(-9)||b",Binop Or (Binop Less (Var "x") (Uminus (Const (-9)))) (Var "b")),
  ("1*0",Binop Times (Const 1) (Const 0)),
  ("-28==-(b<=-23==b)&&0",Binop And (Binop Equal (Const (-28)) (Uminus (Binop Equal (Binop LessEq (Var "b") (Const (-23))) (Var "b")))) (Const 0)),
  ("-19==1",Binop Equal (Const (-19)) (Const 1)),
  ("-28+3",Binop Plus (Const (-28)) (Const 3)),
  ("1<=0",Binop LessEq (Const 1) (Const 0)),
  ("-(1)==(-30<(0&&x<=z)<a)",Binop Equal (Uminus (Const 1)) (Binop Less (Binop Less (Const (-30)) (Binop And (Const 0) (Binop LessEq (Var "x") (Var "z")))) (Var "a"))),
  ("z+1",Binop Plus (Var "z") (Const 1)),
  ("-(a+(0<=b)==y)",Uminus (Binop Equal (Binop Plus (Var "a") (Binop LessEq (Const 0) (Var "b"))) (Var "y"))),
  ("((y<=(b<=1==-1))+b)/14",Binop Div (Binop Plus (Binop LessEq (Var "y") (Binop Equal (Binop LessEq (Var "b") (Const 1)) (Const (-1)))) (Var "b")) (Const 14)),
  ("-(-(z+z)&&(1*0==a)/(b-x||0))",Uminus (Binop And (Uminus (Binop Plus (Var "z") (Var "z"))) (Binop Div (Binop Equal (Binop Times (Const 1) (Const 0)) (Var "a")) (Binop Or (Binop Minus (Var "b") (Var "x")) (Const 0))))),
  ("2",Const 2),
  ("-(-27)",Uminus (Const (-27))),
  ("-x+a",Binop Plus (Uminus (Var "x")) (Var "a")),
  ("-(0*x)==(1<=(0||z<b)&&y)",Binop Equal (Uminus (Binop Times (Const 0) (Var "x"))) (Binop And (Binop LessEq (Const 1) (Binop Or (Const 0) (Binop Less (Var "z") (Var "b")))) (Var "y"))),
  ("(1<-30)+(x-b*z)",Binop Plus (Binop Less (Const 1) (Const (-30))) (Binop Minus (Var "x") (Binop Times (Var "b") (Var "z")))),
  ("0*a",Binop Times (Const 0) (Var "a")),
  ("(y&&28<=(-19||b))/(4<(z||-(-b)))",Binop Div (Binop And (Var "y") (Binop LessEq (Const 28) (Binop Or (Const (-19)) (Var "b")))) (Binop Less (Const 4) (Binop Or (Var "z") (Uminus (Uminus (Var "b")))))),
  ("1+0<-3",Binop Less (Binop Plus (Const 1) (Const 0)) (Const (-3))),
  ("-24",Const (-24)),
  ("b/0",Binop Div (Var "b") (Const 0)),
  ("a-0",Binop Minus (Var "a") (Const 0)),
  ("(1&&0)/a--24",Binop Minus (Binop Div (Binop And (Const 1) (Const 0)) (Var "a")) (Const (-24))),
  ("a==x",Binop Equal (Var "a") (Var "x")),
  ("0/19",Binop Div (Const 0) (Const 19)),
  ("z+z",Binop Plus (Var "z") (Var "z")),
  ("0*-(-(y<=b))*0",Binop Times (Binop Times (Const 0) (Uminus (Uminus (Binop LessEq (Var "y") (Var "b"))))) (Const 0)),
  ("-6&&a",Binop And (Const (-6)) (Var "a")),
  ("-(1-0)",Uminus (Binop Minus (Const 1) (Const 0))),
  ("z+-(0)",Binop Plus (Var "z") (Uminus (Const 0))),
  ("23",Const 23),
  ("4==b",Binop Equal (Const 4) (Var "b")),
  ("-(4)",Uminus (Const 4)),
  ("-(-1)",Uminus (Const (-1))),
  ("9",Const 9),
  ("a*-(0)",Binop Times (Var "a") (Uminus (Const 0))),
  ("b*y",Binop Times (Var "b") (Var "y")),
  ("0-y",Binop Minus (Const 0) (Var "y")),
  ("y<z<(x/(-30-x)+y||a)",Binop Less (Binop Less (Var "y") (Var "z")) (Binop Or (Binop Plus (Binop Div (Var "x") (Binop Minus (Const (-30)) (Var "x"))) (Var "y")) (Var "a"))),
  ("0<=x+-9+7",Binop LessEq (Const 0) (Binop Plus (Binop Plus (Var "x") (Const (-9))) (Const 7))),
  ("(a-a)*z",Binop Times (Binop Minus (Var "a") (Var "a")) (Var "z")),
  ("z<((1&&b)<(b==a))==(0&&a-y)<(22<(a==-z))",Binop Less (Binop Equal (Binop Less (Var "z") (Binop Less (Binop And (Const 1) (Var "b")) (Binop Equal (Var "b") (Var "a")))) (Binop And (Const 0) (Binop Minus (Var "a") (Var "y")))) (Binop Less (Const 22) (Binop Equal (Var "a") (Uminus (Var "z"))))),
  ("0*1-1&&a",Binop And (Binop Minus (Binop Times (Const 0) (Const 1)) (Const 1)) (Var "a")),
  ("y<=1",Binop LessEq (Var "y") (Const 1)),
  ("x<b-(z-(z||z))",Binop Less (Var "x") (Binop Minus (Var "b") (Binop Minus (Var "z") (Binop Or (Var "z") (Var "z"))))),
  ("x<0-y",Binop Less (Var "x") (Binop Minus (Const 0) (Var "y"))),
  ("b<-12",Binop Less (Var "b") (Const (-12))),
  ("-(-(0-z))",Uminus (Uminus (Binop Minus (Const 0) (Var "z")))),
  ("(1--(-(-2)||(-13||x)))*(-22/a*y)",Binop Times (Binop Minus (Const 1) (Uminus (Binop Or (Uminus (Const (-2))) (Binop Or (Const (-13)) (Var "x"))))) (Binop Times (Binop Div (Const (-22)) (Var "a")) (Var "y"))),
  ("0-a",Binop Minus (Const 0) (Var "a")),
  ("0<=(z<-(-(0)))",Binop LessEq (Const 0) (Binop Less (Var "z") (Uminus (Uminus (Const 0))))),
  ("0==(1<=1)",Binop Equal (Const 0) (Binop LessEq (Const 1) (Const 1))),
  ("x*x",Binop Times (Var "x") (Var "x")),
  ("1<b",Binop Less (Const 1) (Var "b")),
  ("(1-15)/1",Binop Div (Binop Minus (Const 1) (Const 15)) (Const 1)),
  ("0&&1",Binop And (Const 0) (Const 1)),
  ("b*(-2/y&&a)",Binop Times (Var "b") (Binop And (Binop Div (Const (-2)) (Var "y")) (Var "a"))),
  ("0&&(b<1)/(0*a)==-12",Binop And (Const 0) (Binop Equal (Binop Div (Binop Less (Var "b") (Const 1)) (Binop Times (Const 0) (Var "a"))) (Const (-12)))),
  ("0-(0&&-(0))",Binop Minus (Const 0) (Binop And (Const 0) (Uminus (Const 0)))),
  ("(-(1)||1)<z",Binop Less (Binop Or (Uminus (Const 1)) (Const 1)) (Var "z")),
  ("0||1*1",Binop Or (Const 0) (Binop Times (Const 1) (Const 1))),
  ("-((-(12)||-a)--(0*(z*x)))",Uminus (Binop Minus (Binop Or (Uminus (Const 12)) (Uminus (Var "a"))) (Uminus (Binop Times (Const 0) (Binop Times (Var "z") (Var "x")))))),
  ("0<=-(1)",Binop LessEq (Const 0) (Uminus (Const 1))),
  ("1/-(-18)",Binop Div (Const 1) (Uminus (Const (-18)))),
  ("a*11",Binop Times (Var "a") (Const 11)),
  ("a/-(0)*21",Binop Times (Binop Div (Var "a") (Uminus (Const 0))) (Const 21)),
  ("0==a",Binop Equal (Const 0) (Var "a")),
  ("a==1<(-28<=y)-21",Binop Less (Binop Equal (Var "a") (Const 1)) (Binop Minus (Binop LessEq (Const (-28)) (Var "y")) (Const 21))),
  ("-(-z&&-22)",Uminus (Binop And (Uminus (Var "z")) (Const (-22)))),
  ("x-x",Binop Minus (Var "x") (Var "x")),
  ("-11&&(0==0==a)-(b<(x<1))&&0/(a<=1)",Binop And (Binop And (Const (-11)) (Binop Minus (Binop Equal (Binop Equal (Const 0) (Const 0)) (Var "a")) (Binop Less (Var "b") (Binop Less (Var "x") (Const 1))))) (Binop Div (Const 0) (Binop LessEq (Var "a") (Const 1)))),
  ("(-28-y*-(-18))*0",Binop Times (Binop Minus (Const (-28)) (Binop Times (Var "y") (Uminus (Const (-18))))) (Const 0)),
  ("a-((-19&&-14)==-14||x)||1",Binop Or (Binop Minus (Var "a") (Binop Or (Binop Equal (Binop And (Const (-19)) (Const (-14))) (Const (-14))) (Var "x"))) (Const 1)),
  ("-(10==1)",Uminus (Binop Equal (Const 10) (Const 1))),
  ("-15",Const (-15)),
  ("-a",Uminus (Var "a"))
  ]

test_com_pairs_random = [
  ("a = -(0)||y",Assign "a" (Binop Or (Uminus (Const 0)) (Var "y"))),
  ("if z then {\n  a = 1<z;\n  while 0 do {}\n} else\n  b = y<y",If (Var "z") (Seq [Assign "a" (Binop Less (Const 1) (Var "z")),While (Const 0) (Seq [])]) (Assign "b" (Binop Less (Var "y") (Var "y")))),
  ("if 0 then {\n  z = 1;\n  a = y<=1;\n  b = 1;\n  x = 0&&-(-b);\n  y = x&&-16;\n  z = 23;\n  if 1 then\n    if y then\n      if a<x then {} else {}\n    else {}\n  else\n    b = (19+21)*y/(-18/(y+a))\n} else {\n  z = 1;\n  z = 0;\n  y = -1*0;\n  z = -y+1;\n  while -(1) do\n    if 0&&-23&&0 then\n      z = 1\n    else\n      a = -(21);\n  z = b\n}",If (Const 0) (Seq [Assign "z" (Const 1),Assign "a" (Binop LessEq (Var "y") (Const 1)),Assign "b" (Const 1),Assign "x" (Binop And (Const 0) (Uminus (Uminus (Var "b")))),Assign "y" (Binop And (Var "x") (Const (-16))),Assign "z" (Const 23),If (Const 1) (If (Var "y") (If (Binop Less (Var "a") (Var "x")) (Seq []) (Seq [])) (Seq [])) (Assign "b" (Binop Div (Binop Times (Binop Plus (Const 19) (Const 21)) (Var "y")) (Binop Div (Const (-18)) (Binop Plus (Var "y") (Var "a")))))]) (Seq [Assign "z" (Const 1),Assign "z" (Const 0),Assign "y" (Binop Times (Const (-1)) (Const 0)),Assign "z" (Binop Plus (Uminus (Var "y")) (Const 1)),While (Uminus (Const 1)) (If (Binop And (Binop And (Const 0) (Const (-23))) (Const 0)) (Assign "z" (Const 1)) (Assign "a" (Uminus (Const 21)))),Assign "z" (Var "b")])),
  ("if -5<=0 then\n  while a*1 do {\n    if a then\n      b = z\n    else if ((x&&a)<=1)*1 then {} else {};\n    y = -(23-b)==0;\n    z = -(1/a)==-(-(-27))\n  }\nelse {\n  y = b;\n  y = 1;\n  b = -(z+x);\n  y = -19;\n  x = z\n}",If (Binop LessEq (Const (-5)) (Const 0)) (While (Binop Times (Var "a") (Const 1)) (Seq [If (Var "a") (Assign "b" (Var "z")) (If (Binop Times (Binop LessEq (Binop And (Var "x") (Var "a")) (Const 1)) (Const 1)) (Seq []) (Seq [])),Assign "y" (Binop Equal (Uminus (Binop Minus (Const 23) (Var "b"))) (Const 0)),Assign "z" (Binop Equal (Uminus (Binop Div (Const 1) (Var "a"))) (Uminus (Uminus (Const (-27)))))])) (Seq [Assign "y" (Var "b"),Assign "y" (Const 1),Assign "b" (Uminus (Binop Plus (Var "z") (Var "x"))),Assign "y" (Const (-19)),Assign "x" (Var "z")])),
  ("{}",Seq []),
  ("z = 0",Assign "z" (Const 0)),
  ("{\n  x = z;\n  if -(29||b)+a then {} else if b then {} else {};\n  a = x-a&&1+(x*y*13&&y);\n  if b then\n    b = a\n  else\n    while -(0) do {};\n  a = b;\n  y = x;\n  b = 1;\n  z = -(-(1/x));\n  if b*a then {} else if -(0-0-x) then\n    b = z*(1+1)<0\n  else\n    x = 0;\n  x = 1;\n  a = z;\n  x = b;\n  a = 7+15;\n  if 5 then\n    a = -a\n  else if y then {\n    a = b+1\n  } else {};\n  y = b;\n  while (z<-2)+-(0) do\n    if -(b*0) then\n      a = b\n    else {}\n}",Seq [Assign "x" (Var "z"),If (Binop Plus (Uminus (Binop Or (Const 29) (Var "b"))) (Var "a")) (Seq []) (If (Var "b") (Seq []) (Seq [])),Assign "a" (Binop And (Binop Minus (Var "x") (Var "a")) (Binop Plus (Const 1) (Binop And (Binop Times (Binop Times (Var "x") (Var "y")) (Const 13)) (Var "y")))),If (Var "b") (Assign "b" (Var "a")) (While (Uminus (Const 0)) (Seq [])),Assign "a" (Var "b"),Assign "y" (Var "x"),Assign "b" (Const 1),Assign "z" (Uminus (Uminus (Binop Div (Const 1) (Var "x")))),If (Binop Times (Var "b") (Var "a")) (Seq []) (If (Uminus (Binop Minus (Binop Minus (Const 0) (Const 0)) (Var "x"))) (Assign "b" (Binop Less (Binop Times (Var "z") (Binop Plus (Const 1) (Const 1))) (Const 0))) (Assign "x" (Const 0))),Assign "x" (Const 1),Assign "a" (Var "z"),Assign "x" (Var "b"),Assign "a" (Binop Plus (Const 7) (Const 15)),If (Const 5) (Assign "a" (Uminus (Var "a"))) (If (Var "y") (Seq [Assign "a" (Binop Plus (Var "b") (Const 1))]) (Seq [])),Assign "y" (Var "b"),While (Binop Plus (Binop Less (Var "z") (Const (-2))) (Uminus (Const 0))) (If (Uminus (Binop Times (Var "b") (Const 0))) (Assign "a" (Var "b")) (Seq []))]),
  ("a = (x<=z/1)*(y&&(-b&&(a&&9)))<-y",Assign "a" (Binop Less (Binop Times (Binop LessEq (Var "x") (Binop Div (Var "z") (Const 1))) (Binop And (Var "y") (Binop And (Uminus (Var "b")) (Binop And (Var "a") (Const 9))))) (Uminus (Var "y")))),
  ("{\n  while -b*x do\n    y = x;\n  y = a;\n  y = a-(1||0);\n  if y then\n    y = b\n  else {\n    z = z\n  };\n  if x then\n    x = (x==b)+1\n  else\n    z = z*(-(-24)-(-y-z&&(1||z)));\n  y = 0;\n  b = -(17/b);\n  if x then\n    if z then\n      b = z\n    else {}\n  else if y<=0<a/30 then\n    z = x&&z\n  else\n    z = x;\n  a = x;\n  b = 0-(-x-x)/z;\n  b = b;\n  b = 0;\n  a = 0;\n  while 1 do\n    while 0 do\n      while a do {};\n  if 1 then\n    a = 1*-z\n  else {};\n  b = b;\n  if x then {} else\n    while a do {};\n  z = x+z;\n  x = a;\n  a = z+y;\n  x = (23||y)-z;\n  x = -(1);\n  z = (z||y||1)+(b||0);\n  b = 2\n}",Seq [While (Binop Times (Uminus (Var "b")) (Var "x")) (Assign "y" (Var "x")),Assign "y" (Var "a"),Assign "y" (Binop Minus (Var "a") (Binop Or (Const 1) (Const 0))),If (Var "y") (Assign "y" (Var "b")) (Seq [Assign "z" (Var "z")]),If (Var "x") (Assign "x" (Binop Plus (Binop Equal (Var "x") (Var "b")) (Const 1))) (Assign "z" (Binop Times (Var "z") (Binop Minus (Uminus (Const (-24))) (Binop And (Binop Minus (Uminus (Var "y")) (Var "z")) (Binop Or (Const 1) (Var "z")))))),Assign "y" (Const 0),Assign "b" (Uminus (Binop Div (Const 17) (Var "b"))),If (Var "x") (If (Var "z") (Assign "b" (Var "z")) (Seq [])) (If (Binop Less (Binop LessEq (Var "y") (Const 0)) (Binop Div (Var "a") (Const 30))) (Assign "z" (Binop And (Var "x") (Var "z"))) (Assign "z" (Var "x"))),Assign "a" (Var "x"),Assign "b" (Binop Minus (Const 0) (Binop Div (Binop Minus (Uminus (Var "x")) (Var "x")) (Var "z"))),Assign "b" (Var "b"),Assign "b" (Const 0),Assign "a" (Const 0),While (Const 1) (While (Const 0) (While (Var "a") (Seq []))),If (Const 1) (Assign "a" (Binop Times (Const 1) (Uminus (Var "z")))) (Seq []),Assign "b" (Var "b"),If (Var "x") (Seq []) (While (Var "a") (Seq [])),Assign "z" (Binop Plus (Var "x") (Var "z")),Assign "x" (Var "a"),Assign "a" (Binop Plus (Var "z") (Var "y")),Assign "x" (Binop Minus (Binop Or (Const 23) (Var "y")) (Var "z")),Assign "x" (Uminus (Const 1)),Assign "z" (Binop Plus (Binop Or (Binop Or (Var "z") (Var "y")) (Const 1)) (Binop Or (Var "b") (Const 0))),Assign "b" (Const 2)]),
  ("{\n  z = a;\n  b = 0;\n  a = -(1);\n  while 1<-22 do\n    a = 0;\n  if x then {} else\n    y = x<=a--10;\n  while x do\n    if 0*-y then\n      a = -(0)\n    else\n      a = 0*x;\n  while a||a do {};\n  z = y;\n  b = 23*y;\n  while -(-(-(-30))) do {\n    y = 1+0\n  }\n}",Seq [Assign "z" (Var "a"),Assign "b" (Const 0),Assign "a" (Uminus (Const 1)),While (Binop Less (Const 1) (Const (-22))) (Assign "a" (Const 0)),If (Var "x") (Seq []) (Assign "y" (Binop LessEq (Var "x") (Binop Minus (Var "a") (Const (-10))))),While (Var "x") (If (Binop Times (Const 0) (Uminus (Var "y"))) (Assign "a" (Uminus (Const 0))) (Assign "a" (Binop Times (Const 0) (Var "x")))),While (Binop Or (Var "a") (Var "a")) (Seq []),Assign "z" (Var "y"),Assign "b" (Binop Times (Const 23) (Var "y")),While (Uminus (Uminus (Uminus (Const (-30))))) (Seq [Assign "y" (Binop Plus (Const 1) (Const 0))])]),
  ("a = -(4)",Assign "a" (Uminus (Const 4))),
  ("while 0 do\n  while 1/z do\n    b = 1",While (Const 0) (While (Binop Div (Const 1) (Var "z")) (Assign "b" (Const 1)))),
  ("x = b",Assign "x" (Var "b")),
  ("a = a<=x/1/(0<=1)==1",Assign "a" (Binop Equal (Binop LessEq (Var "a") (Binop Div (Binop Div (Var "x") (Const 1)) (Binop LessEq (Const 0) (Const 1)))) (Const 1))),
  ("y = y",Assign "y" (Var "y")),
  ("if a then\n  y = y\nelse\n  while -(1) do\n    y = a",If (Var "a") (Assign "y" (Var "y")) (While (Uminus (Const 1)) (Assign "y" (Var "a")))),
  ("if -((-y<=x)*(-1||0))&&-20 then {\n  if -(0) then\n    while x do\n      a = (0&&z)==1/y<(-(x||a)*(0-(a||a))<=b)\n  else\n    a = z;\n  b = -z;\n  x = z;\n  y = x-((y+b==z)+(y-26))\n} else\n  b = y",If (Binop And (Uminus (Binop Times (Binop LessEq (Uminus (Var "y")) (Var "x")) (Binop Or (Const (-1)) (Const 0)))) (Const (-20))) (Seq [If (Uminus (Const 0)) (While (Var "x") (Assign "a" (Binop Less (Binop Equal (Binop And (Const 0) (Var "z")) (Binop Div (Const 1) (Var "y"))) (Binop LessEq (Binop Times (Uminus (Binop Or (Var "x") (Var "a"))) (Binop Minus (Const 0) (Binop Or (Var "a") (Var "a")))) (Var "b"))))) (Assign "a" (Var "z")),Assign "b" (Uminus (Var "z")),Assign "x" (Var "z"),Assign "y" (Binop Minus (Var "x") (Binop Plus (Binop Equal (Binop Plus (Var "y") (Var "b")) (Var "z")) (Binop Minus (Var "y") (Const 26))))]) (Assign "b" (Var "y"))),
  ("if -(1) then\n  while 1 do {\n    y = a\n  }\nelse {}",If (Uminus (Const 1)) (While (Const 1) (Seq [Assign "y" (Var "a")])) (Seq [])),
  ("b = -1",Assign "b" (Const (-1))),
  ("{\n  a = 11||z;\n  while b do {\n    a = 1\n  };\n  b = 1;\n  while z do\n    x = -a;\n  if -19 then {} else\n    b = 0;\n  while 12 do\n    b = 3;\n  x = -(-6<-(-(-8)));\n  while 15 do\n    z = b;\n  a = -26;\n  b = z/x*((9/0<=a+1)/0)/12;\n  if 0 then\n    x = a\n  else\n    y = (0||-(1*0)-x)==1*-(1);\n  if y<1<0 then\n    b = y\n  else\n    b = 0;\n  z = 0;\n  b = 0;\n  b = 1;\n  if a then\n    b = b\n  else\n    x = 0;\n  z = -(1)*(((0&&0)<(0==1))/17<-(x+z));\n  if z then\n    z = -(0)\n  else\n    z = 4;\n  if 1 then\n    a = -(x||20)\n  else if a+a then\n    while b do\n      a = a\n  else if -29 then\n    if 1||0 then {} else {}\n  else\n    z = -20==1;\n  a = b;\n  while -x<=26 do\n    z = -(1);\n  z = x*(a-x)||11\n}",Seq [Assign "a" (Binop Or (Const 11) (Var "z")),While (Var "b") (Seq [Assign "a" (Const 1)]),Assign "b" (Const 1),While (Var "z") (Assign "x" (Uminus (Var "a"))),If (Const (-19)) (Seq []) (Assign "b" (Const 0)),While (Const 12) (Assign "b" (Const 3)),Assign "x" (Uminus (Binop Less (Const (-6)) (Uminus (Uminus (Const (-8)))))),While (Const 15) (Assign "z" (Var "b")),Assign "a" (Const (-26)),Assign "b" (Binop Div (Binop Times (Binop Div (Var "z") (Var "x")) (Binop Div (Binop LessEq (Binop Div (Const 9) (Const 0)) (Binop Plus (Var "a") (Const 1))) (Const 0))) (Const 12)),If (Const 0) (Assign "x" (Var "a")) (Assign "y" (Binop Equal (Binop Or (Const 0) (Binop Minus (Uminus (Binop Times (Const 1) (Const 0))) (Var "x"))) (Binop Times (Const 1) (Uminus (Const 1))))),If (Binop Less (Binop Less (Var "y") (Const 1)) (Const 0)) (Assign "b" (Var "y")) (Assign "b" (Const 0)),Assign "z" (Const 0),Assign "b" (Const 0),Assign "b" (Const 1),If (Var "a") (Assign "b" (Var "b")) (Assign "x" (Const 0)),Assign "z" (Binop Times (Uminus (Const 1)) (Binop Less (Binop Div (Binop Less (Binop And (Const 0) (Const 0)) (Binop Equal (Const 0) (Const 1))) (Const 17)) (Uminus (Binop Plus (Var "x") (Var "z"))))),If (Var "z") (Assign "z" (Uminus (Const 0))) (Assign "z" (Const 4)),If (Const 1) (Assign "a" (Uminus (Binop Or (Var "x") (Const 20)))) (If (Binop Plus (Var "a") (Var "a")) (While (Var "b") (Assign "a" (Var "a"))) (If (Const (-29)) (If (Binop Or (Const 1) (Const 0)) (Seq []) (Seq [])) (Assign "z" (Binop Equal (Const (-20)) (Const 1))))),Assign "a" (Var "b"),While (Binop LessEq (Uminus (Var "x")) (Const 26)) (Assign "z" (Uminus (Const 1))),Assign "z" (Binop Or (Binop Times (Var "x") (Binop Minus (Var "a") (Var "x"))) (Const 11))]),
  ("a = -30*b",Assign "a" (Binop Times (Const (-30)) (Var "b"))),
  ("{\n  if x then\n    z = x||-19\n  else {\n    if 0<=0 then {} else {}\n  };\n  if a then\n    while 1==x do {}\n  else {};\n  z = 0;\n  y = b;\n  while 1 do\n    b = b+-x--(-(-2));\n  z = a+-(-(16&&-26)<y);\n  if y&&1 then\n    a = -(-b==y)\n  else\n    x = 28;\n  a = -(b==(b<=a||-(-26)));\n  x = 13+(x<=y);\n  if 1 then\n    x = b\n  else if 3 then\n    a = 21\n  else {};\n  a = x||-(b&&17+a)\n}",Seq [If (Var "x") (Assign "z" (Binop Or (Var "x") (Const (-19)))) (Seq [If (Binop LessEq (Const 0) (Const 0)) (Seq []) (Seq [])]),If (Var "a") (While (Binop Equal (Const 1) (Var "x")) (Seq [])) (Seq []),Assign "z" (Const 0),Assign "y" (Var "b"),While (Const 1) (Assign "b" (Binop Minus (Binop Plus (Var "b") (Uminus (Var "x"))) (Uminus (Uminus (Const (-2)))))),Assign "z" (Binop Plus (Var "a") (Uminus (Binop Less (Uminus (Binop And (Const 16) (Const (-26)))) (Var "y")))),If (Binop And (Var "y") (Const 1)) (Assign "a" (Uminus (Binop Equal (Uminus (Var "b")) (Var "y")))) (Assign "x" (Const 28)),Assign "a" (Uminus (Binop Equal (Var "b") (Binop Or (Binop LessEq (Var "b") (Var "a")) (Uminus (Const (-26)))))),Assign "x" (Binop Plus (Const 13) (Binop LessEq (Var "x") (Var "y"))),If (Const 1) (Assign "x" (Var "b")) (If (Const 3) (Assign "a" (Const 21)) (Seq [])),Assign "a" (Binop Or (Var "x") (Uminus (Binop And (Var "b") (Binop Plus (Const 17) (Var "a")))))]),
  ("{\n  while b do\n    b = 0<0;\n  b = -(1);\n  a = -(a==y<y)==a\n}",Seq [While (Var "b") (Assign "b" (Binop Less (Const 0) (Const 0))),Assign "b" (Uminus (Const 1)),Assign "a" (Binop Equal (Uminus (Binop Less (Binop Equal (Var "a") (Var "y")) (Var "y"))) (Var "a"))]),
  ("a = y<=-a",Assign "a" (Binop LessEq (Var "y") (Uminus (Var "a")))),
  ("if b then\n  y = -18\nelse\n  a = a/z",If (Var "b") (Assign "y" (Const (-18))) (Assign "a" (Binop Div (Var "a") (Var "z")))),
  ("{\n  z = -(6&&y)+x;\n  a = -20<(z&&-(25+x)<0);\n  x = a+(1<=(z<x&&b)||(-(1)+(1<x))/(1+a));\n  x = b;\n  z = y==z;\n  while -(b--16/17) do\n    b = -(y||y+x)*1;\n  if x then\n    b = 0\n  else\n    z = -(-(1))\n}",Seq [Assign "z" (Binop Plus (Uminus (Binop And (Const 6) (Var "y"))) (Var "x")),Assign "a" (Binop Less (Const (-20)) (Binop And (Var "z") (Binop Less (Uminus (Binop Plus (Const 25) (Var "x"))) (Const 0)))),Assign "x" (Binop Plus (Var "a") (Binop Or (Binop LessEq (Const 1) (Binop And (Binop Less (Var "z") (Var "x")) (Var "b"))) (Binop Div (Binop Plus (Uminus (Const 1)) (Binop Less (Const 1) (Var "x"))) (Binop Plus (Const 1) (Var "a"))))),Assign "x" (Var "b"),Assign "z" (Binop Equal (Var "y") (Var "z")),While (Uminus (Binop Minus (Var "b") (Binop Div (Const (-16)) (Const 17)))) (Assign "b" (Binop Times (Uminus (Binop Or (Var "y") (Binop Plus (Var "y") (Var "x")))) (Const 1))),If (Var "x") (Assign "b" (Const 0)) (Assign "z" (Uminus (Uminus (Const 1))))]),
  ("y = 0+0",Assign "y" (Binop Plus (Const 0) (Const 0))),
  ("if -10 then {} else\n  y = -(1)",If (Const (-10)) (Seq []) (Assign "y" (Uminus (Const 1)))),
  ("z = ((-z--b)*-25&&y/8)*-a",Assign "z" (Binop Times (Binop And (Binop Times (Binop Minus (Uminus (Var "z")) (Uminus (Var "b"))) (Const (-25))) (Binop Div (Var "y") (Const 8))) (Uminus (Var "a")))),
  ("if 0 then {\n  if 1*((1||27)--29)*(a==-5+-x) then {} else\n    a = x;\n  if y then\n    y = -a==z\n  else\n    x = z;\n  if -10 then\n    a = x\n  else {\n    y = a*-z<=z+z\n  }\n} else if 1 then {\n  y = -12;\n  y = 1;\n  x = 24-b\n} else if a then {\n  a = z\n} else\n  while 1||1 do\n    y = a",If (Const 0) (Seq [If (Binop Times (Binop Times (Const 1) (Binop Minus (Binop Or (Const 1) (Const 27)) (Const (-29)))) (Binop Equal (Var "a") (Binop Plus (Const (-5)) (Uminus (Var "x"))))) (Seq []) (Assign "a" (Var "x")),If (Var "y") (Assign "y" (Binop Equal (Uminus (Var "a")) (Var "z"))) (Assign "x" (Var "z")),If (Const (-10)) (Assign "a" (Var "x")) (Seq [Assign "y" (Binop LessEq (Binop Times (Var "a") (Uminus (Var "z"))) (Binop Plus (Var "z") (Var "z")))])]) (If (Const 1) (Seq [Assign "y" (Const (-12)),Assign "y" (Const 1),Assign "x" (Binop Minus (Const 24) (Var "b"))]) (If (Var "a") (Seq [Assign "a" (Var "z")]) (While (Binop Or (Const 1) (Const 1)) (Assign "y" (Var "a")))))),
  ("b = 0||x",Assign "b" (Binop Or (Const 0) (Var "x"))),
  ("b = 1-a==-(0)",Assign "b" (Binop Equal (Binop Minus (Const 1) (Var "a")) (Uminus (Const 0)))),
  ("b = y",Assign "b" (Var "y")),
  ("while a do\n  y = a",While (Var "a") (Assign "y" (Var "a"))),
  ("while 0 do {\n  y = y;\n  a = (0||(b||1)==(0-0<=(b<=10)))+-(z*x);\n  if y then\n    if -((-(8)==1)+1) then {} else {}\n  else\n    a = -(x<b);\n  if 1 then\n    if a then {} else {}\n  else\n    y = 1;\n  while (z<-8)/(-(0)<-23)<(x&&z) do\n    b = a;\n  if b<b then {} else {};\n  while -(-(-a<1)/x) do\n    if y then {} else {};\n  b = x\n}",While (Const 0) (Seq [Assign "y" (Var "y"),Assign "a" (Binop Plus (Binop Or (Const 0) (Binop Equal (Binop Or (Var "b") (Const 1)) (Binop LessEq (Binop Minus (Const 0) (Const 0)) (Binop LessEq (Var "b") (Const 10))))) (Uminus (Binop Times (Var "z") (Var "x")))),If (Var "y") (If (Uminus (Binop Plus (Binop Equal (Uminus (Const 8)) (Const 1)) (Const 1))) (Seq []) (Seq [])) (Assign "a" (Uminus (Binop Less (Var "x") (Var "b")))),If (Const 1) (If (Var "a") (Seq []) (Seq [])) (Assign "y" (Const 1)),While (Binop Less (Binop Div (Binop Less (Var "z") (Const (-8))) (Binop Less (Uminus (Const 0)) (Const (-23)))) (Binop And (Var "x") (Var "z"))) (Assign "b" (Var "a")),If (Binop Less (Var "b") (Var "b")) (Seq []) (Seq []),While (Uminus (Binop Div (Uminus (Binop Less (Uminus (Var "a")) (Const 1))) (Var "x"))) (If (Var "y") (Seq []) (Seq [])),Assign "b" (Var "x")])),
  ("z = z",Assign "z" (Var "z")),
  ("z = (1+-(-16))*-21",Assign "z" (Binop Times (Binop Plus (Const 1) (Uminus (Const (-16)))) (Const (-21)))),
  ("a = 0==-(0)<=(26||(x<=z)*z)",Assign "a" (Binop LessEq (Binop Equal (Const 0) (Uminus (Const 0))) (Binop Or (Const 26) (Binop Times (Binop LessEq (Var "x") (Var "z")) (Var "z"))))),
  ("while 1 do\n  if y then {\n    z = 1<-24+0;\n    a = a;\n    x = -(-23==-(-15&&1))\n  } else\n    x = z",While (Const 1) (If (Var "y") (Seq [Assign "z" (Binop Less (Const 1) (Binop Plus (Const (-24)) (Const 0))),Assign "a" (Var "a"),Assign "x" (Uminus (Binop Equal (Const (-23)) (Uminus (Binop And (Const (-15)) (Const 1)))))]) (Assign "x" (Var "z")))),
  ("a = a||-(b||-z)==a",Assign "a" (Binop Or (Var "a") (Binop Equal (Uminus (Binop Or (Var "b") (Uminus (Var "z")))) (Var "a")))),
  ("y = 0",Assign "y" (Const 0)),
  ("b = z<=x",Assign "b" (Binop LessEq (Var "z") (Var "x"))),
  ("{\n  y = 0;\n  a = b;\n  y = (1--(1)<z)/(-x-0);\n  b = -(b*0);\n  while 0 do\n    z = b;\n  x = x;\n  if x--(0) then\n    y = 30/0\n  else\n    while x do\n      a = -a*(0<=-(0));\n  b = 1;\n  b = 0;\n  a = b;\n  a = z;\n  x = -(-(-11));\n  x = -(0)||-27;\n  x = a;\n  y = y;\n  y = z;\n  x = 0;\n  b = b;\n  a = z;\n  x = x\n}",Seq [Assign "y" (Const 0),Assign "a" (Var "b"),Assign "y" (Binop Div (Binop Less (Binop Minus (Const 1) (Uminus (Const 1))) (Var "z")) (Binop Minus (Uminus (Var "x")) (Const 0))),Assign "b" (Uminus (Binop Times (Var "b") (Const 0))),While (Const 0) (Assign "z" (Var "b")),Assign "x" (Var "x"),If (Binop Minus (Var "x") (Uminus (Const 0))) (Assign "y" (Binop Div (Const 30) (Const 0))) (While (Var "x") (Assign "a" (Binop Times (Uminus (Var "a")) (Binop LessEq (Const 0) (Uminus (Const 0)))))),Assign "b" (Const 1),Assign "b" (Const 0),Assign "a" (Var "b"),Assign "a" (Var "z"),Assign "x" (Uminus (Uminus (Const (-11)))),Assign "x" (Binop Or (Uminus (Const 0)) (Const (-27))),Assign "x" (Var "a"),Assign "y" (Var "y"),Assign "y" (Var "z"),Assign "x" (Const 0),Assign "b" (Var "b"),Assign "a" (Var "z"),Assign "x" (Var "x")]),
  ("x = z",Assign "x" (Var "z")),
  ("a = x",Assign "a" (Var "x")),
  ("b = x||21",Assign "b" (Binop Or (Var "x") (Const 21))),
  ("{\n  while -25 do {};\n  y = (x&&b+x)/z-((0||-27)+0||(z||z==x))--19;\n  if 8 then\n    if -(0||-25) then\n      z = y*(x<=1)<=1\n    else {}\n  else {};\n  b = y;\n  a = x;\n  a = 0*b;\n  y = 1--(z<=(x&&2/a));\n  x = -(-z);\n  while z<=b do\n    if a then {} else\n      b = y;\n  b = 1<=z<=1;\n  while 1 do {};\n  y = b\n}",Seq [While (Const (-25)) (Seq []),Assign "y" (Binop Minus (Binop Minus (Binop Div (Binop And (Var "x") (Binop Plus (Var "b") (Var "x"))) (Var "z")) (Binop Or (Binop Plus (Binop Or (Const 0) (Const (-27))) (Const 0)) (Binop Or (Var "z") (Binop Equal (Var "z") (Var "x"))))) (Const (-19))),If (Const 8) (If (Uminus (Binop Or (Const 0) (Const (-25)))) (Assign "z" (Binop LessEq (Binop Times (Var "y") (Binop LessEq (Var "x") (Const 1))) (Const 1))) (Seq [])) (Seq []),Assign "b" (Var "y"),Assign "a" (Var "x"),Assign "a" (Binop Times (Const 0) (Var "b")),Assign "y" (Binop Minus (Const 1) (Uminus (Binop LessEq (Var "z") (Binop And (Var "x") (Binop Div (Const 2) (Var "a")))))),Assign "x" (Uminus (Uminus (Var "z"))),While (Binop LessEq (Var "z") (Var "b")) (If (Var "a") (Seq []) (Assign "b" (Var "y"))),Assign "b" (Binop LessEq (Binop LessEq (Const 1) (Var "z")) (Const 1)),While (Const 1) (Seq []),Assign "y" (Var "b")]),
  ("if a-y then\n  y = 0+x==b\nelse if 30 then\n  if 1<=a then\n    z = 0\n  else if a then {} else\n    while b do {}\nelse\n  a = b",If (Binop Minus (Var "a") (Var "y")) (Assign "y" (Binop Equal (Binop Plus (Const 0) (Var "x")) (Var "b"))) (If (Const 30) (If (Binop LessEq (Const 1) (Var "a")) (Assign "z" (Const 0)) (If (Var "a") (Seq []) (While (Var "b") (Seq [])))) (Assign "a" (Var "b")))),
  ("{\n  a = 0==a;\n  a = b;\n  x = -(-(0<b||x<=a)+(0<(0==a)));\n  y = (-(23)||-(25))<(b&&a/b);\n  if 0 then\n    b = 22\n  else if b<(((y||1)&&b)<=-6)-((1&&0)==0) then\n    if -(0) then {} else {}\n  else {};\n  while a do\n    b = y;\n  if -z then\n    y = y\n  else {};\n  if z then\n    x = 30\n  else\n    x = (0<=b)+-(1*x||1||1);\n  x = a;\n  if 1 then\n    while b&&-(x/(z||a)-z) do\n      y = y\n  else {\n    if z then {} else if a&&-17 then {} else {};\n    a = z;\n    x = -(-19)-z\n  };\n  a = x;\n  a = -(1);\n  while 1<=(b||0<(0<=b)) do\n    a = x;\n  y = 0\n}",Seq [Assign "a" (Binop Equal (Const 0) (Var "a")),Assign "a" (Var "b"),Assign "x" (Uminus (Binop Plus (Uminus (Binop Or (Binop Less (Const 0) (Var "b")) (Binop LessEq (Var "x") (Var "a")))) (Binop Less (Const 0) (Binop Equal (Const 0) (Var "a"))))),Assign "y" (Binop Less (Binop Or (Uminus (Const 23)) (Uminus (Const 25))) (Binop And (Var "b") (Binop Div (Var "a") (Var "b")))),If (Const 0) (Assign "b" (Const 22)) (If (Binop Less (Var "b") (Binop Minus (Binop LessEq (Binop And (Binop Or (Var "y") (Const 1)) (Var "b")) (Const (-6))) (Binop Equal (Binop And (Const 1) (Const 0)) (Const 0)))) (If (Uminus (Const 0)) (Seq []) (Seq [])) (Seq [])),While (Var "a") (Assign "b" (Var "y")),If (Uminus (Var "z")) (Assign "y" (Var "y")) (Seq []),If (Var "z") (Assign "x" (Const 30)) (Assign "x" (Binop Plus (Binop LessEq (Const 0) (Var "b")) (Uminus (Binop Or (Binop Or (Binop Times (Const 1) (Var "x")) (Const 1)) (Const 1))))),Assign "x" (Var "a"),If (Const 1) (While (Binop And (Var "b") (Uminus (Binop Minus (Binop Div (Var "x") (Binop Or (Var "z") (Var "a"))) (Var "z")))) (Assign "y" (Var "y"))) (Seq [If (Var "z") (Seq []) (If (Binop And (Var "a") (Const (-17))) (Seq []) (Seq [])),Assign "a" (Var "z"),Assign "x" (Binop Minus (Uminus (Const (-19))) (Var "z"))]),Assign "a" (Var "x"),Assign "a" (Uminus (Const 1)),While (Binop LessEq (Const 1) (Binop Or (Var "b") (Binop Less (Const 0) (Binop LessEq (Const 0) (Var "b"))))) (Assign "a" (Var "x")),Assign "y" (Const 0)]),
  ("while 0 do\n  if 1&&b/a then\n    x = -(0)\n  else\n    b = z",While (Const 0) (If (Binop And (Const 1) (Binop Div (Var "b") (Var "a"))) (Assign "x" (Uminus (Const 0))) (Assign "b" (Var "z")))),
  ("{\n  z = -20&&-3;\n  b = x;\n  b = y;\n  while x do {};\n  x = -y;\n  b = -(0);\n  while -(x<=7) do\n    y = 0<1-(1-0||-b)<-(-(a<y&&-(1)));\n  while y do\n    z = 30+0;\n  if 0&&-17 then\n    z = -(1)\n  else {};\n  b = 0*1;\n  if 1/a then\n    a = -y\n  else {\n    if a then {} else\n      a = y\n  };\n  y = x;\n  z = -(x&&-(-(1))/(b==-19+y));\n  if 12 then {\n    z = 1*1-(-x+0<=0)&&-6\n  } else\n    while -(-y) do\n      if z then {} else {};\n  a = 0;\n  b = z==-22;\n  a = b;\n  a = -3;\n  if -a then\n    if -18 then\n      y = 0\n    else {}\n  else\n    x = 21;\n  if y then\n    while 1*b do\n      while a do\n        x = 1\n  else\n    z = -(1)\n}",Seq [Assign "z" (Binop And (Const (-20)) (Const (-3))),Assign "b" (Var "x"),Assign "b" (Var "y"),While (Var "x") (Seq []),Assign "x" (Uminus (Var "y")),Assign "b" (Uminus (Const 0)),While (Uminus (Binop LessEq (Var "x") (Const 7))) (Assign "y" (Binop Less (Binop Less (Const 0) (Binop Minus (Const 1) (Binop Or (Binop Minus (Const 1) (Const 0)) (Uminus (Var "b"))))) (Uminus (Uminus (Binop And (Binop Less (Var "a") (Var "y")) (Uminus (Const 1))))))),While (Var "y") (Assign "z" (Binop Plus (Const 30) (Const 0))),If (Binop And (Const 0) (Const (-17))) (Assign "z" (Uminus (Const 1))) (Seq []),Assign "b" (Binop Times (Const 0) (Const 1)),If (Binop Div (Const 1) (Var "a")) (Assign "a" (Uminus (Var "y"))) (Seq [If (Var "a") (Seq []) (Assign "a" (Var "y"))]),Assign "y" (Var "x"),Assign "z" (Uminus (Binop And (Var "x") (Binop Div (Uminus (Uminus (Const 1))) (Binop Equal (Var "b") (Binop Plus (Const (-19)) (Var "y")))))),If (Const 12) (Seq [Assign "z" (Binop And (Binop Minus (Binop Times (Const 1) (Const 1)) (Binop LessEq (Binop Plus (Uminus (Var "x")) (Const 0)) (Const 0))) (Const (-6)))]) (While (Uminus (Uminus (Var "y"))) (If (Var "z") (Seq []) (Seq []))),Assign "a" (Const 0),Assign "b" (Binop Equal (Var "z") (Const (-22))),Assign "a" (Var "b"),Assign "a" (Const (-3)),If (Uminus (Var "a")) (If (Const (-18)) (Assign "y" (Const 0)) (Seq [])) (Assign "x" (Const 21)),If (Var "y") (While (Binop Times (Const 1) (Var "b")) (While (Var "a") (Assign "x" (Const 1)))) (Assign "z" (Uminus (Const 1)))]),
  ("{\n  a = -(0/y);\n  a = 1;\n  while x do\n    if -y then {} else {};\n  if b then\n    while x do\n      z = (1+-11-z&&22)*(1&&8)\n  else {\n    if -x then {} else\n      while b do {};\n    x = a/0\n  };\n  if 0 then\n    x = -(x&&7||-(0))\n  else\n    a = 22\n}",Seq [Assign "a" (Uminus (Binop Div (Const 0) (Var "y"))),Assign "a" (Const 1),While (Var "x") (If (Uminus (Var "y")) (Seq []) (Seq [])),If (Var "b") (While (Var "x") (Assign "z" (Binop Times (Binop And (Binop Minus (Binop Plus (Const 1) (Const (-11))) (Var "z")) (Const 22)) (Binop And (Const 1) (Const 8))))) (Seq [If (Uminus (Var "x")) (Seq []) (While (Var "b") (Seq [])),Assign "x" (Binop Div (Var "a") (Const 0))]),If (Const 0) (Assign "x" (Uminus (Binop Or (Binop And (Var "x") (Const 7)) (Uminus (Const 0))))) (Assign "a" (Const 22))]),
  ("b = 0",Assign "b" (Const 0)),
  ("if -y then {\n  if -a+-(b/(a-a))||x then {} else\n    a = z;\n  z = a;\n  while y do\n    x = x\n} else {\n  if x then\n    if z*-(1) then\n      z = y\n    else if 0==-a-a then {} else {}\n  else if 0||1 then\n    while 0<=(b<(14<=b)) do {}\n  else {};\n  b = y\n}",If (Uminus (Var "y")) (Seq [If (Binop Or (Binop Plus (Uminus (Var "a")) (Uminus (Binop Div (Var "b") (Binop Minus (Var "a") (Var "a"))))) (Var "x")) (Seq []) (Assign "a" (Var "z")),Assign "z" (Var "a"),While (Var "y") (Assign "x" (Var "x"))]) (Seq [If (Var "x") (If (Binop Times (Var "z") (Uminus (Const 1))) (Assign "z" (Var "y")) (If (Binop Equal (Const 0) (Binop Minus (Uminus (Var "a")) (Var "a"))) (Seq []) (Seq []))) (If (Binop Or (Const 0) (Const 1)) (While (Binop LessEq (Const 0) (Binop Less (Var "b") (Binop LessEq (Const 14) (Var "b")))) (Seq [])) (Seq [])),Assign "b" (Var "y")])),
  ("if -b then\n  if x then\n    if y then {\n      if -(-z) then {} else {}\n    } else\n      a = 0\n  else if z<1 then\n    while x/28&&7==z do\n      y = 1+-10+(z<=-x)\n  else if b then\n    x = 0\n  else {}\nelse\n  while 2 do\n    y = b",If (Uminus (Var "b")) (If (Var "x") (If (Var "y") (Seq [If (Uminus (Uminus (Var "z"))) (Seq []) (Seq [])]) (Assign "a" (Const 0))) (If (Binop Less (Var "z") (Const 1)) (While (Binop And (Binop Div (Var "x") (Const 28)) (Binop Equal (Const 7) (Var "z"))) (Assign "y" (Binop Plus (Binop Plus (Const 1) (Const (-10))) (Binop LessEq (Var "z") (Uminus (Var "x")))))) (If (Var "b") (Assign "x" (Const 0)) (Seq [])))) (While (Const 2) (Assign "y" (Var "b")))),
  ("{\n  if 0 then\n    a = -b\n  else\n    b = 1;\n  z = a;\n  if -13 then\n    z = 10\n  else if x then {} else\n    b = y\n}",Seq [If (Const 0) (Assign "a" (Uminus (Var "b"))) (Assign "b" (Const 1)),Assign "z" (Var "a"),If (Const (-13)) (Assign "z" (Const 10)) (If (Var "x") (Seq []) (Assign "b" (Var "y")))]),
  ("a = 0+(z<0)==-8",Assign "a" (Binop Equal (Binop Plus (Const 0) (Binop Less (Var "z") (Const 0))) (Const (-8)))),
  ("{\n  z = -13<b-(z-z-1);\n  b = y;\n  a = (0||-a<=-24)&&b||25;\n  x = a;\n  if 0 then\n    if 0 then {} else {}\n  else\n    while 14*b do\n      a = 0;\n  if y then\n    z = -(0)\n  else if b then\n    z = 1\n  else\n    b = y;\n  b = 12;\n  while 1 do {};\n  z = 0*y;\n  y = x;\n  b = -(1==-(-x));\n  if x then {} else\n    x = -(x==14<=(z||-4)||x)<=b;\n  a = 0;\n  while -(1-0-1<=14--x) do {\n    if -b+0 then {} else {}\n  };\n  x = a<-(1)+1;\n  z = y;\n  if 1 then\n    x = 1/-(-30)+(x==a)\n  else\n    x = -(z/0)/(-(b&&0*x)<=x);\n  z = -(0)\n}",Seq [Assign "z" (Binop Less (Const (-13)) (Binop Minus (Var "b") (Binop Minus (Binop Minus (Var "z") (Var "z")) (Const 1)))),Assign "b" (Var "y"),Assign "a" (Binop Or (Binop And (Binop Or (Const 0) (Binop LessEq (Uminus (Var "a")) (Const (-24)))) (Var "b")) (Const 25)),Assign "x" (Var "a"),If (Const 0) (If (Const 0) (Seq []) (Seq [])) (While (Binop Times (Const 14) (Var "b")) (Assign "a" (Const 0))),If (Var "y") (Assign "z" (Uminus (Const 0))) (If (Var "b") (Assign "z" (Const 1)) (Assign "b" (Var "y"))),Assign "b" (Const 12),While (Const 1) (Seq []),Assign "z" (Binop Times (Const 0) (Var "y")),Assign "y" (Var "x"),Assign "b" (Uminus (Binop Equal (Const 1) (Uminus (Uminus (Var "x"))))),If (Var "x") (Seq []) (Assign "x" (Binop LessEq (Uminus (Binop Or (Binop LessEq (Binop Equal (Var "x") (Const 14)) (Binop Or (Var "z") (Const (-4)))) (Var "x"))) (Var "b"))),Assign "a" (Const 0),While (Uminus (Binop LessEq (Binop Minus (Binop Minus (Const 1) (Const 0)) (Const 1)) (Binop Minus (Const 14) (Uminus (Var "x"))))) (Seq [If (Binop Plus (Uminus (Var "b")) (Const 0)) (Seq []) (Seq [])]),Assign "x" (Binop Less (Var "a") (Binop Plus (Uminus (Const 1)) (Const 1))),Assign "z" (Var "y"),If (Const 1) (Assign "x" (Binop Plus (Binop Div (Const 1) (Uminus (Const (-30)))) (Binop Equal (Var "x") (Var "a")))) (Assign "x" (Binop Div (Uminus (Binop Div (Var "z") (Const 0))) (Binop LessEq (Uminus (Binop And (Var "b") (Binop Times (Const 0) (Var "x")))) (Var "x")))),Assign "z" (Uminus (Const 0))]),
  ("z = -28&&1",Assign "z" (Binop And (Const (-28)) (Const 1))),
  ("{\n  b = -(20);\n  while b do {};\n  while -y do\n    z = -(-y)<=a&&0\n}",Seq [Assign "b" (Uminus (Const 20)),While (Var "b") (Seq []),While (Uminus (Var "y")) (Assign "z" (Binop And (Binop LessEq (Uminus (Uminus (Var "y"))) (Var "a")) (Const 0)))]),
  ("{\n  if -(0) then\n    y = b\n  else {};\n  if 1<=y/1 then {} else\n    y = 0;\n  y = -15;\n  while -y do {};\n  a = x;\n  b = 1;\n  z = -2\n}",Seq [If (Uminus (Const 0)) (Assign "y" (Var "b")) (Seq []),If (Binop LessEq (Const 1) (Binop Div (Var "y") (Const 1))) (Seq []) (Assign "y" (Const 0)),Assign "y" (Const (-15)),While (Uminus (Var "y")) (Seq []),Assign "a" (Var "x"),Assign "b" (Const 1),Assign "z" (Const (-2))]),
  ("x = x",Assign "x" (Var "x")),
  ("x = b*-(0)==-z<1",Assign "x" (Binop Less (Binop Equal (Binop Times (Var "b") (Uminus (Const 0))) (Uminus (Var "z"))) (Const 1))),
  ("y = b",Assign "y" (Var "b")),
  ("{\n  while y<(x<=1) do\n    if (0==a&&-(-y)*(-b-(b==x)))<b then\n      a = 1\n    else\n      b = -(8&&(-(b==z)&&-(0)));\n  z = y;\n  while 1<=0<-a do {};\n  if 1 then {} else\n    b = 1<=y;\n  if a then\n    while 1 do {}\n  else\n    b = 1-1||-30-y;\n  a = x;\n  y = a;\n  if 1 then {} else if x then {} else {};\n  while y do\n    b = -b/(1*(1<=a==0));\n  y = 21;\n  while y do\n    while a<=-(1) do\n      x = 0||-(b-1);\n  a = -((b&&-22<a+b)+(a*(1/1)&&b+-30));\n  y = -(0);\n  x = x;\n  if y then {} else\n    b = z;\n  y = 10;\n  x = 30;\n  a = 8*x\n}",Seq [While (Binop Less (Var "y") (Binop LessEq (Var "x") (Const 1))) (If (Binop Less (Binop And (Binop Equal (Const 0) (Var "a")) (Binop Times (Uminus (Uminus (Var "y"))) (Binop Minus (Uminus (Var "b")) (Binop Equal (Var "b") (Var "x"))))) (Var "b")) (Assign "a" (Const 1)) (Assign "b" (Uminus (Binop And (Const 8) (Binop And (Uminus (Binop Equal (Var "b") (Var "z"))) (Uminus (Const 0))))))),Assign "z" (Var "y"),While (Binop Less (Binop LessEq (Const 1) (Const 0)) (Uminus (Var "a"))) (Seq []),If (Const 1) (Seq []) (Assign "b" (Binop LessEq (Const 1) (Var "y"))),If (Var "a") (While (Const 1) (Seq [])) (Assign "b" (Binop Or (Binop Minus (Const 1) (Const 1)) (Binop Minus (Const (-30)) (Var "y")))),Assign "a" (Var "x"),Assign "y" (Var "a"),If (Const 1) (Seq []) (If (Var "x") (Seq []) (Seq [])),While (Var "y") (Assign "b" (Binop Div (Uminus (Var "b")) (Binop Times (Const 1) (Binop Equal (Binop LessEq (Const 1) (Var "a")) (Const 0))))),Assign "y" (Const 21),While (Var "y") (While (Binop LessEq (Var "a") (Uminus (Const 1))) (Assign "x" (Binop Or (Const 0) (Uminus (Binop Minus (Var "b") (Const 1)))))),Assign "a" (Uminus (Binop Plus (Binop And (Var "b") (Binop Less (Const (-22)) (Binop Plus (Var "a") (Var "b")))) (Binop And (Binop Times (Var "a") (Binop Div (Const 1) (Const 1))) (Binop Plus (Var "b") (Const (-30)))))),Assign "y" (Uminus (Const 0)),Assign "x" (Var "x"),If (Var "y") (Seq []) (Assign "b" (Var "z")),Assign "y" (Const 10),Assign "x" (Const 30),Assign "a" (Binop Times (Const 8) (Var "x"))]),
  ("{\n  b = -(-(0));\n  b = b;\n  b = -8;\n  while z do {};\n  y = -(x/x);\n  z = -x;\n  z = -(y||0&&(a&&1));\n  if a then {} else\n    while 0+0 do {};\n  y = 25;\n  while -23 do\n    y = b<a;\n  while -x-z do\n    x = -z;\n  a = 1;\n  if -(-6) then {\n    z = -(0)\n  } else\n    a = (18<=y)-((x&&z)+-(11));\n  z = 30;\n  b = x;\n  z = 0;\n  b = z\n}",Seq [Assign "b" (Uminus (Uminus (Const 0))),Assign "b" (Var "b"),Assign "b" (Const (-8)),While (Var "z") (Seq []),Assign "y" (Uminus (Binop Div (Var "x") (Var "x"))),Assign "z" (Uminus (Var "x")),Assign "z" (Uminus (Binop Or (Var "y") (Binop And (Const 0) (Binop And (Var "a") (Const 1))))),If (Var "a") (Seq []) (While (Binop Plus (Const 0) (Const 0)) (Seq [])),Assign "y" (Const 25),While (Const (-23)) (Assign "y" (Binop Less (Var "b") (Var "a"))),While (Binop Minus (Uminus (Var "x")) (Var "z")) (Assign "x" (Uminus (Var "z"))),Assign "a" (Const 1),If (Uminus (Const (-6))) (Seq [Assign "z" (Uminus (Const 0))]) (Assign "a" (Binop Minus (Binop LessEq (Const 18) (Var "y")) (Binop Plus (Binop And (Var "x") (Var "z")) (Uminus (Const 11))))),Assign "z" (Const 30),Assign "b" (Var "x"),Assign "z" (Const 0),Assign "b" (Var "z")]),
  ("z = a&&(x==z)+0==x==x/(1/b)",Assign "z" (Binop And (Var "a") (Binop Equal (Binop Equal (Binop Plus (Binop Equal (Var "x") (Var "z")) (Const 0)) (Var "x")) (Binop Div (Var "x") (Binop Div (Const 1) (Var "b")))))),
  ("{\n  x = (x<b)*1;\n  z = b;\n  b = -(a+-((-9&&0)-y*1));\n  b = 26;\n  x = x==-20==-(b+0)&&1;\n  y = z;\n  a = 0;\n  x = y;\n  if x<y then\n    b = 0||24&&b\n  else\n    a = 20;\n  a = 13*1<7;\n  if y*18+0 then\n    if 1 then {} else\n      b = z\n  else\n    y = -24;\n  y = a;\n  z = y;\n  a = b;\n  x = a;\n  while -(-y<a)/x do\n    y = b;\n  z = 3;\n  x = -(1/(5+1||z))<29;\n  z = -29;\n  x = -19;\n  b = 0*(-(28)<=x)==b/16;\n  if (1<z==1)*1 then\n    z = y\n  else\n    x = b\n}",Seq [Assign "x" (Binop Times (Binop Less (Var "x") (Var "b")) (Const 1)),Assign "z" (Var "b"),Assign "b" (Uminus (Binop Plus (Var "a") (Uminus (Binop Minus (Binop And (Const (-9)) (Const 0)) (Binop Times (Var "y") (Const 1)))))),Assign "b" (Const 26),Assign "x" (Binop And (Binop Equal (Binop Equal (Var "x") (Const (-20))) (Uminus (Binop Plus (Var "b") (Const 0)))) (Const 1)),Assign "y" (Var "z"),Assign "a" (Const 0),Assign "x" (Var "y"),If (Binop Less (Var "x") (Var "y")) (Assign "b" (Binop Or (Const 0) (Binop And (Const 24) (Var "b")))) (Assign "a" (Const 20)),Assign "a" (Binop Less (Binop Times (Const 13) (Const 1)) (Const 7)),If (Binop Plus (Binop Times (Var "y") (Const 18)) (Const 0)) (If (Const 1) (Seq []) (Assign "b" (Var "z"))) (Assign "y" (Const (-24))),Assign "y" (Var "a"),Assign "z" (Var "y"),Assign "a" (Var "b"),Assign "x" (Var "a"),While (Binop Div (Uminus (Binop Less (Uminus (Var "y")) (Var "a"))) (Var "x")) (Assign "y" (Var "b")),Assign "z" (Const 3),Assign "x" (Binop Less (Uminus (Binop Div (Const 1) (Binop Or (Binop Plus (Const 5) (Const 1)) (Var "z")))) (Const 29)),Assign "z" (Const (-29)),Assign "x" (Const (-19)),Assign "b" (Binop Equal (Binop Times (Const 0) (Binop LessEq (Uminus (Const 28)) (Var "x"))) (Binop Div (Var "b") (Const 16))),If (Binop Times (Binop Equal (Binop Less (Const 1) (Var "z")) (Const 1)) (Const 1)) (Assign "z" (Var "y")) (Assign "x" (Var "b"))]),
  ("{\n  if 1 then\n    while 0 do\n      y = 23*(b+1*y)\n  else {};\n  while 1 do {\n    while z do\n      z = 1\n  };\n  y = 0;\n  z = -(0)\n}",Seq [If (Const 1) (While (Const 0) (Assign "y" (Binop Times (Const 23) (Binop Plus (Var "b") (Binop Times (Const 1) (Var "y")))))) (Seq []),While (Const 1) (Seq [While (Var "z") (Assign "z" (Const 1))]),Assign "y" (Const 0),Assign "z" (Uminus (Const 0))]),
  ("a = -(-7)",Assign "a" (Uminus (Const (-7)))),
  ("b = -11",Assign "b" (Const (-11))),
  ("y = x==z",Assign "y" (Binop Equal (Var "x") (Var "z"))),
  ("b = b",Assign "b" (Var "b")),
  ("b = y*-(0)",Assign "b" (Binop Times (Var "y") (Uminus (Const 0)))),
  ("z = b&&a",Assign "z" (Binop And (Var "b") (Var "a"))),
  ("z = b",Assign "z" (Var "b")),
  ("if 1 then\n  x = 0\nelse if x then\n  while -12&&-9==0 do\n    if -(-a)<(-(-(y-0))&&b) then\n      z = -25\n    else\n      b = -(a==0)\nelse {}",If (Const 1) (Assign "x" (Const 0)) (If (Var "x") (While (Binop And (Const (-12)) (Binop Equal (Const (-9)) (Const 0))) (If (Binop Less (Uminus (Uminus (Var "a"))) (Binop And (Uminus (Uminus (Binop Minus (Var "y") (Const 0)))) (Var "b"))) (Assign "z" (Const (-25))) (Assign "b" (Uminus (Binop Equal (Var "a") (Const 0)))))) (Seq []))),
  ("{\n  y = 1*-9&&-27;\n  if a+-19 then\n    if -(-(0))/11 then\n      x = -(-(b+x))==(1<=20)\n    else\n      a = -(0*b)\n  else\n    b = 0;\n  a = -(a==x);\n  y = z;\n  x = -a;\n  y = 0;\n  y = -x;\n  while 1 do {\n    y = y<=-a<0\n  };\n  b = 0+-(-a);\n  b = b/z;\n  a = 1+y*0;\n  while (x==-x*1)+x do {};\n  z = -(-(1));\n  if 0 then {} else {};\n  y = 6;\n  b = a+y;\n  z = (-(-(0)-1)==x)*(b==0);\n  while y do\n    y = 0\n}",Seq [Assign "y" (Binop And (Binop Times (Const 1) (Const (-9))) (Const (-27))),If (Binop Plus (Var "a") (Const (-19))) (If (Binop Div (Uminus (Uminus (Const 0))) (Const 11)) (Assign "x" (Binop Equal (Uminus (Uminus (Binop Plus (Var "b") (Var "x")))) (Binop LessEq (Const 1) (Const 20)))) (Assign "a" (Uminus (Binop Times (Const 0) (Var "b"))))) (Assign "b" (Const 0)),Assign "a" (Uminus (Binop Equal (Var "a") (Var "x"))),Assign "y" (Var "z"),Assign "x" (Uminus (Var "a")),Assign "y" (Const 0),Assign "y" (Uminus (Var "x")),While (Const 1) (Seq [Assign "y" (Binop Less (Binop LessEq (Var "y") (Uminus (Var "a"))) (Const 0))]),Assign "b" (Binop Plus (Const 0) (Uminus (Uminus (Var "a")))),Assign "b" (Binop Div (Var "b") (Var "z")),Assign "a" (Binop Plus (Const 1) (Binop Times (Var "y") (Const 0))),While (Binop Plus (Binop Equal (Var "x") (Binop Times (Uminus (Var "x")) (Const 1))) (Var "x")) (Seq []),Assign "z" (Uminus (Uminus (Const 1))),If (Const 0) (Seq []) (Seq []),Assign "y" (Const 6),Assign "b" (Binop Plus (Var "a") (Var "y")),Assign "z" (Binop Times (Binop Equal (Uminus (Binop Minus (Uminus (Const 0)) (Const 1))) (Var "x")) (Binop Equal (Var "b") (Const 0))),While (Var "y") (Assign "y" (Const 0))]),
  ("{\n  z = -(1/(1<=1))&&b;\n  x = 1;\n  if 0-1 then\n    if -(1) then\n      if a-0*(y/((z+b)/30)) then {} else {}\n    else if z then {} else {}\n  else\n    b = 0<=-x;\n  if 24&&a then\n    a = 0\n  else {\n    b = x;\n    while x<=y do\n      z = y\n  };\n  if -8 then\n    if 7 then {} else {}\n  else\n    x = x;\n  while y do\n    if b then\n      a = b\n    else {};\n  z = -a&&1-(0||y&&x&&1);\n  b = -(0);\n  while b do\n    x = 5;\n  if 1 then\n    b = 1\n  else if 1 then\n    if z then {} else {}\n  else\n    b = x&&-7;\n  x = 0;\n  if y then\n    z = 1\n  else if 1<z then\n    z = y\n  else if -22 then\n    z = -28\n  else\n    z = 1;\n  x = y<y<=1==a;\n  z = y--(0)*0;\n  if -7||x then\n    a = -z\n  else if 1--b then\n    x = a*-7/-(-(0+z+(b<-2)))\n  else\n    while z do {};\n  b = y;\n  b = 1;\n  b = 0==-a;\n  x = y;\n  if y then\n    z = y\n  else {\n    if x then {} else {};\n    if -(7) then {} else {}\n  };\n  x = 4+x\n}",Seq [Assign "z" (Binop And (Uminus (Binop Div (Const 1) (Binop LessEq (Const 1) (Const 1)))) (Var "b")),Assign "x" (Const 1),If (Binop Minus (Const 0) (Const 1)) (If (Uminus (Const 1)) (If (Binop Minus (Var "a") (Binop Times (Const 0) (Binop Div (Var "y") (Binop Div (Binop Plus (Var "z") (Var "b")) (Const 30))))) (Seq []) (Seq [])) (If (Var "z") (Seq []) (Seq []))) (Assign "b" (Binop LessEq (Const 0) (Uminus (Var "x")))),If (Binop And (Const 24) (Var "a")) (Assign "a" (Const 0)) (Seq [Assign "b" (Var "x"),While (Binop LessEq (Var "x") (Var "y")) (Assign "z" (Var "y"))]),If (Const (-8)) (If (Const 7) (Seq []) (Seq [])) (Assign "x" (Var "x")),While (Var "y") (If (Var "b") (Assign "a" (Var "b")) (Seq [])),Assign "z" (Binop And (Uminus (Var "a")) (Binop Minus (Const 1) (Binop Or (Const 0) (Binop And (Binop And (Var "y") (Var "x")) (Const 1))))),Assign "b" (Uminus (Const 0)),While (Var "b") (Assign "x" (Const 5)),If (Const 1) (Assign "b" (Const 1)) (If (Const 1) (If (Var "z") (Seq []) (Seq [])) (Assign "b" (Binop And (Var "x") (Const (-7))))),Assign "x" (Const 0),If (Var "y") (Assign "z" (Const 1)) (If (Binop Less (Const 1) (Var "z")) (Assign "z" (Var "y")) (If (Const (-22)) (Assign "z" (Const (-28))) (Assign "z" (Const 1)))),Assign "x" (Binop Equal (Binop LessEq (Binop Less (Var "y") (Var "y")) (Const 1)) (Var "a")),Assign "z" (Binop Minus (Var "y") (Binop Times (Uminus (Const 0)) (Const 0))),If (Binop Or (Const (-7)) (Var "x")) (Assign "a" (Uminus (Var "z"))) (If (Binop Minus (Const 1) (Uminus (Var "b"))) (Assign "x" (Binop Div (Binop Times (Var "a") (Const (-7))) (Uminus (Uminus (Binop Plus (Binop Plus (Const 0) (Var "z")) (Binop Less (Var "b") (Const (-2)))))))) (While (Var "z") (Seq []))),Assign "b" (Var "y"),Assign "b" (Const 1),Assign "b" (Binop Equal (Const 0) (Uminus (Var "a"))),Assign "x" (Var "y"),If (Var "y") (Assign "z" (Var "y")) (Seq [If (Var "x") (Seq []) (Seq []),If (Uminus (Const 7)) (Seq []) (Seq [])]),Assign "x" (Binop Plus (Const 4) (Var "x"))]),
  ("if 3 then {\n  while 1-(0/9==-(1||-22)) do\n    y = 0;\n  y = z*(y*(z*0)-(1<(b<=y)))+16;\n  z = a;\n  if -(a||(x&&0==y)<=-(1-22)) then\n    if a then {} else {}\n  else if 0 then {} else\n    y = 3\n} else\n  y = -z<22",If (Const 3) (Seq [While (Binop Minus (Const 1) (Binop Equal (Binop Div (Const 0) (Const 9)) (Uminus (Binop Or (Const 1) (Const (-22)))))) (Assign "y" (Const 0)),Assign "y" (Binop Plus (Binop Times (Var "z") (Binop Minus (Binop Times (Var "y") (Binop Times (Var "z") (Const 0))) (Binop Less (Const 1) (Binop LessEq (Var "b") (Var "y"))))) (Const 16)),Assign "z" (Var "a"),If (Uminus (Binop Or (Var "a") (Binop LessEq (Binop And (Var "x") (Binop Equal (Const 0) (Var "y"))) (Uminus (Binop Minus (Const 1) (Const 22)))))) (If (Var "a") (Seq []) (Seq [])) (If (Const 0) (Seq []) (Assign "y" (Const 3)))]) (Assign "y" (Binop Less (Uminus (Var "z")) (Const 22)))),
  ("if 0 then {\n  z = 2;\n  a = 1;\n  a = 1;\n  y = 0;\n  x = b<=0\n} else {\n  if y then\n    y = (0-(1-(1-1)*1))*(-26==(1||-(-a)))\n  else {};\n  a = 1;\n  x = -y;\n  y = -(1);\n  while -(1) do\n    z = 1;\n  if z then\n    z = a\n  else\n    a = y\n}",If (Const 0) (Seq [Assign "z" (Const 2),Assign "a" (Const 1),Assign "a" (Const 1),Assign "y" (Const 0),Assign "x" (Binop LessEq (Var "b") (Const 0))]) (Seq [If (Var "y") (Assign "y" (Binop Times (Binop Minus (Const 0) (Binop Minus (Const 1) (Binop Times (Binop Minus (Const 1) (Const 1)) (Const 1)))) (Binop Equal (Const (-26)) (Binop Or (Const 1) (Uminus (Uminus (Var "a"))))))) (Seq []),Assign "a" (Const 1),Assign "x" (Uminus (Var "y")),Assign "y" (Uminus (Const 1)),While (Uminus (Const 1)) (Assign "z" (Const 1)),If (Var "z") (Assign "z" (Var "a")) (Assign "a" (Var "y"))])),
  ("while x do\n  if z||1 then\n    z = 0\n  else {}",While (Var "x") (If (Binop Or (Var "z") (Const 1)) (Assign "z" (Const 0)) (Seq []))),
  ("if -(-x) then {\n  if -z then\n    z = 0\n  else\n    y = -y;\n  if 0 then {} else\n    while 1 do\n      if -28+(0-y) then {} else {};\n  x = a;\n  while y<1-(a<=y<=-(b+1)) do {\n    if b-x then {} else {}\n  };\n  z = -7;\n  a = -(-27)\n} else if -(-a*(0<b)) then\n  if -(-y) then {} else\n    y = 1&&z+y\nelse\n  b = -(-(x&&-(0)&&1+x))",If (Uminus (Uminus (Var "x"))) (Seq [If (Uminus (Var "z")) (Assign "z" (Const 0)) (Assign "y" (Uminus (Var "y"))),If (Const 0) (Seq []) (While (Const 1) (If (Binop Plus (Const (-28)) (Binop Minus (Const 0) (Var "y"))) (Seq []) (Seq []))),Assign "x" (Var "a"),While (Binop Less (Var "y") (Binop Minus (Const 1) (Binop LessEq (Binop LessEq (Var "a") (Var "y")) (Uminus (Binop Plus (Var "b") (Const 1)))))) (Seq [If (Binop Minus (Var "b") (Var "x")) (Seq []) (Seq [])]),Assign "z" (Const (-7)),Assign "a" (Uminus (Const (-27)))]) (If (Uminus (Binop Times (Uminus (Var "a")) (Binop Less (Const 0) (Var "b")))) (If (Uminus (Uminus (Var "y"))) (Seq []) (Assign "y" (Binop And (Const 1) (Binop Plus (Var "z") (Var "y"))))) (Assign "b" (Uminus (Uminus (Binop And (Binop And (Var "x") (Uminus (Const 0))) (Binop Plus (Const 1) (Var "x")))))))),
  ("{\n  if z||0 then\n    b = -y-(b*(-8*(-19<=x))-0/-(1))\n  else {\n    y = 1/a\n  };\n  x = 0;\n  while -17 do {};\n  z = -12;\n  if b then {\n    a = 1;\n    while y do\n      if x then {} else {}\n  } else if -(-(b+(1<x)*1)) then\n    while 1 do\n      x = a==4\n  else\n    x = x;\n  if y<(-(0)+z)*6 then\n    b = 10\n  else {\n    y = -14\n  };\n  b = x;\n  if b then\n    while 0 do {\n      b = 5\n    }\n  else if z then\n    a = (y==1&&1)+(-a||-7)\n  else\n    b = y;\n  b = -(1)+-a-0&&(3||-(-(z&&0)));\n  while b do\n    b = 0;\n  x = -(a<0);\n  while a do {};\n  b = x<=b;\n  b = 1;\n  a = 1;\n  a = a;\n  y = y;\n  z = 15;\n  z = -z/x*-b;\n  while -b do {\n    z = -(-(0))\n  };\n  z = z;\n  y = -(-a<1);\n  x = b;\n  y = 1||y;\n  a = b;\n  z = y;\n  z = b;\n  x = 0&&(1&&y-y);\n  if z then {\n    y = -18;\n    b = -x*x\n  } else if -18 then\n    while x do\n      z = x\n  else\n    a = b;\n  b = (-(-(28))+z)*(y<=b)\n}",Seq [If (Binop Or (Var "z") (Const 0)) (Assign "b" (Binop Minus (Uminus (Var "y")) (Binop Minus (Binop Times (Var "b") (Binop Times (Const (-8)) (Binop LessEq (Const (-19)) (Var "x")))) (Binop Div (Const 0) (Uminus (Const 1)))))) (Seq [Assign "y" (Binop Div (Const 1) (Var "a"))]),Assign "x" (Const 0),While (Const (-17)) (Seq []),Assign "z" (Const (-12)),If (Var "b") (Seq [Assign "a" (Const 1),While (Var "y") (If (Var "x") (Seq []) (Seq []))]) (If (Uminus (Uminus (Binop Plus (Var "b") (Binop Times (Binop Less (Const 1) (Var "x")) (Const 1))))) (While (Const 1) (Assign "x" (Binop Equal (Var "a") (Const 4)))) (Assign "x" (Var "x"))),If (Binop Less (Var "y") (Binop Times (Binop Plus (Uminus (Const 0)) (Var "z")) (Const 6))) (Assign "b" (Const 10)) (Seq [Assign "y" (Const (-14))]),Assign "b" (Var "x"),If (Var "b") (While (Const 0) (Seq [Assign "b" (Const 5)])) (If (Var "z") (Assign "a" (Binop Plus (Binop And (Binop Equal (Var "y") (Const 1)) (Const 1)) (Binop Or (Uminus (Var "a")) (Const (-7))))) (Assign "b" (Var "y"))),Assign "b" (Binop And (Binop Minus (Binop Plus (Uminus (Const 1)) (Uminus (Var "a"))) (Const 0)) (Binop Or (Const 3) (Uminus (Uminus (Binop And (Var "z") (Const 0)))))),While (Var "b") (Assign "b" (Const 0)),Assign "x" (Uminus (Binop Less (Var "a") (Const 0))),While (Var "a") (Seq []),Assign "b" (Binop LessEq (Var "x") (Var "b")),Assign "b" (Const 1),Assign "a" (Const 1),Assign "a" (Var "a"),Assign "y" (Var "y"),Assign "z" (Const 15),Assign "z" (Binop Times (Binop Div (Uminus (Var "z")) (Var "x")) (Uminus (Var "b"))),While (Uminus (Var "b")) (Seq [Assign "z" (Uminus (Uminus (Const 0)))]),Assign "z" (Var "z"),Assign "y" (Uminus (Binop Less (Uminus (Var "a")) (Const 1))),Assign "x" (Var "b"),Assign "y" (Binop Or (Const 1) (Var "y")),Assign "a" (Var "b"),Assign "z" (Var "y"),Assign "z" (Var "b"),Assign "x" (Binop And (Const 0) (Binop And (Const 1) (Binop Minus (Var "y") (Var "y")))),If (Var "z") (Seq [Assign "y" (Const (-18)),Assign "b" (Binop Times (Uminus (Var "x")) (Var "x"))]) (If (Const (-18)) (While (Var "x") (Assign "z" (Var "x"))) (Assign "a" (Var "b"))),Assign "b" (Binop Times (Binop Plus (Uminus (Uminus (Const 28))) (Var "z")) (Binop LessEq (Var "y") (Var "b")))]),
  ("y = 1/0",Assign "y" (Binop Div (Const 1) (Const 0))),
  ("if -28 then\n  if x then\n    if 12 then\n      a = y\n    else\n      x = 1\n  else\n    b = 0+(-3+z)\nelse\n  z = 1",If (Const (-28)) (If (Var "x") (If (Const 12) (Assign "a" (Var "y")) (Assign "x" (Const 1))) (Assign "b" (Binop Plus (Const 0) (Binop Plus (Const (-3)) (Var "z"))))) (Assign "z" (Const 1))),
  ("if y then\n  y = y-0\nelse\n  a = 0*x",If (Var "y") (Assign "y" (Binop Minus (Var "y") (Const 0))) (Assign "a" (Binop Times (Const 0) (Var "x")))),
  ("while 14 do\n  y = b--(0/-a)-(-(0)&&-(0))",While (Const 14) (Assign "y" (Binop Minus (Binop Minus (Var "b") (Uminus (Binop Div (Const 0) (Uminus (Var "a"))))) (Binop And (Uminus (Const 0)) (Uminus (Const 0)))))),
  ("{\n  a = 1;\n  y = a;\n  x = y;\n  z = 1;\n  if -28 then\n    if z then\n      y = 24\n    else\n      while 0 do\n        y = -(-(0))\n  else\n    y = x==a&&0;\n  if x/1 then {} else\n    y = -5\n}",Seq [Assign "a" (Const 1),Assign "y" (Var "a"),Assign "x" (Var "y"),Assign "z" (Const 1),If (Const (-28)) (If (Var "z") (Assign "y" (Const 24)) (While (Const 0) (Assign "y" (Uminus (Uminus (Const 0)))))) (Assign "y" (Binop And (Binop Equal (Var "x") (Var "a")) (Const 0))),If (Binop Div (Var "x") (Const 1)) (Seq []) (Assign "y" (Const (-5)))]),
  ("x = -18-1",Assign "x" (Binop Minus (Const (-18)) (Const 1))),
  ("while 1 do {\n  if z then\n    while y/-((-(1)||y)/a) do\n      if -b then {} else {}\n  else\n    x = -((b&&b)==9)\n}",While (Const 1) (Seq [If (Var "z") (While (Binop Div (Var "y") (Uminus (Binop Div (Binop Or (Uminus (Const 1)) (Var "y")) (Var "a")))) (If (Uminus (Var "b")) (Seq []) (Seq []))) (Assign "x" (Uminus (Binop Equal (Binop And (Var "b") (Var "b")) (Const 9))))])),
  ("while a||x do\n  a = -x*b",While (Binop Or (Var "a") (Var "x")) (Assign "a" (Binop Times (Uminus (Var "x")) (Var "b")))),
  ("a = b<a",Assign "a" (Binop Less (Var "b") (Var "a"))),
  ("{\n  if 5 then\n    if x*-(-a) then\n      a = -(0||(-12||0))\n    else\n      z = 11-b\n  else if a then\n    z = z||1<30\n  else\n    z = z;\n  if x then\n    y = x\n  else\n    y = b;\n  if b*8<-(1<=b) then\n    if y then\n      b = 0\n    else\n      b = -b\n  else if 0 then\n    while x do\n      while ((z||0)==a+3)*z<z do {}\n  else\n    b = a;\n  b = -(-x)\n}",Seq [If (Const 5) (If (Binop Times (Var "x") (Uminus (Uminus (Var "a")))) (Assign "a" (Uminus (Binop Or (Const 0) (Binop Or (Const (-12)) (Const 0))))) (Assign "z" (Binop Minus (Const 11) (Var "b")))) (If (Var "a") (Assign "z" (Binop Or (Var "z") (Binop Less (Const 1) (Const 30)))) (Assign "z" (Var "z"))),If (Var "x") (Assign "y" (Var "x")) (Assign "y" (Var "b")),If (Binop Less (Binop Times (Var "b") (Const 8)) (Uminus (Binop LessEq (Const 1) (Var "b")))) (If (Var "y") (Assign "b" (Const 0)) (Assign "b" (Uminus (Var "b")))) (If (Const 0) (While (Var "x") (While (Binop Less (Binop Times (Binop Equal (Binop Or (Var "z") (Const 0)) (Binop Plus (Var "a") (Const 3))) (Var "z")) (Var "z")) (Seq []))) (Assign "b" (Var "a"))),Assign "b" (Uminus (Uminus (Var "x")))]),
  ("b = 26||b",Assign "b" (Binop Or (Const 26) (Var "b"))),
  ("a = x/y",Assign "a" (Binop Div (Var "x") (Var "y"))),
  ("y = 1",Assign "y" (Const 1)),
  ("{\n  if -(y*-((0<=0)-(a==1))) then\n    if (a+1)*(-(0)<-11)+x then\n      z = a\n    else {\n      y = x\n    }\n  else\n    x = (z||x==z)<27;\n  z = b&&0;\n  a = z;\n  while -b<-(1) do {};\n  x = (b&&-(x<=a))<=-(0)||z\n}",Seq [If (Uminus (Binop Times (Var "y") (Uminus (Binop Minus (Binop LessEq (Const 0) (Const 0)) (Binop Equal (Var "a") (Const 1)))))) (If (Binop Plus (Binop Times (Binop Plus (Var "a") (Const 1)) (Binop Less (Uminus (Const 0)) (Const (-11)))) (Var "x")) (Assign "z" (Var "a")) (Seq [Assign "y" (Var "x")])) (Assign "x" (Binop Less (Binop Or (Var "z") (Binop Equal (Var "x") (Var "z"))) (Const 27))),Assign "z" (Binop And (Var "b") (Const 0)),Assign "a" (Var "z"),While (Binop Less (Uminus (Var "b")) (Uminus (Const 1))) (Seq []),Assign "x" (Binop Or (Binop LessEq (Binop And (Var "b") (Uminus (Binop LessEq (Var "x") (Var "a")))) (Uminus (Const 0))) (Var "z"))]),
  ("{\n  if a<0 then\n    z = y||y\n  else\n    b = 0\n}",Seq [If (Binop Less (Var "a") (Const 0)) (Assign "z" (Binop Or (Var "y") (Var "y"))) (Assign "b" (Const 0))]),
  ("x = 1",Assign "x" (Const 1)),
  ("{\n  y = 0;\n  b = z;\n  y = 1/0\n}",Seq [Assign "y" (Const 0),Assign "b" (Var "z"),Assign "y" (Binop Div (Const 1) (Const 0))]),
  ("{\n  if 18--(-(2||y))+1 then\n    x = x\n  else\n    a = -(1)/b+-7;\n  b = -30;\n  b = y;\n  a = a/y*(1&&16)/(z<((-25||a)&&-3/11));\n  if b then\n    y = b\n  else\n    b = 0;\n  if 0==(a&&y) then\n    if -(1) then\n      if z then\n        while 0 do {}\n      else\n        y = z||x*a\n    else {\n      b = -(0)\n    }\n  else\n    while a do\n      y = 0;\n  while 0 do\n    if x||1<=0 then\n      y = (y&&1)+1\n    else\n      while -(-22) do\n        x = (-(1)<=1)--(1-0/a)-z;\n  x = -b;\n  if 3<=b then\n    while -(-14/(b/1)) do {}\n  else {\n    while -(-(11)) do {}\n  };\n  if 19 then {\n    if 0||1&&z then {} else {}\n  } else {};\n  z = x\n}",Seq [If (Binop Plus (Binop Minus (Const 18) (Uminus (Uminus (Binop Or (Const 2) (Var "y"))))) (Const 1)) (Assign "x" (Var "x")) (Assign "a" (Binop Plus (Binop Div (Uminus (Const 1)) (Var "b")) (Const (-7)))),Assign "b" (Const (-30)),Assign "b" (Var "y"),Assign "a" (Binop Div (Binop Times (Binop Div (Var "a") (Var "y")) (Binop And (Const 1) (Const 16))) (Binop Less (Var "z") (Binop And (Binop Or (Const (-25)) (Var "a")) (Binop Div (Const (-3)) (Const 11))))),If (Var "b") (Assign "y" (Var "b")) (Assign "b" (Const 0)),If (Binop Equal (Const 0) (Binop And (Var "a") (Var "y"))) (If (Uminus (Const 1)) (If (Var "z") (While (Const 0) (Seq [])) (Assign "y" (Binop Or (Var "z") (Binop Times (Var "x") (Var "a"))))) (Seq [Assign "b" (Uminus (Const 0))])) (While (Var "a") (Assign "y" (Const 0))),While (Const 0) (If (Binop Or (Var "x") (Binop LessEq (Const 1) (Const 0))) (Assign "y" (Binop Plus (Binop And (Var "y") (Const 1)) (Const 1))) (While (Uminus (Const (-22))) (Assign "x" (Binop Minus (Binop Minus (Binop LessEq (Uminus (Const 1)) (Const 1)) (Uminus (Binop Minus (Const 1) (Binop Div (Const 0) (Var "a"))))) (Var "z"))))),Assign "x" (Uminus (Var "b")),If (Binop LessEq (Const 3) (Var "b")) (While (Uminus (Binop Div (Const (-14)) (Binop Div (Var "b") (Const 1)))) (Seq [])) (Seq [While (Uminus (Uminus (Const 11))) (Seq [])]),If (Const 19) (Seq [If (Binop Or (Const 0) (Binop And (Const 1) (Var "z"))) (Seq []) (Seq [])]) (Seq []),Assign "z" (Var "x")]),
  ("{\n  while 0*z do\n    z = 1*x;\n  if 0 then {\n    x = y\n  } else\n    y = -9;\n  if 0*((-x&&x)<=x)/((1--y)/-(1)) then\n    a = 1==1==-x\n  else if a then {} else if z then {} else if x-z then {} else {};\n  z = x;\n  x = -12;\n  a = (-(11)<=(b==z)-(z&&b))/z*(0*0+x);\n  b = 1;\n  x = 0/x;\n  if b then\n    b = z\n  else\n    a = 1;\n  y = a;\n  if x then\n    a = y\n  else\n    x = z;\n  b = 0&&a;\n  while (0*(x<0)<-(z<(b||z)))-a do {\n    a = -20;\n    if z then {} else {}\n  };\n  while -b do {\n    while -b do\n      b = b\n  };\n  a = z*0;\n  z = a;\n  if b then\n    y = x\n  else {\n    if 1 then\n      x = 12\n    else if b then {} else {};\n    a = -y\n  }\n}",Seq [While (Binop Times (Const 0) (Var "z")) (Assign "z" (Binop Times (Const 1) (Var "x"))),If (Const 0) (Seq [Assign "x" (Var "y")]) (Assign "y" (Const (-9))),If (Binop Div (Binop Times (Const 0) (Binop LessEq (Binop And (Uminus (Var "x")) (Var "x")) (Var "x"))) (Binop Div (Binop Minus (Const 1) (Uminus (Var "y"))) (Uminus (Const 1)))) (Assign "a" (Binop Equal (Binop Equal (Const 1) (Const 1)) (Uminus (Var "x")))) (If (Var "a") (Seq []) (If (Var "z") (Seq []) (If (Binop Minus (Var "x") (Var "z")) (Seq []) (Seq [])))),Assign "z" (Var "x"),Assign "x" (Const (-12)),Assign "a" (Binop Times (Binop Div (Binop LessEq (Uminus (Const 11)) (Binop Minus (Binop Equal (Var "b") (Var "z")) (Binop And (Var "z") (Var "b")))) (Var "z")) (Binop Plus (Binop Times (Const 0) (Const 0)) (Var "x"))),Assign "b" (Const 1),Assign "x" (Binop Div (Const 0) (Var "x")),If (Var "b") (Assign "b" (Var "z")) (Assign "a" (Const 1)),Assign "y" (Var "a"),If (Var "x") (Assign "a" (Var "y")) (Assign "x" (Var "z")),Assign "b" (Binop And (Const 0) (Var "a")),While (Binop Minus (Binop Less (Binop Times (Const 0) (Binop Less (Var "x") (Const 0))) (Uminus (Binop Less (Var "z") (Binop Or (Var "b") (Var "z"))))) (Var "a")) (Seq [Assign "a" (Const (-20)),If (Var "z") (Seq []) (Seq [])]),While (Uminus (Var "b")) (Seq [While (Uminus (Var "b")) (Assign "b" (Var "b"))]),Assign "a" (Binop Times (Var "z") (Const 0)),Assign "z" (Var "a"),If (Var "b") (Assign "y" (Var "x")) (Seq [If (Const 1) (Assign "x" (Const 12)) (If (Var "b") (Seq []) (Seq [])),Assign "a" (Uminus (Var "y"))])]),
  ("x = y==((0||1)<(x||-(-(1))))",Assign "x" (Binop Equal (Var "y") (Binop Less (Binop Or (Const 0) (Const 1)) (Binop Or (Var "x") (Uminus (Uminus (Const 1))))))),
  ("b = -16||a*z&&(z||-(-a))",Assign "b" (Binop Or (Const (-16)) (Binop And (Binop Times (Var "a") (Var "z")) (Binop Or (Var "z") (Uminus (Uminus (Var "a"))))))),
  ("{\n  z = 1*-((x+0)/(y-b))<b-(0&&1)/1;\n  a = -(0);\n  b = x<9;\n  b = 0;\n  if y then\n    y = b\n  else\n    x = b;\n  a = y;\n  if 0*(-(0)*(b-b)) then\n    if y<=(1||(-(1)<=(1<a))+1) then\n      y = -(-(1))<16\n    else\n      while 1 do {}\n  else {\n    if b then {} else {}\n  };\n  while -14-x do\n    if 0 then {} else\n      b = -(-(b<=a+b)<(x<a));\n  x = (-(-z)==(1&&0+-28)<-9)-1\n}",Seq [Assign "z" (Binop Less (Binop Times (Const 1) (Uminus (Binop Div (Binop Plus (Var "x") (Const 0)) (Binop Minus (Var "y") (Var "b"))))) (Binop Minus (Var "b") (Binop Div (Binop And (Const 0) (Const 1)) (Const 1)))),Assign "a" (Uminus (Const 0)),Assign "b" (Binop Less (Var "x") (Const 9)),Assign "b" (Const 0),If (Var "y") (Assign "y" (Var "b")) (Assign "x" (Var "b")),Assign "a" (Var "y"),If (Binop Times (Const 0) (Binop Times (Uminus (Const 0)) (Binop Minus (Var "b") (Var "b")))) (If (Binop LessEq (Var "y") (Binop Or (Const 1) (Binop Plus (Binop LessEq (Uminus (Const 1)) (Binop Less (Const 1) (Var "a"))) (Const 1)))) (Assign "y" (Binop Less (Uminus (Uminus (Const 1))) (Const 16))) (While (Const 1) (Seq []))) (Seq [If (Var "b") (Seq []) (Seq [])]),While (Binop Minus (Const (-14)) (Var "x")) (If (Const 0) (Seq []) (Assign "b" (Uminus (Binop Less (Uminus (Binop LessEq (Var "b") (Binop Plus (Var "a") (Var "b")))) (Binop Less (Var "x") (Var "a")))))),Assign "x" (Binop Minus (Binop Less (Binop Equal (Uminus (Uminus (Var "z"))) (Binop And (Const 1) (Binop Plus (Const 0) (Const (-28))))) (Const (-9))) (Const 1))]),
  ("if z then\n  b = 0\nelse\n  b = -13",If (Var "z") (Assign "b" (Const 0)) (Assign "b" (Const (-13)))),
  ("{\n  z = y;\n  while 0 do {};\n  b = 0;\n  b = (1+0)*y+((z||a)&&0-(x+a&&-y));\n  if ((b||-(13))<=-z==7)+21 then\n    b = -a\n  else\n    z = -(13)==-11;\n  while 8-0 do {};\n  a = z&&x;\n  while b do\n    a = a;\n  a = z\n}",Seq [Assign "z" (Var "y"),While (Const 0) (Seq []),Assign "b" (Const 0),Assign "b" (Binop Plus (Binop Times (Binop Plus (Const 1) (Const 0)) (Var "y")) (Binop And (Binop Or (Var "z") (Var "a")) (Binop Minus (Const 0) (Binop And (Binop Plus (Var "x") (Var "a")) (Uminus (Var "y")))))),If (Binop Plus (Binop Equal (Binop LessEq (Binop Or (Var "b") (Uminus (Const 13))) (Uminus (Var "z"))) (Const 7)) (Const 21)) (Assign "b" (Uminus (Var "a"))) (Assign "z" (Binop Equal (Uminus (Const 13)) (Const (-11)))),While (Binop Minus (Const 8) (Const 0)) (Seq []),Assign "a" (Binop And (Var "z") (Var "x")),While (Var "b") (Assign "a" (Var "a")),Assign "a" (Var "z")]),
  ("{\n  if b then\n    b = (0||y)*1==0\n  else\n    x = 27;\n  while -(0*-27)*(z*(-(1)/(x&&-(-28)))) do {};\n  a = a;\n  a = -(-25);\n  a = 9;\n  z = b;\n  if 0<=-z then\n    z = -25\n  else\n    z = a;\n  while 1 do\n    if -(1)*y then\n      if a then {} else {}\n    else\n      x = 1;\n  b = -(a-1);\n  a = a;\n  x = -(0)\n}",Seq [If (Var "b") (Assign "b" (Binop Equal (Binop Times (Binop Or (Const 0) (Var "y")) (Const 1)) (Const 0))) (Assign "x" (Const 27)),While (Binop Times (Uminus (Binop Times (Const 0) (Const (-27)))) (Binop Times (Var "z") (Binop Div (Uminus (Const 1)) (Binop And (Var "x") (Uminus (Const (-28))))))) (Seq []),Assign "a" (Var "a"),Assign "a" (Uminus (Const (-25))),Assign "a" (Const 9),Assign "z" (Var "b"),If (Binop LessEq (Const 0) (Uminus (Var "z"))) (Assign "z" (Const (-25))) (Assign "z" (Var "a")),While (Const 1) (If (Binop Times (Uminus (Const 1)) (Var "y")) (If (Var "a") (Seq []) (Seq [])) (Assign "x" (Const 1))),Assign "b" (Uminus (Binop Minus (Var "a") (Const 1))),Assign "a" (Var "a"),Assign "x" (Uminus (Const 0))]),
  ("a = 25",Assign "a" (Const 25)),
  ("{\n  z = 16;\n  x = -30;\n  a = -(2);\n  a = -(0);\n  while z do\n    while ((y<=1||-(-15*1))&&-28)+b*((x||y)<=1) do\n      y = x*(b*0/0);\n  if x then\n    if y<z then\n      if 0<(1&&(1||1)) then {} else {}\n    else {}\n  else\n    y = y;\n  x = y;\n  while -20&&6 do\n    y = b;\n  x = -8;\n  while 1 do {};\n  if y then\n    z = 1\n  else {\n    if 1==y then {} else {}\n  }\n}",Seq [Assign "z" (Const 16),Assign "x" (Const (-30)),Assign "a" (Uminus (Const 2)),Assign "a" (Uminus (Const 0)),While (Var "z") (While (Binop Plus (Binop And (Binop Or (Binop LessEq (Var "y") (Const 1)) (Uminus (Binop Times (Const (-15)) (Const 1)))) (Const (-28))) (Binop Times (Var "b") (Binop LessEq (Binop Or (Var "x") (Var "y")) (Const 1)))) (Assign "y" (Binop Times (Var "x") (Binop Div (Binop Times (Var "b") (Const 0)) (Const 0))))),If (Var "x") (If (Binop Less (Var "y") (Var "z")) (If (Binop Less (Const 0) (Binop And (Const 1) (Binop Or (Const 1) (Const 1)))) (Seq []) (Seq [])) (Seq [])) (Assign "y" (Var "y")),Assign "x" (Var "y"),While (Binop And (Const (-20)) (Const 6)) (Assign "y" (Var "b")),Assign "x" (Const (-8)),While (Const 1) (Seq []),If (Var "y") (Assign "z" (Const 1)) (Seq [If (Binop Equal (Const 1) (Var "y")) (Seq []) (Seq [])])]),
  ("b = x",Assign "b" (Var "x")),
  ("b = a",Assign "b" (Var "a")),
  ("x = -28",Assign "x" (Const (-28))),
  ("b = z",Assign "b" (Var "z")),
  ("b = -(-8)||(y||b)/b<0/b-1",Assign "b" (Binop Or (Uminus (Const (-8))) (Binop Less (Binop Div (Binop Or (Var "y") (Var "b")) (Var "b")) (Binop Minus (Binop Div (Const 0) (Var "b")) (Const 1))))),
  ("{\n  y = 1;\n  if 26+(-24+y) then\n    if -4 then {\n      x = 1\n    } else\n      z = y&&-y||(-(0)||-y)\n  else if a then\n    a = -z\n  else\n    b = 1;\n  b = 0;\n  a = a;\n  z = x;\n  z = y;\n  b = x;\n  if -16 then\n    b = -(19/-(22)<=b)\n  else if 22 then {} else\n    x = 1;\n  if y then\n    a = 0\n  else if b then {} else {};\n  x = -(-(x||z<=-y));\n  b = x\n}",Seq [Assign "y" (Const 1),If (Binop Plus (Const 26) (Binop Plus (Const (-24)) (Var "y"))) (If (Const (-4)) (Seq [Assign "x" (Const 1)]) (Assign "z" (Binop Or (Binop And (Var "y") (Uminus (Var "y"))) (Binop Or (Uminus (Const 0)) (Uminus (Var "y")))))) (If (Var "a") (Assign "a" (Uminus (Var "z"))) (Assign "b" (Const 1))),Assign "b" (Const 0),Assign "a" (Var "a"),Assign "z" (Var "x"),Assign "z" (Var "y"),Assign "b" (Var "x"),If (Const (-16)) (Assign "b" (Uminus (Binop LessEq (Binop Div (Const 19) (Uminus (Const 22))) (Var "b")))) (If (Const 22) (Seq []) (Assign "x" (Const 1))),If (Var "y") (Assign "a" (Const 0)) (If (Var "b") (Seq []) (Seq [])),Assign "x" (Uminus (Uminus (Binop Or (Var "x") (Binop LessEq (Var "z") (Uminus (Var "y")))))),Assign "b" (Var "x")]),
  ("z = a*0*(b<(-10-0)/x)<=b",Assign "z" (Binop LessEq (Binop Times (Binop Times (Var "a") (Const 0)) (Binop Less (Var "b") (Binop Div (Binop Minus (Const (-10)) (Const 0)) (Var "x")))) (Var "b"))),
  ("while a do\n  b = 0",While (Var "a") (Assign "b" (Const 0))),
  ("z = y<=(-15<0)&&-(1)",Assign "z" (Binop And (Binop LessEq (Var "y") (Binop Less (Const (-15)) (Const 0))) (Uminus (Const 1)))),
  ("y = (y+0)/1*x/(x<=-(1))",Assign "y" (Binop Div (Binop Times (Binop Div (Binop Plus (Var "y") (Const 0)) (Const 1)) (Var "x")) (Binop LessEq (Var "x") (Uminus (Const 1))))),
  ("if -14 then {} else\n  a = -(1-a||y)",If (Const (-14)) (Seq []) (Assign "a" (Uminus (Binop Or (Binop Minus (Const 1) (Var "a")) (Var "y"))))),
  ("if -(-(-23)) then\n  z = 4\nelse\n  b = (-(1<=1)&&a)<1",If (Uminus (Uminus (Const (-23)))) (Assign "z" (Const 4)) (Assign "b" (Binop Less (Binop And (Uminus (Binop LessEq (Const 1) (Const 1))) (Var "a")) (Const 1)))),
  ("if 0 then\n  while y do {\n    y = 10-(0<z)\n  }\nelse if 1 then\n  z = 0\nelse\n  z = y",If (Const 0) (While (Var "y") (Seq [Assign "y" (Binop Minus (Const 10) (Binop Less (Const 0) (Var "z")))])) (If (Const 1) (Assign "z" (Const 0)) (Assign "z" (Var "y")))),
  ("if x||a then {\n  a = -16;\n  z = b;\n  if y then\n    b = -6\n  else\n    z = y;\n  if -26 then\n    b = 1\n  else\n    z = -(1||-18<-x);\n  y = 1;\n  a = x*4/-(z||0);\n  if x then\n    if x then\n      z = -3\n    else\n      a = -(-13)\n  else\n    b = 0&&17+a\n} else if -(-a/y) then {} else\n  while -(x/0) do {}",If (Binop Or (Var "x") (Var "a")) (Seq [Assign "a" (Const (-16)),Assign "z" (Var "b"),If (Var "y") (Assign "b" (Const (-6))) (Assign "z" (Var "y")),If (Const (-26)) (Assign "b" (Const 1)) (Assign "z" (Uminus (Binop Or (Const 1) (Binop Less (Const (-18)) (Uminus (Var "x")))))),Assign "y" (Const 1),Assign "a" (Binop Div (Binop Times (Var "x") (Const 4)) (Uminus (Binop Or (Var "z") (Const 0)))),If (Var "x") (If (Var "x") (Assign "z" (Const (-3))) (Assign "a" (Uminus (Const (-13))))) (Assign "b" (Binop And (Const 0) (Binop Plus (Const 17) (Var "a"))))]) (If (Uminus (Binop Div (Uminus (Var "a")) (Var "y"))) (Seq []) (While (Uminus (Binop Div (Var "x") (Const 0))) (Seq [])))),
  ("{\n  if (a==(z+x||a))+z-x then\n    a = 1\n  else if x then {} else if x then\n    if x then {} else {}\n  else\n    a = (-a<=-(-9))+-6;\n  if y then\n    z = 1\n  else {\n    y = a\n  };\n  z = -(0);\n  b = -(-y);\n  y = a;\n  z = 0;\n  b = x;\n  a = 0;\n  while a do\n    b = 1;\n  x = x<=b;\n  b = 0;\n  if z then\n    a = 1\n  else\n    z = a\n}",Seq [If (Binop Minus (Binop Plus (Binop Equal (Var "a") (Binop Or (Binop Plus (Var "z") (Var "x")) (Var "a"))) (Var "z")) (Var "x")) (Assign "a" (Const 1)) (If (Var "x") (Seq []) (If (Var "x") (If (Var "x") (Seq []) (Seq [])) (Assign "a" (Binop Plus (Binop LessEq (Uminus (Var "a")) (Uminus (Const (-9)))) (Const (-6)))))),If (Var "y") (Assign "z" (Const 1)) (Seq [Assign "y" (Var "a")]),Assign "z" (Uminus (Const 0)),Assign "b" (Uminus (Uminus (Var "y"))),Assign "y" (Var "a"),Assign "z" (Const 0),Assign "b" (Var "x"),Assign "a" (Const 0),While (Var "a") (Assign "b" (Const 1)),Assign "x" (Binop LessEq (Var "x") (Var "b")),Assign "b" (Const 0),If (Var "z") (Assign "a" (Const 1)) (Assign "z" (Var "a"))]),
  ("{\n  if -y then\n    x = z\n  else {};\n  a = -3/(-(8)<0);\n  z = b||0;\n  while z/a do\n    x = -(1--14)\n}",Seq [If (Uminus (Var "y")) (Assign "x" (Var "z")) (Seq []),Assign "a" (Binop Div (Const (-3)) (Binop Less (Uminus (Const 8)) (Const 0))),Assign "z" (Binop Or (Var "b") (Const 0)),While (Binop Div (Var "z") (Var "a")) (Assign "x" (Uminus (Binop Minus (Const 1) (Const (-14)))))]),
  ("if (y+0||1)*x==6 then\n  if 1 then\n    if -27 then {} else\n      a = z\n  else {}\nelse if (-5--(1/7<0))*1 then\n  if a<=-x then\n    x = -8\n  else\n    z = b\nelse\n  b = -29<=-13",If (Binop Equal (Binop Times (Binop Or (Binop Plus (Var "y") (Const 0)) (Const 1)) (Var "x")) (Const 6)) (If (Const 1) (If (Const (-27)) (Seq []) (Assign "a" (Var "z"))) (Seq [])) (If (Binop Times (Binop Minus (Const (-5)) (Uminus (Binop Less (Binop Div (Const 1) (Const 7)) (Const 0)))) (Const 1)) (If (Binop LessEq (Var "a") (Uminus (Var "x"))) (Assign "x" (Const (-8))) (Assign "z" (Var "b"))) (Assign "b" (Binop LessEq (Const (-29)) (Const (-13)))))),
  ("b = 1",Assign "b" (Const 1)),
  ("y = a",Assign "y" (Var "a")),
  ("{\n  if a+1 then\n    while 1 do\n      b = 0\n  else\n    while 11/-15 do\n      while -(-y) do {}\n}",Seq [If (Binop Plus (Var "a") (Const 1)) (While (Const 1) (Assign "b" (Const 0))) (While (Binop Div (Const 11) (Const (-15))) (While (Uminus (Uminus (Var "y"))) (Seq [])))]),
  ("{\n  y = 27;\n  if -b+0*a<-(0) then\n    y = x+b+10==-(0)\n  else {\n    while -(-(0)) do {};\n    while -(-30) do\n      if 1<b then {} else {};\n    b = -28\n  };\n  b = 1\n}",Seq [Assign "y" (Const 27),If (Binop Less (Binop Plus (Uminus (Var "b")) (Binop Times (Const 0) (Var "a"))) (Uminus (Const 0))) (Assign "y" (Binop Equal (Binop Plus (Binop Plus (Var "x") (Var "b")) (Const 10)) (Uminus (Const 0)))) (Seq [While (Uminus (Uminus (Const 0))) (Seq []),While (Uminus (Const (-30))) (If (Binop Less (Const 1) (Var "b")) (Seq []) (Seq [])),Assign "b" (Const (-28))]),Assign "b" (Const 1)]),
  ("while -(z+0) do\n  while 0+b do\n    z = b",While (Uminus (Binop Plus (Var "z") (Const 0))) (While (Binop Plus (Const 0) (Var "b")) (Assign "z" (Var "b")))),
  ("{\n  x = -(0);\n  while b do\n    a = 0;\n  if x then\n    z = -12\n  else if 1 then\n    if -27||y&&-3||a then {} else {}\n  else\n    x = -(-x)<(x==0);\n  x = -6;\n  y = a;\n  a = b/b;\n  x = 0<-(-(1));\n  x = -(10&&1);\n  b = 1;\n  a = y;\n  y = -((b<1/0)/(-(0)+-19)+12);\n  a = -b;\n  if -(-18)<=(-28==-17)&&1<-((b-y)*1) then {\n    b = 0\n  } else\n    x = x;\n  while -(-(-(z<z==1))) do\n    y = 1\n}",Seq [Assign "x" (Uminus (Const 0)),While (Var "b") (Assign "a" (Const 0)),If (Var "x") (Assign "z" (Const (-12))) (If (Const 1) (If (Binop Or (Binop Or (Const (-27)) (Binop And (Var "y") (Const (-3)))) (Var "a")) (Seq []) (Seq [])) (Assign "x" (Binop Less (Uminus (Uminus (Var "x"))) (Binop Equal (Var "x") (Const 0))))),Assign "x" (Const (-6)),Assign "y" (Var "a"),Assign "a" (Binop Div (Var "b") (Var "b")),Assign "x" (Binop Less (Const 0) (Uminus (Uminus (Const 1)))),Assign "x" (Uminus (Binop And (Const 10) (Const 1))),Assign "b" (Const 1),Assign "a" (Var "y"),Assign "y" (Uminus (Binop Plus (Binop Div (Binop Less (Var "b") (Binop Div (Const 1) (Const 0))) (Binop Plus (Uminus (Const 0)) (Const (-19)))) (Const 12))),Assign "a" (Uminus (Var "b")),If (Binop And (Binop LessEq (Uminus (Const (-18))) (Binop Equal (Const (-28)) (Const (-17)))) (Binop Less (Const 1) (Uminus (Binop Times (Binop Minus (Var "b") (Var "y")) (Const 1))))) (Seq [Assign "b" (Const 0)]) (Assign "x" (Var "x")),While (Uminus (Uminus (Uminus (Binop Equal (Binop Less (Var "z") (Var "z")) (Const 1))))) (Assign "y" (Const 1))]),
  ("x = 0*1",Assign "x" (Binop Times (Const 0) (Const 1))),
  ("{\n  y = -(x/0);\n  b = -x;\n  while 27+x+x+1 do\n    b = b;\n  z = -(a<=0)<=y;\n  y = y;\n  a = b;\n  y = 1||b;\n  if (a||y)==(0||1+(0+0)) then {} else\n    while x do\n      z = y;\n  y = b;\n  z = 0<0;\n  if 0||9 then\n    y = -y\n  else {};\n  x = 1;\n  z = b==-14;\n  b = y;\n  y = 0;\n  a = -25;\n  z = -(0);\n  y = z;\n  b = -15;\n  while 1 do\n    z = (1||b)/(x/z);\n  x = z;\n  y = 1;\n  y = -14-((z<=1==24/0)-0)-((-(1)||-(-10))*z<=y);\n  z = 14;\n  if z then {} else {};\n  b = y;\n  b = 14;\n  a = 1*1;\n  x = 1-(y||z)&&-(-26)&&a<=1;\n  b = -9\n}",Seq [Assign "y" (Uminus (Binop Div (Var "x") (Const 0))),Assign "b" (Uminus (Var "x")),While (Binop Plus (Binop Plus (Binop Plus (Const 27) (Var "x")) (Var "x")) (Const 1)) (Assign "b" (Var "b")),Assign "z" (Binop LessEq (Uminus (Binop LessEq (Var "a") (Const 0))) (Var "y")),Assign "y" (Var "y"),Assign "a" (Var "b"),Assign "y" (Binop Or (Const 1) (Var "b")),If (Binop Equal (Binop Or (Var "a") (Var "y")) (Binop Or (Const 0) (Binop Plus (Const 1) (Binop Plus (Const 0) (Const 0))))) (Seq []) (While (Var "x") (Assign "z" (Var "y"))),Assign "y" (Var "b"),Assign "z" (Binop Less (Const 0) (Const 0)),If (Binop Or (Const 0) (Const 9)) (Assign "y" (Uminus (Var "y"))) (Seq []),Assign "x" (Const 1),Assign "z" (Binop Equal (Var "b") (Const (-14))),Assign "b" (Var "y"),Assign "y" (Const 0),Assign "a" (Const (-25)),Assign "z" (Uminus (Const 0)),Assign "y" (Var "z"),Assign "b" (Const (-15)),While (Const 1) (Assign "z" (Binop Div (Binop Or (Const 1) (Var "b")) (Binop Div (Var "x") (Var "z")))),Assign "x" (Var "z"),Assign "y" (Const 1),Assign "y" (Binop Minus (Binop Minus (Const (-14)) (Binop Minus (Binop Equal (Binop LessEq (Var "z") (Const 1)) (Binop Div (Const 24) (Const 0))) (Const 0))) (Binop LessEq (Binop Times (Binop Or (Uminus (Const 1)) (Uminus (Const (-10)))) (Var "z")) (Var "y"))),Assign "z" (Const 14),If (Var "z") (Seq []) (Seq []),Assign "b" (Var "y"),Assign "b" (Const 14),Assign "a" (Binop Times (Const 1) (Const 1)),Assign "x" (Binop And (Binop And (Binop Minus (Const 1) (Binop Or (Var "y") (Var "z"))) (Uminus (Const (-26)))) (Binop LessEq (Var "a") (Const 1))),Assign "b" (Const (-9))]),
  ("{\n  if -(0&&b)&&y then\n    z = 0-a<a\n  else {\n    x = -(1)<b||y;\n    if 0<=0 then\n      b = -(1<=(b==0)<x*z*(z+-6)||a)\n    else if 0 then {} else {};\n    while b do {}\n  };\n  if a then {\n    b = z\n  } else {};\n  b = 1;\n  x = x;\n  while 0||b do {\n    if z then {} else {}\n  };\n  if z then\n    if 7 then\n      x = -(0)\n    else\n      a = -2+1<a\n  else\n    y = x||x;\n  a = y;\n  b = 0;\n  b = 0;\n  b = 6;\n  if z then {\n    x = y\n  } else\n    z = y;\n  z = a;\n  a = y;\n  while 1 do {};\n  a = -(1);\n  if a then\n    z = 1*1\n  else {};\n  z = a-(-(-(0))/0<z);\n  while -(21) do\n    if 1 then\n      y = 1\n    else if -a<30<=0 then {} else if -(x*b)&&-(0) then {} else {};\n  b = x;\n  while -(-(0))<=x||b&&a do {};\n  x = 1;\n  b = z+0;\n  while -(y*-(7)) do\n    if a then {\n      a = 0/25&&24<=0\n    } else\n      while -(-x) do {}\n}",Seq [If (Binop And (Uminus (Binop And (Const 0) (Var "b"))) (Var "y")) (Assign "z" (Binop Less (Binop Minus (Const 0) (Var "a")) (Var "a"))) (Seq [Assign "x" (Binop Or (Binop Less (Uminus (Const 1)) (Var "b")) (Var "y")),If (Binop LessEq (Const 0) (Const 0)) (Assign "b" (Uminus (Binop Or (Binop Less (Binop LessEq (Const 1) (Binop Equal (Var "b") (Const 0))) (Binop Times (Binop Times (Var "x") (Var "z")) (Binop Plus (Var "z") (Const (-6))))) (Var "a")))) (If (Const 0) (Seq []) (Seq [])),While (Var "b") (Seq [])]),If (Var "a") (Seq [Assign "b" (Var "z")]) (Seq []),Assign "b" (Const 1),Assign "x" (Var "x"),While (Binop Or (Const 0) (Var "b")) (Seq [If (Var "z") (Seq []) (Seq [])]),If (Var "z") (If (Const 7) (Assign "x" (Uminus (Const 0))) (Assign "a" (Binop Less (Binop Plus (Const (-2)) (Const 1)) (Var "a")))) (Assign "y" (Binop Or (Var "x") (Var "x"))),Assign "a" (Var "y"),Assign "b" (Const 0),Assign "b" (Const 0),Assign "b" (Const 6),If (Var "z") (Seq [Assign "x" (Var "y")]) (Assign "z" (Var "y")),Assign "z" (Var "a"),Assign "a" (Var "y"),While (Const 1) (Seq []),Assign "a" (Uminus (Const 1)),If (Var "a") (Assign "z" (Binop Times (Const 1) (Const 1))) (Seq []),Assign "z" (Binop Minus (Var "a") (Binop Less (Binop Div (Uminus (Uminus (Const 0))) (Const 0)) (Var "z"))),While (Uminus (Const 21)) (If (Const 1) (Assign "y" (Const 1)) (If (Binop LessEq (Binop Less (Uminus (Var "a")) (Const 30)) (Const 0)) (Seq []) (If (Binop And (Uminus (Binop Times (Var "x") (Var "b"))) (Uminus (Const 0))) (Seq []) (Seq [])))),Assign "b" (Var "x"),While (Binop Or (Binop LessEq (Uminus (Uminus (Const 0))) (Var "x")) (Binop And (Var "b") (Var "a"))) (Seq []),Assign "x" (Const 1),Assign "b" (Binop Plus (Var "z") (Const 0)),While (Uminus (Binop Times (Var "y") (Uminus (Const 7)))) (If (Var "a") (Seq [Assign "a" (Binop And (Binop Div (Const 0) (Const 25)) (Binop LessEq (Const 24) (Const 0)))]) (While (Uminus (Uminus (Var "x"))) (Seq [])))]),
  ("a = (-12+18)/-15/y||4--13",Assign "a" (Binop Or (Binop Div (Binop Div (Binop Plus (Const (-12)) (Const 18)) (Const (-15))) (Var "y")) (Binop Minus (Const 4) (Const (-13))))),
  ("b = a==0",Assign "b" (Binop Equal (Var "a") (Const 0))),
  ("{\n  if 1 then\n    y = 1\n  else\n    a = ((1<-21)/(1-14)/(a||-(-7))<0)--a;\n  while 8 do\n    if -19 then {} else {};\n  z = z;\n  if 0 then\n    x = 0\n  else {};\n  if 25 then\n    y = b/z<22\n  else {};\n  y = -a;\n  b = -22;\n  while (y<23)+b do {};\n  if -(5) then\n    if a then\n      y = x\n    else {}\n  else\n    while b do\n      if 1 then {} else {};\n  x = a\n}",Seq [If (Const 1) (Assign "y" (Const 1)) (Assign "a" (Binop Minus (Binop Less (Binop Div (Binop Div (Binop Less (Const 1) (Const (-21))) (Binop Minus (Const 1) (Const 14))) (Binop Or (Var "a") (Uminus (Const (-7))))) (Const 0)) (Uminus (Var "a")))),While (Const 8) (If (Const (-19)) (Seq []) (Seq [])),Assign "z" (Var "z"),If (Const 0) (Assign "x" (Const 0)) (Seq []),If (Const 25) (Assign "y" (Binop Less (Binop Div (Var "b") (Var "z")) (Const 22))) (Seq []),Assign "y" (Uminus (Var "a")),Assign "b" (Const (-22)),While (Binop Plus (Binop Less (Var "y") (Const 23)) (Var "b")) (Seq []),If (Uminus (Const 5)) (If (Var "a") (Assign "y" (Var "x")) (Seq [])) (While (Var "b") (If (Const 1) (Seq []) (Seq []))),Assign "x" (Var "a")]),
  ("{\n  a = 1;\n  if 1 then\n    if 0 then\n      if x then {} else {}\n    else if 0 then {} else\n      a = -(1)<=-20\n  else {};\n  if -(1)&&-z then\n    z = 0\n  else if x then {} else\n    a = 1;\n  b = -23;\n  b = -(-19+-(-(5*x)));\n  if 18 then {\n    y = (0<-y)-1||(0<=z/1)+-(1)\n  } else\n    a = 1||x;\n  while -(a/a) do\n    while 1+y do\n      while 1 do {};\n  if b then\n    y = a\n  else {};\n  x = b;\n  a = 0;\n  if b then\n    b = 0==a\n  else if 1/0 then\n    while b do {}\n  else\n    x = a;\n  if 0==(1<-a&&27)-z then\n    while -(0)*x do {}\n  else {};\n  a = 0&&0;\n  y = a\n}",Seq [Assign "a" (Const 1),If (Const 1) (If (Const 0) (If (Var "x") (Seq []) (Seq [])) (If (Const 0) (Seq []) (Assign "a" (Binop LessEq (Uminus (Const 1)) (Const (-20)))))) (Seq []),If (Binop And (Uminus (Const 1)) (Uminus (Var "z"))) (Assign "z" (Const 0)) (If (Var "x") (Seq []) (Assign "a" (Const 1))),Assign "b" (Const (-23)),Assign "b" (Uminus (Binop Plus (Const (-19)) (Uminus (Uminus (Binop Times (Const 5) (Var "x")))))),If (Const 18) (Seq [Assign "y" (Binop Or (Binop Minus (Binop Less (Const 0) (Uminus (Var "y"))) (Const 1)) (Binop Plus (Binop LessEq (Const 0) (Binop Div (Var "z") (Const 1))) (Uminus (Const 1))))]) (Assign "a" (Binop Or (Const 1) (Var "x"))),While (Uminus (Binop Div (Var "a") (Var "a"))) (While (Binop Plus (Const 1) (Var "y")) (While (Const 1) (Seq []))),If (Var "b") (Assign "y" (Var "a")) (Seq []),Assign "x" (Var "b"),Assign "a" (Const 0),If (Var "b") (Assign "b" (Binop Equal (Const 0) (Var "a"))) (If (Binop Div (Const 1) (Const 0)) (While (Var "b") (Seq [])) (Assign "x" (Var "a"))),If (Binop Equal (Const 0) (Binop Minus (Binop And (Binop Less (Const 1) (Uminus (Var "a"))) (Const 27)) (Var "z"))) (While (Binop Times (Uminus (Const 0)) (Var "x")) (Seq [])) (Seq []),Assign "a" (Binop And (Const 0) (Const 0)),Assign "y" (Var "a")]),
  ("x = 1||-b--a*1-x",Assign "x" (Binop Or (Const 1) (Binop Minus (Binop Minus (Uminus (Var "b")) (Binop Times (Uminus (Var "a")) (Const 1))) (Var "x")))),
  ("x = 1/(x*a)",Assign "x" (Binop Div (Const 1) (Binop Times (Var "x") (Var "a")))),
  ("if b then\n  x = y\nelse\n  b = -(-(-(13+0)))",If (Var "b") (Assign "x" (Var "y")) (Assign "b" (Uminus (Uminus (Uminus (Binop Plus (Const 13) (Const 0))))))),
  ("if -(-(0)) then\n  while a do\n    if 1 then\n      if -(1)<=-b then\n        b = 0--(0<=1)/(-8/9)<=y\n      else {}\n    else if 25*a then\n      b = y\n    else\n      x = x\nelse\n  z = 0",If (Uminus (Uminus (Const 0))) (While (Var "a") (If (Const 1) (If (Binop LessEq (Uminus (Const 1)) (Uminus (Var "b"))) (Assign "b" (Binop LessEq (Binop Minus (Const 0) (Binop Div (Uminus (Binop LessEq (Const 0) (Const 1))) (Binop Div (Const (-8)) (Const 9)))) (Var "y"))) (Seq [])) (If (Binop Times (Const 25) (Var "a")) (Assign "b" (Var "y")) (Assign "x" (Var "x"))))) (Assign "z" (Const 0))),
  ("z = x",Assign "z" (Var "x")),
  ("z = -(-z)<=(b<(26==26))",Assign "z" (Binop LessEq (Uminus (Uminus (Var "z"))) (Binop Less (Var "b") (Binop Equal (Const 26) (Const 26))))),
  ("y = x",Assign "y" (Var "x")),
  ("if -8 then\n  x = 1&&19*(20&&-(0))\nelse\n  a = y",If (Const (-8)) (Assign "x" (Binop And (Const 1) (Binop Times (Const 19) (Binop And (Const 20) (Uminus (Const 0)))))) (Assign "a" (Var "y"))),
  ("if -z then\n  x = -x\nelse if x then\n  a = a\nelse\n  x = z",If (Uminus (Var "z")) (Assign "x" (Uminus (Var "x"))) (If (Var "x") (Assign "a" (Var "a")) (Assign "x" (Var "z")))),
  ("if a<0&&-y/x then {\n  x = 0*(1+3)<=-(x&&y);\n  if 16 then\n    while b do {}\n  else if 0 then {} else {};\n  if -(-(1)) then {\n    while 7 do {}\n  } else\n    z = -17\n} else {\n  if (y-z)/-(1) then\n    b = -4\n  else\n    y = 1<z;\n  x = -(0)==16;\n  while 5 do\n    y = 0\n}",If (Binop And (Binop Less (Var "a") (Const 0)) (Binop Div (Uminus (Var "y")) (Var "x"))) (Seq [Assign "x" (Binop LessEq (Binop Times (Const 0) (Binop Plus (Const 1) (Const 3))) (Uminus (Binop And (Var "x") (Var "y")))),If (Const 16) (While (Var "b") (Seq [])) (If (Const 0) (Seq []) (Seq [])),If (Uminus (Uminus (Const 1))) (Seq [While (Const 7) (Seq [])]) (Assign "z" (Const (-17)))]) (Seq [If (Binop Div (Binop Minus (Var "y") (Var "z")) (Uminus (Const 1))) (Assign "b" (Const (-4))) (Assign "y" (Binop Less (Const 1) (Var "z"))),Assign "x" (Binop Equal (Uminus (Const 0)) (Const 16)),While (Const 5) (Assign "y" (Const 0))])),
  ("{\n  if -(-(1))||y then\n    while 0 do\n      if 1||y<a then\n        z = (21<=0)-a\n      else if 0*y then {} else {}\n  else\n    while -(0) do\n      while -a+(1-a) do\n        a = 0;\n  b = b;\n  if (-(-x)||y)==(1||1) then\n    x = x<=x\n  else\n    b = z;\n  x = 0;\n  if y then {} else {};\n  x = y;\n  while 25 do {\n    y = 1-(a&&1);\n    if x then\n      if b-0 then {} else {}\n    else if a then {} else {};\n    z = -19\n  }\n}",Seq [If (Binop Or (Uminus (Uminus (Const 1))) (Var "y")) (While (Const 0) (If (Binop Or (Const 1) (Binop Less (Var "y") (Var "a"))) (Assign "z" (Binop Minus (Binop LessEq (Const 21) (Const 0)) (Var "a"))) (If (Binop Times (Const 0) (Var "y")) (Seq []) (Seq [])))) (While (Uminus (Const 0)) (While (Binop Plus (Uminus (Var "a")) (Binop Minus (Const 1) (Var "a"))) (Assign "a" (Const 0)))),Assign "b" (Var "b"),If (Binop Equal (Binop Or (Uminus (Uminus (Var "x"))) (Var "y")) (Binop Or (Const 1) (Const 1))) (Assign "x" (Binop LessEq (Var "x") (Var "x"))) (Assign "b" (Var "z")),Assign "x" (Const 0),If (Var "y") (Seq []) (Seq []),Assign "x" (Var "y"),While (Const 25) (Seq [Assign "y" (Binop Minus (Const 1) (Binop And (Var "a") (Const 1))),If (Var "x") (If (Binop Minus (Var "b") (Const 0)) (Seq []) (Seq [])) (If (Var "a") (Seq []) (Seq [])),Assign "z" (Const (-19))])]),
  ("{\n  if 0 then\n    b = z\n  else\n    y = y;\n  while -(1) do\n    z = 25;\n  y = -(x&&1)==(1||y)&&1||1/((0==y)/-(0<=y));\n  if a then\n    x = b\n  else if -20 then {} else\n    z = x;\n  y = y;\n  b = 4==((0||x)<=1);\n  z = x;\n  z = y\n}",Seq [If (Const 0) (Assign "b" (Var "z")) (Assign "y" (Var "y")),While (Uminus (Const 1)) (Assign "z" (Const 25)),Assign "y" (Binop Or (Binop And (Binop Equal (Uminus (Binop And (Var "x") (Const 1))) (Binop Or (Const 1) (Var "y"))) (Const 1)) (Binop Div (Const 1) (Binop Div (Binop Equal (Const 0) (Var "y")) (Uminus (Binop LessEq (Const 0) (Var "y")))))),If (Var "a") (Assign "x" (Var "b")) (If (Const (-20)) (Seq []) (Assign "z" (Var "x"))),Assign "y" (Var "y"),Assign "b" (Binop Equal (Const 4) (Binop LessEq (Binop Or (Const 0) (Var "x")) (Const 1))),Assign "z" (Var "x"),Assign "z" (Var "y")]),
  ("z = -6",Assign "z" (Const (-6))),
  ("if 17 then\n  if a then {\n    z = 1;\n    if b--(-9)||a then\n      z = y\n    else if -(1) then {} else {};\n    y = -19<b<0\n  } else {\n    a = -y\n  }\nelse\n  a = b/-z",If (Const 17) (If (Var "a") (Seq [Assign "z" (Const 1),If (Binop Or (Binop Minus (Var "b") (Uminus (Const (-9)))) (Var "a")) (Assign "z" (Var "y")) (If (Uminus (Const 1)) (Seq []) (Seq [])),Assign "y" (Binop Less (Binop Less (Const (-19)) (Var "b")) (Const 0))]) (Seq [Assign "a" (Uminus (Var "y"))])) (Assign "a" (Binop Div (Var "b") (Uminus (Var "z"))))),
  ("if a then {\n  y = z;\n  while b&&(y&&y) do\n    a = x*-8;\n  if 0<=a then\n    b = x\n  else\n    while y+(z==-26/5) do\n      b = -1;\n  a = -b\n} else\n  z = -(-(x==5))",If (Var "a") (Seq [Assign "y" (Var "z"),While (Binop And (Var "b") (Binop And (Var "y") (Var "y"))) (Assign "a" (Binop Times (Var "x") (Const (-8)))),If (Binop LessEq (Const 0) (Var "a")) (Assign "b" (Var "x")) (While (Binop Plus (Var "y") (Binop Equal (Var "z") (Binop Div (Const (-26)) (Const 5)))) (Assign "b" (Const (-1)))),Assign "a" (Uminus (Var "b"))]) (Assign "z" (Uminus (Uminus (Binop Equal (Var "x") (Const 5)))))),
  ("if 0/a&&12 then\n  if b<=y then\n    while x==(z==0) do\n      y = 0\n  else\n    x = -(0)\nelse\n  x = y||b",If (Binop And (Binop Div (Const 0) (Var "a")) (Const 12)) (If (Binop LessEq (Var "b") (Var "y")) (While (Binop Equal (Var "x") (Binop Equal (Var "z") (Const 0))) (Assign "y" (Const 0))) (Assign "x" (Uminus (Const 0)))) (Assign "x" (Binop Or (Var "y") (Var "b")))),
  ("y = 24",Assign "y" (Const 24)),
  ("z = -10",Assign "z" (Const (-10))),
  ("x = -z",Assign "x" (Uminus (Var "z"))),
  ("{\n  if -26 then\n    a = x\n  else\n    x = 1;\n  z = y;\n  if -3 then\n    a = y\n  else\n    y = b<y-z;\n  b = x||z;\n  if 1 then\n    while y do\n      x = x\n  else if 0||a then\n    if y then\n      a = 0==-11&&b\n    else\n      a = 1\n  else {};\n  a = -b;\n  x = 1;\n  b = 19;\n  if 0 then\n    y = -a\n  else {};\n  if -(-a) then\n    b = a\n  else\n    while y do {};\n  x = z*y;\n  x = -(7)+-4;\n  if z then {\n    while y do\n      a = 0;\n    a = b*x\n  } else\n    b = -(-y)&&0;\n  if y then\n    while 0*22 do\n      if -10 then {} else {}\n  else if -3+a then {} else {};\n  y = z;\n  if z then\n    while 1||z do\n      z = 0\n  else\n    y = z;\n  a = 27;\n  if -(0) then\n    if 0 then\n      z = -(9)\n    else\n      y = 21\n  else\n    while b<-(-27)/z do\n      if z&&b then\n        b = -(-(x==b)+-9*b<=y)\n      else if a then {} else {}\n}",Seq [If (Const (-26)) (Assign "a" (Var "x")) (Assign "x" (Const 1)),Assign "z" (Var "y"),If (Const (-3)) (Assign "a" (Var "y")) (Assign "y" (Binop Less (Var "b") (Binop Minus (Var "y") (Var "z")))),Assign "b" (Binop Or (Var "x") (Var "z")),If (Const 1) (While (Var "y") (Assign "x" (Var "x"))) (If (Binop Or (Const 0) (Var "a")) (If (Var "y") (Assign "a" (Binop And (Binop Equal (Const 0) (Const (-11))) (Var "b"))) (Assign "a" (Const 1))) (Seq [])),Assign "a" (Uminus (Var "b")),Assign "x" (Const 1),Assign "b" (Const 19),If (Const 0) (Assign "y" (Uminus (Var "a"))) (Seq []),If (Uminus (Uminus (Var "a"))) (Assign "b" (Var "a")) (While (Var "y") (Seq [])),Assign "x" (Binop Times (Var "z") (Var "y")),Assign "x" (Binop Plus (Uminus (Const 7)) (Const (-4))),If (Var "z") (Seq [While (Var "y") (Assign "a" (Const 0)),Assign "a" (Binop Times (Var "b") (Var "x"))]) (Assign "b" (Binop And (Uminus (Uminus (Var "y"))) (Const 0))),If (Var "y") (While (Binop Times (Const 0) (Const 22)) (If (Const (-10)) (Seq []) (Seq []))) (If (Binop Plus (Const (-3)) (Var "a")) (Seq []) (Seq [])),Assign "y" (Var "z"),If (Var "z") (While (Binop Or (Const 1) (Var "z")) (Assign "z" (Const 0))) (Assign "y" (Var "z")),Assign "a" (Const 27),If (Uminus (Const 0)) (If (Const 0) (Assign "z" (Uminus (Const 9))) (Assign "y" (Const 21))) (While (Binop Less (Var "b") (Binop Div (Uminus (Const (-27))) (Var "z"))) (If (Binop And (Var "z") (Var "b")) (Assign "b" (Uminus (Binop LessEq (Binop Plus (Uminus (Binop Equal (Var "x") (Var "b"))) (Binop Times (Const (-9)) (Var "b"))) (Var "y")))) (If (Var "a") (Seq []) (Seq []))))]),
  ("{\n  y = -a;\n  y = 1;\n  y = 0||-y;\n  while -a do\n    if b then\n      if z then\n        y = -(a/-9)<(0==0)\n      else\n        x = 0==y--(23)/z\n    else\n      y = z;\n  if 0 then\n    a = 1\n  else\n    a = y;\n  if 16*x-x then {} else\n    x = y==-a\n}",Seq [Assign "y" (Uminus (Var "a")),Assign "y" (Const 1),Assign "y" (Binop Or (Const 0) (Uminus (Var "y"))),While (Uminus (Var "a")) (If (Var "b") (If (Var "z") (Assign "y" (Binop Less (Uminus (Binop Div (Var "a") (Const (-9)))) (Binop Equal (Const 0) (Const 0)))) (Assign "x" (Binop Equal (Const 0) (Binop Minus (Var "y") (Binop Div (Uminus (Const 23)) (Var "z")))))) (Assign "y" (Var "z"))),If (Const 0) (Assign "a" (Const 1)) (Assign "a" (Var "y")),If (Binop Minus (Binop Times (Const 16) (Var "x")) (Var "x")) (Seq []) (Assign "x" (Binop Equal (Var "y") (Uminus (Var "a"))))]),
  ("b = -z",Assign "b" (Uminus (Var "z"))),
  ("if x then {\n  z = b\n} else\n  x = 0&&22",If (Var "x") (Seq [Assign "z" (Var "b")]) (Assign "x" (Binop And (Const 0) (Const 22)))),
  ("while 1 do\n  z = x",While (Const 1) (Assign "z" (Var "x"))),
  ("a = z+-(0<=(-(0)<=b))",Assign "a" (Binop Plus (Var "z") (Uminus (Binop LessEq (Const 0) (Binop LessEq (Uminus (Const 0)) (Var "b")))))),
  ("a = 0",Assign "a" (Const 0)),
  ("{\n  if (b||-7+-7/0)*0 then\n    a = 1\n  else\n    b = 1;\n  a = 0;\n  b = -3;\n  if x then\n    if b then\n      a = -(1&&1*(y+y))-(y-10/b)\n    else\n      while z do {}\n  else {\n    x = 28;\n    z = -(0||27*0+-3==x)\n  };\n  x = -(-22*0)*1-(-(-y)==25<0);\n  if 14 then\n    if -(1) then\n      x = y||x\n    else {\n      y = 7\n    }\n  else\n    x = -19;\n  if -30 then\n    b = 1\n  else\n    b = b;\n  if -((y<=(x--28)*(b<b))*1) then {\n    z = 5;\n    while y||0 do {}\n  } else\n    b = b;\n  a = -(1)-0;\n  if x then\n    if y then {} else {}\n  else {};\n  y = (-(20)&&10)/1;\n  a = 0<=x;\n  x = 29;\n  if a then\n    if z then\n      x = (x<=z)+-28/(z==1)==-19&&0\n    else {}\n  else\n    a = y;\n  y = 1;\n  x = z;\n  b = -(-19);\n  x = 1;\n  z = b-x/x;\n  a = x*0\n}",Seq [If (Binop Times (Binop Or (Var "b") (Binop Plus (Const (-7)) (Binop Div (Const (-7)) (Const 0)))) (Const 0)) (Assign "a" (Const 1)) (Assign "b" (Const 1)),Assign "a" (Const 0),Assign "b" (Const (-3)),If (Var "x") (If (Var "b") (Assign "a" (Binop Minus (Uminus (Binop And (Const 1) (Binop Times (Const 1) (Binop Plus (Var "y") (Var "y"))))) (Binop Minus (Var "y") (Binop Div (Const 10) (Var "b"))))) (While (Var "z") (Seq []))) (Seq [Assign "x" (Const 28),Assign "z" (Uminus (Binop Or (Const 0) (Binop Equal (Binop Plus (Binop Times (Const 27) (Const 0)) (Const (-3))) (Var "x"))))]),Assign "x" (Binop Minus (Binop Times (Uminus (Binop Times (Const (-22)) (Const 0))) (Const 1)) (Binop Less (Binop Equal (Uminus (Uminus (Var "y"))) (Const 25)) (Const 0))),If (Const 14) (If (Uminus (Const 1)) (Assign "x" (Binop Or (Var "y") (Var "x"))) (Seq [Assign "y" (Const 7)])) (Assign "x" (Const (-19))),If (Const (-30)) (Assign "b" (Const 1)) (Assign "b" (Var "b")),If (Uminus (Binop Times (Binop LessEq (Var "y") (Binop Times (Binop Minus (Var "x") (Const (-28))) (Binop Less (Var "b") (Var "b")))) (Const 1))) (Seq [Assign "z" (Const 5),While (Binop Or (Var "y") (Const 0)) (Seq [])]) (Assign "b" (Var "b")),Assign "a" (Binop Minus (Uminus (Const 1)) (Const 0)),If (Var "x") (If (Var "y") (Seq []) (Seq [])) (Seq []),Assign "y" (Binop Div (Binop And (Uminus (Const 20)) (Const 10)) (Const 1)),Assign "a" (Binop LessEq (Const 0) (Var "x")),Assign "x" (Const 29),If (Var "a") (If (Var "z") (Assign "x" (Binop And (Binop Equal (Binop Plus (Binop LessEq (Var "x") (Var "z")) (Binop Div (Const (-28)) (Binop Equal (Var "z") (Const 1)))) (Const (-19))) (Const 0))) (Seq [])) (Assign "a" (Var "y")),Assign "y" (Const 1),Assign "x" (Var "z"),Assign "b" (Uminus (Const (-19))),Assign "x" (Const 1),Assign "z" (Binop Minus (Var "b") (Binop Div (Var "x") (Var "x"))),Assign "a" (Binop Times (Var "x") (Const 0))]),
  ("b = -20",Assign "b" (Const (-20))),
  ("z = a",Assign "z" (Var "a")),
  ("{\n  if a then\n    b = z\n  else\n    z = z;\n  if a+y then\n    if a then\n      b = b\n    else\n      z = z\n  else\n    b = z;\n  while x do\n    a = 0;\n  while 1 do\n    b = -2;\n  if b--a then\n    y = z\n  else {};\n  x = 0;\n  while -2 do\n    a = -3;\n  if x then\n    a = 0\n  else\n    while -(1) do\n      while y do {};\n  z = b;\n  b = -(1);\n  z = 1;\n  z = z<1;\n  x = a;\n  a = a&&0;\n  x = 1;\n  if b then\n    y = 0&&a\n  else\n    while x do\n      x = 0\n}",Seq [If (Var "a") (Assign "b" (Var "z")) (Assign "z" (Var "z")),If (Binop Plus (Var "a") (Var "y")) (If (Var "a") (Assign "b" (Var "b")) (Assign "z" (Var "z"))) (Assign "b" (Var "z")),While (Var "x") (Assign "a" (Const 0)),While (Const 1) (Assign "b" (Const (-2))),If (Binop Minus (Var "b") (Uminus (Var "a"))) (Assign "y" (Var "z")) (Seq []),Assign "x" (Const 0),While (Const (-2)) (Assign "a" (Const (-3))),If (Var "x") (Assign "a" (Const 0)) (While (Uminus (Const 1)) (While (Var "y") (Seq []))),Assign "z" (Var "b"),Assign "b" (Uminus (Const 1)),Assign "z" (Const 1),Assign "z" (Binop Less (Var "z") (Const 1)),Assign "x" (Var "a"),Assign "a" (Binop And (Var "a") (Const 0)),Assign "x" (Const 1),If (Var "b") (Assign "y" (Binop And (Const 0) (Var "a"))) (While (Var "x") (Assign "x" (Const 0)))]),
  ("while 18 do\n  if a<z==y--11 then {} else {\n    b = -(-22)+-((0||z)<(0<=0==b));\n    y = z\n  }",While (Const 18) (If (Binop Equal (Binop Less (Var "a") (Var "z")) (Binop Minus (Var "y") (Const (-11)))) (Seq []) (Seq [Assign "b" (Binop Plus (Uminus (Const (-22))) (Uminus (Binop Less (Binop Or (Const 0) (Var "z")) (Binop Equal (Binop LessEq (Const 0) (Const 0)) (Var "b"))))),Assign "y" (Var "z")]))),
  ("z = -(1)",Assign "z" (Uminus (Const 1))),
  ("{\n  z = 0;\n  x = -a-z;\n  while x do\n    a = -(-(-21));\n  b = (a<-x<=1)*-(0);\n  if -5 then {} else\n    x = -(0<1<b||1)*a;\n  x = 1*(b&&x);\n  y = 1;\n  a = b;\n  if 1 then\n    x = b\n  else if -(0) then\n    a = b--x\n  else\n    x = 1;\n  y = a<=-(b*z);\n  a = 1<0;\n  a = (1&&x)/0;\n  a = -x;\n  z = 1\n}",Seq [Assign "z" (Const 0),Assign "x" (Binop Minus (Uminus (Var "a")) (Var "z")),While (Var "x") (Assign "a" (Uminus (Uminus (Const (-21))))),Assign "b" (Binop Times (Binop LessEq (Binop Less (Var "a") (Uminus (Var "x"))) (Const 1)) (Uminus (Const 0))),If (Const (-5)) (Seq []) (Assign "x" (Binop Times (Uminus (Binop Or (Binop Less (Binop Less (Const 0) (Const 1)) (Var "b")) (Const 1))) (Var "a"))),Assign "x" (Binop Times (Const 1) (Binop And (Var "b") (Var "x"))),Assign "y" (Const 1),Assign "a" (Var "b"),If (Const 1) (Assign "x" (Var "b")) (If (Uminus (Const 0)) (Assign "a" (Binop Minus (Var "b") (Uminus (Var "x")))) (Assign "x" (Const 1))),Assign "y" (Binop LessEq (Var "a") (Uminus (Binop Times (Var "b") (Var "z")))),Assign "a" (Binop Less (Const 1) (Const 0)),Assign "a" (Binop Div (Binop And (Const 1) (Var "x")) (Const 0)),Assign "a" (Uminus (Var "x")),Assign "z" (Const 1)]),
  ("if 30 then\n  y = -x\nelse\n  z = -3",If (Const 30) (Assign "y" (Uminus (Var "x"))) (Assign "z" (Const (-3)))),
  ("a = x||x",Assign "a" (Binop Or (Var "x") (Var "x"))),
  ("{\n  if -a then\n    b = 7\n  else\n    a = 0;\n  if x/-(1&&a) then {} else if y then\n    z = x\n  else if -28/(x==-(-17)) then\n    z = 0\n  else {};\n  x = 0;\n  a = -b/((-26&&0+29)-a<=2);\n  y = 8;\n  b = -b;\n  a = b/-(x&&b);\n  x = a&&a;\n  if -8 then\n    b = -(8)\n  else\n    y = a;\n  y = 17*(z==-y<=-(-(-(1))));\n  x = z&&x;\n  z = (1==(b+b<(y&&-24)&&y))-b;\n  b = 1;\n  y = 1;\n  b = b;\n  x = b;\n  x = -(22*0);\n  if 24 then\n    z = 0/0\n  else if 0 then {} else {};\n  z = b;\n  y = -(1)+(z+(-y==-(1)))==b;\n  b = -(1/5)\n}",Seq [If (Uminus (Var "a")) (Assign "b" (Const 7)) (Assign "a" (Const 0)),If (Binop Div (Var "x") (Uminus (Binop And (Const 1) (Var "a")))) (Seq []) (If (Var "y") (Assign "z" (Var "x")) (If (Binop Div (Const (-28)) (Binop Equal (Var "x") (Uminus (Const (-17))))) (Assign "z" (Const 0)) (Seq []))),Assign "x" (Const 0),Assign "a" (Binop Div (Uminus (Var "b")) (Binop LessEq (Binop Minus (Binop And (Const (-26)) (Binop Plus (Const 0) (Const 29))) (Var "a")) (Const 2))),Assign "y" (Const 8),Assign "b" (Uminus (Var "b")),Assign "a" (Binop Div (Var "b") (Uminus (Binop And (Var "x") (Var "b")))),Assign "x" (Binop And (Var "a") (Var "a")),If (Const (-8)) (Assign "b" (Uminus (Const 8))) (Assign "y" (Var "a")),Assign "y" (Binop Times (Const 17) (Binop LessEq (Binop Equal (Var "z") (Uminus (Var "y"))) (Uminus (Uminus (Uminus (Const 1)))))),Assign "x" (Binop And (Var "z") (Var "x")),Assign "z" (Binop Minus (Binop Equal (Const 1) (Binop And (Binop Less (Binop Plus (Var "b") (Var "b")) (Binop And (Var "y") (Const (-24)))) (Var "y"))) (Var "b")),Assign "b" (Const 1),Assign "y" (Const 1),Assign "b" (Var "b"),Assign "x" (Var "b"),Assign "x" (Uminus (Binop Times (Const 22) (Const 0))),If (Const 24) (Assign "z" (Binop Div (Const 0) (Const 0))) (If (Const 0) (Seq []) (Seq [])),Assign "z" (Var "b"),Assign "y" (Binop Equal (Binop Plus (Uminus (Const 1)) (Binop Plus (Var "z") (Binop Equal (Uminus (Var "y")) (Uminus (Const 1))))) (Var "b")),Assign "b" (Uminus (Binop Div (Const 1) (Const 5)))]),
  ("{\n  while -(-y||b) do\n    z = 0\n}",Seq [While (Uminus (Binop Or (Uminus (Var "y")) (Var "b"))) (Assign "z" (Const 0))]),
  ("a = (26+-z)*(0-(0-1))+z",Assign "a" (Binop Plus (Binop Times (Binop Plus (Const 26) (Uminus (Var "z"))) (Binop Minus (Const 0) (Binop Minus (Const 0) (Const 1)))) (Var "z"))),
  ("a = -x",Assign "a" (Uminus (Var "x"))),
  ("if y then {\n  while 1 do {};\n  x = y;\n  z = b;\n  if 1||b then {\n    if 0--(1)&&b then {} else {}\n  } else\n    b = 1;\n  a = b;\n  b = 23;\n  while 0 do {};\n  while 1/((z||a)*y) do {};\n  a = a;\n  if y then\n    while 25 do {}\n  else {};\n  if b then\n    z = x\n  else {}\n} else\n  while b do\n    y = x",If (Var "y") (Seq [While (Const 1) (Seq []),Assign "x" (Var "y"),Assign "z" (Var "b"),If (Binop Or (Const 1) (Var "b")) (Seq [If (Binop And (Binop Minus (Const 0) (Uminus (Const 1))) (Var "b")) (Seq []) (Seq [])]) (Assign "b" (Const 1)),Assign "a" (Var "b"),Assign "b" (Const 23),While (Const 0) (Seq []),While (Binop Div (Const 1) (Binop Times (Binop Or (Var "z") (Var "a")) (Var "y"))) (Seq []),Assign "a" (Var "a"),If (Var "y") (While (Const 25) (Seq [])) (Seq []),If (Var "b") (Assign "z" (Var "x")) (Seq [])]) (While (Var "b") (Assign "y" (Var "x")))),
  ("z = -y==0",Assign "z" (Binop Equal (Uminus (Var "y")) (Const 0))),
  ("y = z+1",Assign "y" (Binop Plus (Var "z") (Const 1))),
  ("{\n  while z do\n    y = -(-(a==1));\n  b = 1;\n  a = -(-(1&&y)*y--24);\n  b = y;\n  while x<=(-(1)&&1)*x*-22 do\n    while -y do\n      z = 0;\n  if z then\n    z = (-17==x)*-17*(1<=z==x)<=a==b\n  else if x then\n    b = z\n  else\n    b = a;\n  if 1 then\n    if 15*0 then\n      y = 3--z\n    else\n      while 0 do\n        if ((-(1)==b/a)-1==0-x)*y then {} else {}\n  else\n    z = 0;\n  while 3||x||-(0) do {};\n  if -8 then\n    a = 5\n  else\n    y = 1-b||1;\n  if x==7<=-(-18) then\n    y = z\n  else if -z then {\n    a = -(0)==-z\n  } else\n    z = -(1)==1;\n  z = 0;\n  z = 1;\n  x = -a;\n  z = 0;\n  x = 1;\n  y = 1;\n  z = 25;\n  while b do\n    b = -(x*-25);\n  if -(-(-z)==1)||-11 then\n    b = y\n  else if -(0) then\n    b = -b\n  else {};\n  z = 0;\n  while -(-5-1) do {};\n  if y then\n    y = a\n  else\n    a = 1;\n  while 0 do\n    x = z==a;\n  y = 1||1*x;\n  y = -((b-1<=(x<=1))-x*-a)+x;\n  z = 22<x;\n  while 0 do\n    if -(-(17))/0 then\n      z = -((0-0<(b||0)&&0)<=a)\n    else {};\n  while a/b do {}\n}",Seq [While (Var "z") (Assign "y" (Uminus (Uminus (Binop Equal (Var "a") (Const 1))))),Assign "b" (Const 1),Assign "a" (Uminus (Binop Minus (Binop Times (Uminus (Binop And (Const 1) (Var "y"))) (Var "y")) (Const (-24)))),Assign "b" (Var "y"),While (Binop LessEq (Var "x") (Binop Times (Binop Times (Binop And (Uminus (Const 1)) (Const 1)) (Var "x")) (Const (-22)))) (While (Uminus (Var "y")) (Assign "z" (Const 0))),If (Var "z") (Assign "z" (Binop Equal (Binop LessEq (Binop Times (Binop Times (Binop Equal (Const (-17)) (Var "x")) (Const (-17))) (Binop Equal (Binop LessEq (Const 1) (Var "z")) (Var "x"))) (Var "a")) (Var "b"))) (If (Var "x") (Assign "b" (Var "z")) (Assign "b" (Var "a"))),If (Const 1) (If (Binop Times (Const 15) (Const 0)) (Assign "y" (Binop Minus (Const 3) (Uminus (Var "z")))) (While (Const 0) (If (Binop Times (Binop Equal (Binop Minus (Binop Equal (Uminus (Const 1)) (Binop Div (Var "b") (Var "a"))) (Const 1)) (Binop Minus (Const 0) (Var "x"))) (Var "y")) (Seq []) (Seq [])))) (Assign "z" (Const 0)),While (Binop Or (Binop Or (Const 3) (Var "x")) (Uminus (Const 0))) (Seq []),If (Const (-8)) (Assign "a" (Const 5)) (Assign "y" (Binop Or (Binop Minus (Const 1) (Var "b")) (Const 1))),If (Binop LessEq (Binop Equal (Var "x") (Const 7)) (Uminus (Const (-18)))) (Assign "y" (Var "z")) (If (Uminus (Var "z")) (Seq [Assign "a" (Binop Equal (Uminus (Const 0)) (Uminus (Var "z")))]) (Assign "z" (Binop Equal (Uminus (Const 1)) (Const 1)))),Assign "z" (Const 0),Assign "z" (Const 1),Assign "x" (Uminus (Var "a")),Assign "z" (Const 0),Assign "x" (Const 1),Assign "y" (Const 1),Assign "z" (Const 25),While (Var "b") (Assign "b" (Uminus (Binop Times (Var "x") (Const (-25))))),If (Binop Or (Uminus (Binop Equal (Uminus (Uminus (Var "z"))) (Const 1))) (Const (-11))) (Assign "b" (Var "y")) (If (Uminus (Const 0)) (Assign "b" (Uminus (Var "b"))) (Seq [])),Assign "z" (Const 0),While (Uminus (Binop Minus (Const (-5)) (Const 1))) (Seq []),If (Var "y") (Assign "y" (Var "a")) (Assign "a" (Const 1)),While (Const 0) (Assign "x" (Binop Equal (Var "z") (Var "a"))),Assign "y" (Binop Or (Const 1) (Binop Times (Const 1) (Var "x"))),Assign "y" (Binop Plus (Uminus (Binop Minus (Binop LessEq (Binop Minus (Var "b") (Const 1)) (Binop LessEq (Var "x") (Const 1))) (Binop Times (Var "x") (Uminus (Var "a"))))) (Var "x")),Assign "z" (Binop Less (Const 22) (Var "x")),While (Const 0) (If (Binop Div (Uminus (Uminus (Const 17))) (Const 0)) (Assign "z" (Uminus (Binop LessEq (Binop And (Binop Less (Binop Minus (Const 0) (Const 0)) (Binop Or (Var "b") (Const 0))) (Const 0)) (Var "a")))) (Seq [])),While (Binop Div (Var "a") (Var "b")) (Seq [])]),
  ("{\n  while 14 do\n    x = 28;\n  b = 1;\n  b = -13&&-y;\n  z = a-y||1;\n  y = a;\n  if y/1 then {} else\n    y = a;\n  y = 13\n}",Seq [While (Const 14) (Assign "x" (Const 28)),Assign "b" (Const 1),Assign "b" (Binop And (Const (-13)) (Uminus (Var "y"))),Assign "z" (Binop Or (Binop Minus (Var "a") (Var "y")) (Const 1)),Assign "y" (Var "a"),If (Binop Div (Var "y") (Const 1)) (Seq []) (Assign "y" (Var "a")),Assign "y" (Const 13)]),
  ("{\n  while x do {\n    if y then {} else {}\n  };\n  if y then\n    z = x\n  else {};\n  a = -(1&&(b==1)*14)\n}",Seq [While (Var "x") (Seq [If (Var "y") (Seq []) (Seq [])]),If (Var "y") (Assign "z" (Var "x")) (Seq []),Assign "a" (Uminus (Binop And (Const 1) (Binop Times (Binop Equal (Var "b") (Const 1)) (Const 14))))]),
  ("if 1 then\n  while x do {\n    if -(-y) then {} else\n      x = a;\n    while -(0) do\n      while (0<-(1))*-(0) do {};\n    if y/z+4&&a then {} else {}\n  }\nelse if 0 then\n  if y then {\n    while -z do {}\n  } else {\n    y = 0||b\n  }\nelse if z==0 then\n  z = 0\nelse if 13 then\n  b = b\nelse\n  z = 0",If (Const 1) (While (Var "x") (Seq [If (Uminus (Uminus (Var "y"))) (Seq []) (Assign "x" (Var "a")),While (Uminus (Const 0)) (While (Binop Times (Binop Less (Const 0) (Uminus (Const 1))) (Uminus (Const 0))) (Seq [])),If (Binop And (Binop Plus (Binop Div (Var "y") (Var "z")) (Const 4)) (Var "a")) (Seq []) (Seq [])])) (If (Const 0) (If (Var "y") (Seq [While (Uminus (Var "z")) (Seq [])]) (Seq [Assign "y" (Binop Or (Const 0) (Var "b"))])) (If (Binop Equal (Var "z") (Const 0)) (Assign "z" (Const 0)) (If (Const 13) (Assign "b" (Var "b")) (Assign "z" (Const 0)))))),
  ("{\n  if z then\n    a = a<y<=1<x\n  else\n    while 1 do\n      b = a;\n  if -a then {} else\n    z = y;\n  if y then\n    y = 0\n  else {};\n  while a do\n    y = a+z;\n  y = -28;\n  y = z;\n  a = -((a+z)*z)-b;\n  a = 0;\n  a = b/1+y;\n  if 1||-(1)||((-x==z/17)+-11||1) then\n    z = x*1\n  else\n    b = 1&&0;\n  z = x*x;\n  z = 1;\n  a = b;\n  if 1 then {\n    b = 4==0<=a;\n    y = a&&0\n  } else {\n    b = -14&&y;\n    x = -1--(-(5||1)<(-17&&0/0))\n  };\n  y = 1;\n  y = -30;\n  b = -26;\n  b = b;\n  z = y\n}",Seq [If (Var "z") (Assign "a" (Binop Less (Binop LessEq (Binop Less (Var "a") (Var "y")) (Const 1)) (Var "x"))) (While (Const 1) (Assign "b" (Var "a"))),If (Uminus (Var "a")) (Seq []) (Assign "z" (Var "y")),If (Var "y") (Assign "y" (Const 0)) (Seq []),While (Var "a") (Assign "y" (Binop Plus (Var "a") (Var "z"))),Assign "y" (Const (-28)),Assign "y" (Var "z"),Assign "a" (Binop Minus (Uminus (Binop Times (Binop Plus (Var "a") (Var "z")) (Var "z"))) (Var "b")),Assign "a" (Const 0),Assign "a" (Binop Plus (Binop Div (Var "b") (Const 1)) (Var "y")),If (Binop Or (Binop Or (Const 1) (Uminus (Const 1))) (Binop Or (Binop Plus (Binop Equal (Uminus (Var "x")) (Binop Div (Var "z") (Const 17))) (Const (-11))) (Const 1))) (Assign "z" (Binop Times (Var "x") (Const 1))) (Assign "b" (Binop And (Const 1) (Const 0))),Assign "z" (Binop Times (Var "x") (Var "x")),Assign "z" (Const 1),Assign "a" (Var "b"),If (Const 1) (Seq [Assign "b" (Binop LessEq (Binop Equal (Const 4) (Const 0)) (Var "a")),Assign "y" (Binop And (Var "a") (Const 0))]) (Seq [Assign "b" (Binop And (Const (-14)) (Var "y")),Assign "x" (Binop Minus (Const (-1)) (Uminus (Binop Less (Uminus (Binop Or (Const 5) (Const 1))) (Binop And (Const (-17)) (Binop Div (Const 0) (Const 0))))))]),Assign "y" (Const 1),Assign "y" (Const (-30)),Assign "b" (Const (-26)),Assign "b" (Var "b"),Assign "z" (Var "y")]),
  ("b = b*1",Assign "b" (Binop Times (Var "b") (Const 1))),
  ("{\n  x = 12;\n  x = 1;\n  x = 1\n}",Seq [Assign "x" (Const 12),Assign "x" (Const 1),Assign "x" (Const 1)]),
  ("while x do\n  y = 0+29",While (Var "x") (Assign "y" (Binop Plus (Const 0) (Const 29)))),
  ("if 1 then\n  if 1 then\n    a = 0<=x\n  else {\n    if 0<=(x-1<=((-21||z)==1)) then\n      y = -20\n    else\n      while 3 do {}\n  }\nelse {\n  z = -(b<1)==-(-11*-17)*y;\n  if -(-a) then {} else {}\n}",If (Const 1) (If (Const 1) (Assign "a" (Binop LessEq (Const 0) (Var "x"))) (Seq [If (Binop LessEq (Const 0) (Binop LessEq (Binop Minus (Var "x") (Const 1)) (Binop Equal (Binop Or (Const (-21)) (Var "z")) (Const 1)))) (Assign "y" (Const (-20))) (While (Const 3) (Seq []))])) (Seq [Assign "z" (Binop Equal (Uminus (Binop Less (Var "b") (Const 1))) (Binop Times (Uminus (Binop Times (Const (-11)) (Const (-17)))) (Var "y"))),If (Uminus (Uminus (Var "a"))) (Seq []) (Seq [])])),
  ("x = x/b",Assign "x" (Binop Div (Var "x") (Var "b"))),
  ("{\n  y = 0;\n  a = 14;\n  a = y\n}",Seq [Assign "y" (Const 0),Assign "a" (Const 14),Assign "a" (Var "y")]),
  ("if x*1 then\n  a = -21\nelse {}",If (Binop Times (Var "x") (Const 1)) (Assign "a" (Const (-21))) (Seq [])),
  ("{\n  x = 22;\n  y = b;\n  b = x/y;\n  x = 16+z||1;\n  a = 0;\n  b = y;\n  b = -(0<-(30*1));\n  b = 3;\n  if 1 then\n    if 0 then\n      y = -(-y)\n    else\n      a = b*y\n  else\n    a = -(18);\n  z = y;\n  b = b;\n  while z<z do {\n    z = 1;\n    b = -(24);\n    x = a\n  };\n  x = 0+(-b-0+(a<0));\n  y = -4;\n  b = -(-(-19));\n  a = z;\n  if 1 then\n    y = 0\n  else {};\n  if -(-(-(-(1+0)))) then {\n    while (-3+0)*a do {}\n  } else\n    a = 1+(-(0-0)<=a);\n  b = 0<a\n}",Seq [Assign "x" (Const 22),Assign "y" (Var "b"),Assign "b" (Binop Div (Var "x") (Var "y")),Assign "x" (Binop Or (Binop Plus (Const 16) (Var "z")) (Const 1)),Assign "a" (Const 0),Assign "b" (Var "y"),Assign "b" (Uminus (Binop Less (Const 0) (Uminus (Binop Times (Const 30) (Const 1))))),Assign "b" (Const 3),If (Const 1) (If (Const 0) (Assign "y" (Uminus (Uminus (Var "y")))) (Assign "a" (Binop Times (Var "b") (Var "y")))) (Assign "a" (Uminus (Const 18))),Assign "z" (Var "y"),Assign "b" (Var "b"),While (Binop Less (Var "z") (Var "z")) (Seq [Assign "z" (Const 1),Assign "b" (Uminus (Const 24)),Assign "x" (Var "a")]),Assign "x" (Binop Plus (Const 0) (Binop Plus (Binop Minus (Uminus (Var "b")) (Const 0)) (Binop Less (Var "a") (Const 0)))),Assign "y" (Const (-4)),Assign "b" (Uminus (Uminus (Const (-19)))),Assign "a" (Var "z"),If (Const 1) (Assign "y" (Const 0)) (Seq []),If (Uminus (Uminus (Uminus (Uminus (Binop Plus (Const 1) (Const 0)))))) (Seq [While (Binop Times (Binop Plus (Const (-3)) (Const 0)) (Var "a")) (Seq [])]) (Assign "a" (Binop Plus (Const 1) (Binop LessEq (Uminus (Binop Minus (Const 0) (Const 0))) (Var "a")))),Assign "b" (Binop Less (Const 0) (Var "a"))]),
  ("z = (1==a/0||-a)<-z<0",Assign "z" (Binop Less (Binop Less (Binop Or (Binop Equal (Const 1) (Binop Div (Var "a") (Const 0))) (Uminus (Var "a"))) (Uminus (Var "z"))) (Const 0))),
  ("if x+(1/x-y<0) then\n  b = -(z||z)&&0\nelse\n  while y do {\n    if 4+0 then\n      if 0<0 then {} else {}\n    else if b then {} else {};\n    z = -(-(0))<=(b||b)*-y\n  }",If (Binop Plus (Var "x") (Binop Less (Binop Minus (Binop Div (Const 1) (Var "x")) (Var "y")) (Const 0))) (Assign "b" (Binop And (Uminus (Binop Or (Var "z") (Var "z"))) (Const 0))) (While (Var "y") (Seq [If (Binop Plus (Const 4) (Const 0)) (If (Binop Less (Const 0) (Const 0)) (Seq []) (Seq [])) (If (Var "b") (Seq []) (Seq [])),Assign "z" (Binop LessEq (Uminus (Uminus (Const 0))) (Binop Times (Binop Or (Var "b") (Var "b")) (Uminus (Var "y"))))]))),
  ("{\n  if b then\n    y = -(-(0<6-z))\n  else {\n    a = z;\n    y = -(0)\n  };\n  while b do\n    z = 1/-b&&-(0-y);\n  x = z;\n  z = 0<=(a+0/0)/(b==a/(b*b));\n  if -(z<(2*x<=(y||a))) then\n    z = b\n  else\n    b = -(0<-b);\n  y = (a<=(x/y&&a))*(y<=y)==-(-25);\n  a = x==0;\n  x = -1;\n  while 0-b do {};\n  x = -(z&&23);\n  while 0 do {};\n  b = z;\n  if (-y==a+-(1)+z/(a+1))-(y||0-9) then\n    if y-y then {} else {}\n  else if a*0&&y then {} else {};\n  y = x;\n  y = 20;\n  if 8*(a<z)&&0+1 then\n    b = x\n  else\n    a = 3;\n  x = 1;\n  a = 0||-(-(1||1)||1);\n  a = x||25;\n  b = z;\n  x = -4;\n  if x then\n    b = 22\n  else if (0==-(1))+1 then {} else {};\n  x = b*z;\n  if -22 then {} else {};\n  x = -z<=-(0);\n  z = -(-(11*0)<(x&&x||0))||-17;\n  if a then {\n    y = 1||a\n  } else\n    z = -(b<=y)+1;\n  while a do {};\n  x = -9;\n  x = b<=x;\n  a = y;\n  if z<18<=29 then\n    x = 8\n  else {\n    while b do {}\n  };\n  if 0*0<(1==(y<=y))<=0||y then {} else\n    b = b;\n  z = b;\n  if 1*a then {} else\n    a = 1;\n  if -(a==y==(1==(a&&1)+(b||z))) then {\n    z = 0/-(b==1)\n  } else {};\n  a = y;\n  b = 1;\n  y = 0\n}",Seq [If (Var "b") (Assign "y" (Uminus (Uminus (Binop Less (Const 0) (Binop Minus (Const 6) (Var "z")))))) (Seq [Assign "a" (Var "z"),Assign "y" (Uminus (Const 0))]),While (Var "b") (Assign "z" (Binop And (Binop Div (Const 1) (Uminus (Var "b"))) (Uminus (Binop Minus (Const 0) (Var "y"))))),Assign "x" (Var "z"),Assign "z" (Binop LessEq (Const 0) (Binop Div (Binop Plus (Var "a") (Binop Div (Const 0) (Const 0))) (Binop Equal (Var "b") (Binop Div (Var "a") (Binop Times (Var "b") (Var "b")))))),If (Uminus (Binop Less (Var "z") (Binop LessEq (Binop Times (Const 2) (Var "x")) (Binop Or (Var "y") (Var "a"))))) (Assign "z" (Var "b")) (Assign "b" (Uminus (Binop Less (Const 0) (Uminus (Var "b"))))),Assign "y" (Binop Equal (Binop Times (Binop LessEq (Var "a") (Binop And (Binop Div (Var "x") (Var "y")) (Var "a"))) (Binop LessEq (Var "y") (Var "y"))) (Uminus (Const (-25)))),Assign "a" (Binop Equal (Var "x") (Const 0)),Assign "x" (Const (-1)),While (Binop Minus (Const 0) (Var "b")) (Seq []),Assign "x" (Uminus (Binop And (Var "z") (Const 23))),While (Const 0) (Seq []),Assign "b" (Var "z"),If (Binop Minus (Binop Equal (Uminus (Var "y")) (Binop Plus (Binop Plus (Var "a") (Uminus (Const 1))) (Binop Div (Var "z") (Binop Plus (Var "a") (Const 1))))) (Binop Or (Var "y") (Binop Minus (Const 0) (Const 9)))) (If (Binop Minus (Var "y") (Var "y")) (Seq []) (Seq [])) (If (Binop And (Binop Times (Var "a") (Const 0)) (Var "y")) (Seq []) (Seq [])),Assign "y" (Var "x"),Assign "y" (Const 20),If (Binop And (Binop Times (Const 8) (Binop Less (Var "a") (Var "z"))) (Binop Plus (Const 0) (Const 1))) (Assign "b" (Var "x")) (Assign "a" (Const 3)),Assign "x" (Const 1),Assign "a" (Binop Or (Const 0) (Uminus (Binop Or (Uminus (Binop Or (Const 1) (Const 1))) (Const 1)))),Assign "a" (Binop Or (Var "x") (Const 25)),Assign "b" (Var "z"),Assign "x" (Const (-4)),If (Var "x") (Assign "b" (Const 22)) (If (Binop Plus (Binop Equal (Const 0) (Uminus (Const 1))) (Const 1)) (Seq []) (Seq [])),Assign "x" (Binop Times (Var "b") (Var "z")),If (Const (-22)) (Seq []) (Seq []),Assign "x" (Binop LessEq (Uminus (Var "z")) (Uminus (Const 0))),Assign "z" (Binop Or (Uminus (Binop Less (Uminus (Binop Times (Const 11) (Const 0))) (Binop Or (Binop And (Var "x") (Var "x")) (Const 0)))) (Const (-17))),If (Var "a") (Seq [Assign "y" (Binop Or (Const 1) (Var "a"))]) (Assign "z" (Binop Plus (Uminus (Binop LessEq (Var "b") (Var "y"))) (Const 1))),While (Var "a") (Seq []),Assign "x" (Const (-9)),Assign "x" (Binop LessEq (Var "b") (Var "x")),Assign "a" (Var "y"),If (Binop LessEq (Binop Less (Var "z") (Const 18)) (Const 29)) (Assign "x" (Const 8)) (Seq [While (Var "b") (Seq [])]),If (Binop Or (Binop LessEq (Binop Less (Binop Times (Const 0) (Const 0)) (Binop Equal (Const 1) (Binop LessEq (Var "y") (Var "y")))) (Const 0)) (Var "y")) (Seq []) (Assign "b" (Var "b")),Assign "z" (Var "b"),If (Binop Times (Const 1) (Var "a")) (Seq []) (Assign "a" (Const 1)),If (Uminus (Binop Equal (Binop Equal (Var "a") (Var "y")) (Binop Equal (Const 1) (Binop Plus (Binop And (Var "a") (Const 1)) (Binop Or (Var "b") (Var "z")))))) (Seq [Assign "z" (Binop Div (Const 0) (Uminus (Binop Equal (Var "b") (Const 1))))]) (Seq []),Assign "a" (Var "y"),Assign "b" (Const 1),Assign "y" (Const 0)]),
  ("b = 1-z",Assign "b" (Binop Minus (Const 1) (Var "z"))),
  ("b = 21",Assign "b" (Const 21)),
  ("if a then\n  y = 21\nelse if x&&5-0 then\n  y = -(a||0)\nelse {\n  z = -(0)\n}",If (Var "a") (Assign "y" (Const 21)) (If (Binop And (Var "x") (Binop Minus (Const 5) (Const 0))) (Assign "y" (Uminus (Binop Or (Var "a") (Const 0)))) (Seq [Assign "z" (Uminus (Const 0))]))),
  ("if 0 then {\n  x = y||-(1);\n  z = y<=z;\n  while b do\n    while -(1)&&a do {};\n  if b&&b then\n    a = x==a==a\n  else\n    while -b do {}\n} else\n  y = 0",If (Const 0) (Seq [Assign "x" (Binop Or (Var "y") (Uminus (Const 1))),Assign "z" (Binop LessEq (Var "y") (Var "z")),While (Var "b") (While (Binop And (Uminus (Const 1)) (Var "a")) (Seq [])),If (Binop And (Var "b") (Var "b")) (Assign "a" (Binop Equal (Binop Equal (Var "x") (Var "a")) (Var "a"))) (While (Uminus (Var "b")) (Seq []))]) (Assign "y" (Const 0))),
  ("if z then {\n  if 1 then {} else {};\n  z = z<-23--(-(0)==-(-1))\n} else {\n  b = -(-(-(-19*a)));\n  if -(x*(0&&-4)<b) then {} else if -(x+(y+b)<=(b<=b+1))<=b*(z+-(0)) then {} else {};\n  while 1 do\n    a = (-9<=1)/1;\n  y = 1\n}",If (Var "z") (Seq [If (Const 1) (Seq []) (Seq []),Assign "z" (Binop Less (Var "z") (Binop Minus (Const (-23)) (Uminus (Binop Equal (Uminus (Const 0)) (Uminus (Const (-1)))))))]) (Seq [Assign "b" (Uminus (Uminus (Uminus (Binop Times (Const (-19)) (Var "a"))))),If (Uminus (Binop Less (Binop Times (Var "x") (Binop And (Const 0) (Const (-4)))) (Var "b"))) (Seq []) (If (Binop LessEq (Uminus (Binop LessEq (Binop Plus (Var "x") (Binop Plus (Var "y") (Var "b"))) (Binop LessEq (Var "b") (Binop Plus (Var "b") (Const 1))))) (Binop Times (Var "b") (Binop Plus (Var "z") (Uminus (Const 0))))) (Seq []) (Seq [])),While (Const 1) (Assign "a" (Binop Div (Binop LessEq (Const (-9)) (Const 1)) (Const 1))),Assign "y" (Const 1)])),
  ("if b then\n  z = -y<=b\nelse\n  z = -15",If (Var "b") (Assign "z" (Binop LessEq (Uminus (Var "y")) (Var "b"))) (Assign "z" (Const (-15)))),
  ("{\n  z = 1;\n  b = 0;\n  b = 0;\n  x = -z;\n  b = 1==-18;\n  b = 1/0;\n  y = x||x-1;\n  x = 1;\n  x = y;\n  z = 1;\n  b = 1;\n  if 21 then {} else {};\n  a = 1;\n  a = -23;\n  x = z;\n  b = x;\n  z = b;\n  a = b;\n  y = b;\n  y = 0\n}",Seq [Assign "z" (Const 1),Assign "b" (Const 0),Assign "b" (Const 0),Assign "x" (Uminus (Var "z")),Assign "b" (Binop Equal (Const 1) (Const (-18))),Assign "b" (Binop Div (Const 1) (Const 0)),Assign "y" (Binop Or (Var "x") (Binop Minus (Var "x") (Const 1))),Assign "x" (Const 1),Assign "x" (Var "y"),Assign "z" (Const 1),Assign "b" (Const 1),If (Const 21) (Seq []) (Seq []),Assign "a" (Const 1),Assign "a" (Const (-23)),Assign "x" (Var "z"),Assign "b" (Var "x"),Assign "z" (Var "b"),Assign "a" (Var "b"),Assign "y" (Var "b"),Assign "y" (Const 0)]),
  ("{\n  if -(0) then {\n    a = -(0/1)==z;\n    a = y\n  } else {\n    z = x&&1-1\n  };\n  z = y;\n  if a then\n    z = y*(1==z)\n  else\n    while x do\n      b = x-1;\n  a = b;\n  y = -(0-0);\n  if y then {} else\n    x = 1;\n  z = -x;\n  if -18 then\n    b = x\n  else\n    b = 1;\n  z = 17;\n  x = z||z;\n  y = a;\n  z = 0;\n  b = 1;\n  if 0 then {\n    y = a\n  } else\n    b = -x;\n  while 0 do\n    x = b<=(y&&-22/19||a)*27;\n  z = 1;\n  y = 16/(11&&1)||y;\n  x = -(1);\n  y = 0\n}",Seq [If (Uminus (Const 0)) (Seq [Assign "a" (Binop Equal (Uminus (Binop Div (Const 0) (Const 1))) (Var "z")),Assign "a" (Var "y")]) (Seq [Assign "z" (Binop And (Var "x") (Binop Minus (Const 1) (Const 1)))]),Assign "z" (Var "y"),If (Var "a") (Assign "z" (Binop Times (Var "y") (Binop Equal (Const 1) (Var "z")))) (While (Var "x") (Assign "b" (Binop Minus (Var "x") (Const 1)))),Assign "a" (Var "b"),Assign "y" (Uminus (Binop Minus (Const 0) (Const 0))),If (Var "y") (Seq []) (Assign "x" (Const 1)),Assign "z" (Uminus (Var "x")),If (Const (-18)) (Assign "b" (Var "x")) (Assign "b" (Const 1)),Assign "z" (Const 17),Assign "x" (Binop Or (Var "z") (Var "z")),Assign "y" (Var "a"),Assign "z" (Const 0),Assign "b" (Const 1),If (Const 0) (Seq [Assign "y" (Var "a")]) (Assign "b" (Uminus (Var "x"))),While (Const 0) (Assign "x" (Binop LessEq (Var "b") (Binop Times (Binop Or (Binop And (Var "y") (Binop Div (Const (-22)) (Const 19))) (Var "a")) (Const 27)))),Assign "z" (Const 1),Assign "y" (Binop Or (Binop Div (Const 16) (Binop And (Const 11) (Const 1))) (Var "y")),Assign "x" (Uminus (Const 1)),Assign "y" (Const 0)]),
  ("while b<=(0-(0==0&&x==x))*-(-z) do\n  while b do {\n    x = -(-z*y);\n    if a then\n      while a/0||b<=-x do {}\n    else\n      x = 1\n  }",While (Binop LessEq (Var "b") (Binop Times (Binop Minus (Const 0) (Binop And (Binop Equal (Const 0) (Const 0)) (Binop Equal (Var "x") (Var "x")))) (Uminus (Uminus (Var "z"))))) (While (Var "b") (Seq [Assign "x" (Uminus (Binop Times (Uminus (Var "z")) (Var "y"))),If (Var "a") (While (Binop Or (Binop Div (Var "a") (Const 0)) (Binop LessEq (Var "b") (Uminus (Var "x")))) (Seq [])) (Assign "x" (Const 1))]))),
  ("y = -8",Assign "y" (Const (-8))),
  ("a = b==-(-22)",Assign "a" (Binop Equal (Var "b") (Uminus (Const (-22))))),
  ("{\n  while -15-b||x do\n    a = y/(-a==a);\n  a = -(-10);\n  z = a*0<a;\n  b = 0;\n  if -(-11) then\n    if 1 then {} else {}\n  else {};\n  a = -(-(1)-22);\n  while x do {\n    z = 18||z<=-(0)\n  };\n  x = -(-(10));\n  if x then\n    if 6 then\n      x = -16\n    else if (a&&z)==y then\n      z = (-b<=-(-b))/a\n    else\n      x = y\n  else\n    z = 0<=-16||-(-(-24));\n  x = x;\n  z = -(y+1);\n  a = x;\n  y = -14;\n  x = a;\n  y = z||1==-6==0\n}",Seq [While (Binop Or (Binop Minus (Const (-15)) (Var "b")) (Var "x")) (Assign "a" (Binop Div (Var "y") (Binop Equal (Uminus (Var "a")) (Var "a")))),Assign "a" (Uminus (Const (-10))),Assign "z" (Binop Less (Binop Times (Var "a") (Const 0)) (Var "a")),Assign "b" (Const 0),If (Uminus (Const (-11))) (If (Const 1) (Seq []) (Seq [])) (Seq []),Assign "a" (Uminus (Binop Minus (Uminus (Const 1)) (Const 22))),While (Var "x") (Seq [Assign "z" (Binop Or (Const 18) (Binop LessEq (Var "z") (Uminus (Const 0))))]),Assign "x" (Uminus (Uminus (Const 10))),If (Var "x") (If (Const 6) (Assign "x" (Const (-16))) (If (Binop Equal (Binop And (Var "a") (Var "z")) (Var "y")) (Assign "z" (Binop Div (Binop LessEq (Uminus (Var "b")) (Uminus (Uminus (Var "b")))) (Var "a"))) (Assign "x" (Var "y")))) (Assign "z" (Binop Or (Binop LessEq (Const 0) (Const (-16))) (Uminus (Uminus (Const (-24)))))),Assign "x" (Var "x"),Assign "z" (Uminus (Binop Plus (Var "y") (Const 1))),Assign "a" (Var "x"),Assign "y" (Const (-14)),Assign "x" (Var "a"),Assign "y" (Binop Or (Var "z") (Binop Equal (Binop Equal (Const 1) (Const (-6))) (Const 0)))]),
  ("{\n  x = b||y;\n  z = (-(1)&&x)*b;\n  b = x;\n  if z then {\n    b = 1\n  } else if 0 then\n    z = 1\n  else\n    y = -(-(x/b))<=x\n}",Seq [Assign "x" (Binop Or (Var "b") (Var "y")),Assign "z" (Binop Times (Binop And (Uminus (Const 1)) (Var "x")) (Var "b")),Assign "b" (Var "x"),If (Var "z") (Seq [Assign "b" (Const 1)]) (If (Const 0) (Assign "z" (Const 1)) (Assign "y" (Binop LessEq (Uminus (Uminus (Binop Div (Var "x") (Var "b")))) (Var "x"))))]),
  ("a = a",Assign "a" (Var "a")),
  ("x = -((b||1)<=z<-2)-(1&&1||b)",Assign "x" (Binop Minus (Uminus (Binop Less (Binop LessEq (Binop Or (Var "b") (Const 1)) (Var "z")) (Const (-2)))) (Binop Or (Binop And (Const 1) (Const 1)) (Var "b")))),
  ("if (z+-(0/(1==1)))/1 then\n  x = 20\nelse\n  x = (x&&y<=-4-1)*1",If (Binop Div (Binop Plus (Var "z") (Uminus (Binop Div (Const 0) (Binop Equal (Const 1) (Const 1))))) (Const 1)) (Assign "x" (Const 20)) (Assign "x" (Binop Times (Binop And (Var "x") (Binop LessEq (Var "y") (Binop Minus (Const (-4)) (Const 1)))) (Const 1)))),
  ("{\n  while 25 do {\n    if 1 then {} else {}\n  };\n  a = 1;\n  b = z\n}",Seq [While (Const 25) (Seq [If (Const 1) (Seq []) (Seq [])]),Assign "a" (Const 1),Assign "b" (Var "z")]),
  ("if 0--(2)+(a==1) then\n  if b then\n    b = 0<1\n  else\n    x = -a\nelse\n  y = -(a*-x)<x/1-1&&-14",If (Binop Plus (Binop Minus (Const 0) (Uminus (Const 2))) (Binop Equal (Var "a") (Const 1))) (If (Var "b") (Assign "b" (Binop Less (Const 0) (Const 1))) (Assign "x" (Uminus (Var "a")))) (Assign "y" (Binop And (Binop Less (Uminus (Binop Times (Var "a") (Uminus (Var "x")))) (Binop Minus (Binop Div (Var "x") (Const 1)) (Const 1))) (Const (-14))))),
  ("b = 6",Assign "b" (Const 6)),
  ("{\n  x = a;\n  z = (1==(1&&b))*-3/(((1||y)&&7&&-24)/0);\n  if z then\n    if b then {} else {}\n  else {};\n  x = -(0);\n  b = -(1)||-9<z;\n  x = -(-(0))+a;\n  b = -3;\n  b = x\n}",Seq [Assign "x" (Var "a"),Assign "z" (Binop Div (Binop Times (Binop Equal (Const 1) (Binop And (Const 1) (Var "b"))) (Const (-3))) (Binop Div (Binop And (Binop And (Binop Or (Const 1) (Var "y")) (Const 7)) (Const (-24))) (Const 0))),If (Var "z") (If (Var "b") (Seq []) (Seq [])) (Seq []),Assign "x" (Uminus (Const 0)),Assign "b" (Binop Or (Uminus (Const 1)) (Binop Less (Const (-9)) (Var "z"))),Assign "x" (Binop Plus (Uminus (Uminus (Const 0))) (Var "a")),Assign "b" (Const (-3)),Assign "b" (Var "x")]),
  ("z = 1",Assign "z" (Const 1)),
  ("x = b<=(z==y)",Assign "x" (Binop LessEq (Var "b") (Binop Equal (Var "z") (Var "y")))),
  ("y = 0||x",Assign "y" (Binop Or (Const 0) (Var "x"))),
  ("{\n  y = -19;\n  if b then\n    if y==0<0*(3/(y&&16)) then\n      a = b\n    else if x then {} else {}\n  else\n    y = y;\n  while -2 do\n    if -(z*-21) then\n      if z then {} else {}\n    else if 1/y then {} else {};\n  a = -(-24-x);\n  y = 1/-y;\n  z = (1+(b&&b))/1;\n  y = 1;\n  a = b;\n  while -(-15) do {\n    a = 0\n  };\n  while b do {\n    b = -18&&-(0);\n    while 1 do\n      z = a\n  };\n  while -4 do {};\n  a = 1==b==x;\n  x = b&&-(0);\n  y = -(0--y);\n  if 0 then {\n    y = -20/-1;\n    z = (12==-(-13))+(1<b&&z*-y)-(x-a<=1)/z;\n    y = -z*b\n  } else if b then\n    y = a\n  else if -(18==1)&&-18 then {} else\n    a = b*-7&&1\n}",Seq [Assign "y" (Const (-19)),If (Var "b") (If (Binop Less (Binop Equal (Var "y") (Const 0)) (Binop Times (Const 0) (Binop Div (Const 3) (Binop And (Var "y") (Const 16))))) (Assign "a" (Var "b")) (If (Var "x") (Seq []) (Seq []))) (Assign "y" (Var "y")),While (Const (-2)) (If (Uminus (Binop Times (Var "z") (Const (-21)))) (If (Var "z") (Seq []) (Seq [])) (If (Binop Div (Const 1) (Var "y")) (Seq []) (Seq []))),Assign "a" (Uminus (Binop Minus (Const (-24)) (Var "x"))),Assign "y" (Binop Div (Const 1) (Uminus (Var "y"))),Assign "z" (Binop Div (Binop Plus (Const 1) (Binop And (Var "b") (Var "b"))) (Const 1)),Assign "y" (Const 1),Assign "a" (Var "b"),While (Uminus (Const (-15))) (Seq [Assign "a" (Const 0)]),While (Var "b") (Seq [Assign "b" (Binop And (Const (-18)) (Uminus (Const 0))),While (Const 1) (Assign "z" (Var "a"))]),While (Const (-4)) (Seq []),Assign "a" (Binop Equal (Binop Equal (Const 1) (Var "b")) (Var "x")),Assign "x" (Binop And (Var "b") (Uminus (Const 0))),Assign "y" (Uminus (Binop Minus (Const 0) (Uminus (Var "y")))),If (Const 0) (Seq [Assign "y" (Binop Div (Const (-20)) (Const (-1))),Assign "z" (Binop Minus (Binop Plus (Binop Equal (Const 12) (Uminus (Const (-13)))) (Binop And (Binop Less (Const 1) (Var "b")) (Binop Times (Var "z") (Uminus (Var "y"))))) (Binop Div (Binop LessEq (Binop Minus (Var "x") (Var "a")) (Const 1)) (Var "z"))),Assign "y" (Binop Times (Uminus (Var "z")) (Var "b"))]) (If (Var "b") (Assign "y" (Var "a")) (If (Binop And (Uminus (Binop Equal (Const 18) (Const 1))) (Const (-18))) (Seq []) (Assign "a" (Binop And (Binop Times (Var "b") (Const (-7))) (Const 1)))))]),
  ("{\n  x = z;\n  z = x;\n  while -(5) do {\n    z = 30;\n    z = (y-a)/(a<y);\n    x = 14\n  };\n  y = -10;\n  while -(-27/0) do\n    while -(-16) do {};\n  if b/-(0*-29<b) then {\n    if x then {} else {}\n  } else\n    while -(0+1) do\n      b = z;\n  x = z==y;\n  x = 1;\n  b = 10;\n  z = z||-(-((1||1)==0));\n  x = a==-z;\n  x = 0&&z;\n  if 0 then\n    if -19 then {} else {}\n  else\n    a = z<0||y\n}",Seq [Assign "x" (Var "z"),Assign "z" (Var "x"),While (Uminus (Const 5)) (Seq [Assign "z" (Const 30),Assign "z" (Binop Div (Binop Minus (Var "y") (Var "a")) (Binop Less (Var "a") (Var "y"))),Assign "x" (Const 14)]),Assign "y" (Const (-10)),While (Uminus (Binop Div (Const (-27)) (Const 0))) (While (Uminus (Const (-16))) (Seq [])),If (Binop Div (Var "b") (Uminus (Binop Less (Binop Times (Const 0) (Const (-29))) (Var "b")))) (Seq [If (Var "x") (Seq []) (Seq [])]) (While (Uminus (Binop Plus (Const 0) (Const 1))) (Assign "b" (Var "z"))),Assign "x" (Binop Equal (Var "z") (Var "y")),Assign "x" (Const 1),Assign "b" (Const 10),Assign "z" (Binop Or (Var "z") (Uminus (Uminus (Binop Equal (Binop Or (Const 1) (Const 1)) (Const 0))))),Assign "x" (Binop Equal (Var "a") (Uminus (Var "z"))),Assign "x" (Binop And (Const 0) (Var "z")),If (Const 0) (If (Const (-19)) (Seq []) (Seq [])) (Assign "a" (Binop Or (Binop Less (Var "z") (Const 0)) (Var "y")))]),
  ("b = 2",Assign "b" (Const 2)),
  ("y = x*b",Assign "y" (Binop Times (Var "x") (Var "b"))),
  ("{\n  a = b;\n  while y do\n    y = 12;\n  if y then\n    z = 0\n  else if 16*(-(7)*a+-(0)<0--7) then\n    if x then {} else {}\n  else if -(-(1/(1*b)/-b)) then {} else {};\n  z = 1;\n  x = 1;\n  y = 6;\n  if -23 then\n    y = 0\n  else if y||b then\n    z = y\n  else\n    z = 1;\n  a = -8;\n  x = z*y;\n  if x then {} else\n    z = 1-(y||0)*18;\n  a = -(-((z||1)+x));\n  z = -(0+z);\n  if a/b==(-(y<=b)||0/0<z)*0 then {} else\n    z = 0;\n  b = b;\n  if a then\n    if b then\n      z = -19+0\n    else\n      y = 0\n  else {};\n  z = x+(-28+1<=a);\n  x = z;\n  b = y;\n  a = -(-(1*-5))==-x&&x;\n  if y then\n    while 0 do\n      if 0<1 then {} else {}\n  else {};\n  while y do\n    if z+(0-0) then {} else\n      z = 0<-b;\n  if -7 then\n    if -y then\n      z = 0\n    else\n      while -(27) do {}\n  else {};\n  if 22 then\n    y = a\n  else\n    a = b;\n  x = 0\n}",Seq [Assign "a" (Var "b"),While (Var "y") (Assign "y" (Const 12)),If (Var "y") (Assign "z" (Const 0)) (If (Binop Times (Const 16) (Binop Less (Binop Plus (Binop Times (Uminus (Const 7)) (Var "a")) (Uminus (Const 0))) (Binop Minus (Const 0) (Const (-7))))) (If (Var "x") (Seq []) (Seq [])) (If (Uminus (Uminus (Binop Div (Binop Div (Const 1) (Binop Times (Const 1) (Var "b"))) (Uminus (Var "b"))))) (Seq []) (Seq []))),Assign "z" (Const 1),Assign "x" (Const 1),Assign "y" (Const 6),If (Const (-23)) (Assign "y" (Const 0)) (If (Binop Or (Var "y") (Var "b")) (Assign "z" (Var "y")) (Assign "z" (Const 1))),Assign "a" (Const (-8)),Assign "x" (Binop Times (Var "z") (Var "y")),If (Var "x") (Seq []) (Assign "z" (Binop Minus (Const 1) (Binop Times (Binop Or (Var "y") (Const 0)) (Const 18)))),Assign "a" (Uminus (Uminus (Binop Plus (Binop Or (Var "z") (Const 1)) (Var "x")))),Assign "z" (Uminus (Binop Plus (Const 0) (Var "z"))),If (Binop Equal (Binop Div (Var "a") (Var "b")) (Binop Times (Binop Or (Uminus (Binop LessEq (Var "y") (Var "b"))) (Binop Less (Binop Div (Const 0) (Const 0)) (Var "z"))) (Const 0))) (Seq []) (Assign "z" (Const 0)),Assign "b" (Var "b"),If (Var "a") (If (Var "b") (Assign "z" (Binop Plus (Const (-19)) (Const 0))) (Assign "y" (Const 0))) (Seq []),Assign "z" (Binop Plus (Var "x") (Binop LessEq (Binop Plus (Const (-28)) (Const 1)) (Var "a"))),Assign "x" (Var "z"),Assign "b" (Var "y"),Assign "a" (Binop And (Binop Equal (Uminus (Uminus (Binop Times (Const 1) (Const (-5))))) (Uminus (Var "x"))) (Var "x")),If (Var "y") (While (Const 0) (If (Binop Less (Const 0) (Const 1)) (Seq []) (Seq []))) (Seq []),While (Var "y") (If (Binop Plus (Var "z") (Binop Minus (Const 0) (Const 0))) (Seq []) (Assign "z" (Binop Less (Const 0) (Uminus (Var "b"))))),If (Const (-7)) (If (Uminus (Var "y")) (Assign "z" (Const 0)) (While (Uminus (Const 27)) (Seq []))) (Seq []),If (Const 22) (Assign "y" (Var "a")) (Assign "a" (Var "b")),Assign "x" (Const 0)]),
  ("if 0 then\n  while (z&&-(1+4))*(-b+1-b) do\n    a = 1\nelse {\n  if 23&&1 then\n    z = y||z\n  else\n    y = -(0)*-19-b;\n  if a*a<0 then\n    if 10 then\n      x = -(0)<=y\n    else {}\n  else {\n    if -29-0 then {} else {}\n  };\n  z = b-(a-0||b)/(-10||-x)/x;\n  b = x+0;\n  y = 4;\n  b = z/(z/-b);\n  y = x;\n  a = y\n}",If (Const 0) (While (Binop Times (Binop And (Var "z") (Uminus (Binop Plus (Const 1) (Const 4)))) (Binop Minus (Binop Plus (Uminus (Var "b")) (Const 1)) (Var "b"))) (Assign "a" (Const 1))) (Seq [If (Binop And (Const 23) (Const 1)) (Assign "z" (Binop Or (Var "y") (Var "z"))) (Assign "y" (Binop Minus (Binop Times (Uminus (Const 0)) (Const (-19))) (Var "b"))),If (Binop Less (Binop Times (Var "a") (Var "a")) (Const 0)) (If (Const 10) (Assign "x" (Binop LessEq (Uminus (Const 0)) (Var "y"))) (Seq [])) (Seq [If (Binop Minus (Const (-29)) (Const 0)) (Seq []) (Seq [])]),Assign "z" (Binop Minus (Var "b") (Binop Div (Binop Div (Binop Or (Binop Minus (Var "a") (Const 0)) (Var "b")) (Binop Or (Const (-10)) (Uminus (Var "x")))) (Var "x"))),Assign "b" (Binop Plus (Var "x") (Const 0)),Assign "y" (Const 4),Assign "b" (Binop Div (Var "z") (Binop Div (Var "z") (Uminus (Var "b")))),Assign "y" (Var "x"),Assign "a" (Var "y")])),
  ("{\n  y = y;\n  z = b;\n  if 1 then\n    while -(-(-(1))) do {}\n  else if -(-(z/(7*0/(0&&a)))) then {} else {};\n  z = a;\n  y = 0;\n  while b-z do\n    if 0 then\n      b = y\n    else\n      a = 0<y*-b;\n  x = b;\n  b = z;\n  b = 1;\n  a = -(1);\n  if a then\n    if -4 then {} else\n      while 0<=0 do {}\n  else\n    y = -18;\n  y = b;\n  z = 0;\n  x = b;\n  x = 0;\n  y = 0==z<=z;\n  b = (-b||x)/0;\n  if -(-(-(-(28))&&0)) then\n    b = (0&&0*(x==b)<=1--(0))--z\n  else {};\n  while z do {};\n  while 1<-(-(0-z)) do\n    b = z;\n  x = 1||(0<x)-x+0+-(1<0||y);\n  b = -z;\n  while 0 do\n    b = y\n}",Seq [Assign "y" (Var "y"),Assign "z" (Var "b"),If (Const 1) (While (Uminus (Uminus (Uminus (Const 1)))) (Seq [])) (If (Uminus (Uminus (Binop Div (Var "z") (Binop Div (Binop Times (Const 7) (Const 0)) (Binop And (Const 0) (Var "a")))))) (Seq []) (Seq [])),Assign "z" (Var "a"),Assign "y" (Const 0),While (Binop Minus (Var "b") (Var "z")) (If (Const 0) (Assign "b" (Var "y")) (Assign "a" (Binop Less (Const 0) (Binop Times (Var "y") (Uminus (Var "b")))))),Assign "x" (Var "b"),Assign "b" (Var "z"),Assign "b" (Const 1),Assign "a" (Uminus (Const 1)),If (Var "a") (If (Const (-4)) (Seq []) (While (Binop LessEq (Const 0) (Const 0)) (Seq []))) (Assign "y" (Const (-18))),Assign "y" (Var "b"),Assign "z" (Const 0),Assign "x" (Var "b"),Assign "x" (Const 0),Assign "y" (Binop LessEq (Binop Equal (Const 0) (Var "z")) (Var "z")),Assign "b" (Binop Div (Binop Or (Uminus (Var "b")) (Var "x")) (Const 0)),If (Uminus (Uminus (Binop And (Uminus (Uminus (Const 28))) (Const 0)))) (Assign "b" (Binop Minus (Binop And (Const 0) (Binop LessEq (Binop Times (Const 0) (Binop Equal (Var "x") (Var "b"))) (Binop Minus (Const 1) (Uminus (Const 0))))) (Uminus (Var "z")))) (Seq []),While (Var "z") (Seq []),While (Binop Less (Const 1) (Uminus (Uminus (Binop Minus (Const 0) (Var "z"))))) (Assign "b" (Var "z")),Assign "x" (Binop Or (Const 1) (Binop Plus (Binop Plus (Binop Minus (Binop Less (Const 0) (Var "x")) (Var "x")) (Const 0)) (Uminus (Binop Or (Binop Less (Const 1) (Const 0)) (Var "y"))))),Assign "b" (Uminus (Var "z")),While (Const 0) (Assign "b" (Var "y"))]),
  ("while z do\n  x = 1",While (Var "z") (Assign "x" (Const 1))),
  ("y = 0<=b",Assign "y" (Binop LessEq (Const 0) (Var "b"))),
  ("{\n  if b then\n    x = y\n  else\n    a = -(-8)==y;\n  if 3 then\n    a = a\n  else {\n    z = x\n  };\n  a = -2;\n  y = -10+z;\n  b = x\n}",Seq [If (Var "b") (Assign "x" (Var "y")) (Assign "a" (Binop Equal (Uminus (Const (-8))) (Var "y"))),If (Const 3) (Assign "a" (Var "a")) (Seq [Assign "z" (Var "x")]),Assign "a" (Const (-2)),Assign "y" (Binop Plus (Const (-10)) (Var "z")),Assign "b" (Var "x")]),
  ("{\n  b = a\n}",Seq [Assign "b" (Var "a")]),
  ("if -(b*(-(-z)||y)) then\n  x = b\nelse\n  z = z",If (Uminus (Binop Times (Var "b") (Binop Or (Uminus (Uminus (Var "z"))) (Var "y")))) (Assign "x" (Var "b")) (Assign "z" (Var "z"))),
  ("{\n  b = -(0)-z;\n  b = y<=1;\n  while (a||-b||1<=1*x)*(y-z) do {};\n  if -25 then {} else {};\n  b = -((y||a*a)==z);\n  z = -a;\n  a = z;\n  y = 12--(1)||b*x<1;\n  if 1||b then\n    if 1 then {} else {}\n  else\n    while 1 do {}\n}",Seq [Assign "b" (Binop Minus (Uminus (Const 0)) (Var "z")),Assign "b" (Binop LessEq (Var "y") (Const 1)),While (Binop Times (Binop Or (Binop Or (Var "a") (Uminus (Var "b"))) (Binop LessEq (Const 1) (Binop Times (Const 1) (Var "x")))) (Binop Minus (Var "y") (Var "z"))) (Seq []),If (Const (-25)) (Seq []) (Seq []),Assign "b" (Uminus (Binop Equal (Binop Or (Var "y") (Binop Times (Var "a") (Var "a"))) (Var "z"))),Assign "z" (Uminus (Var "a")),Assign "a" (Var "z"),Assign "y" (Binop Or (Binop Minus (Const 12) (Uminus (Const 1))) (Binop Less (Binop Times (Var "b") (Var "x")) (Const 1))),If (Binop Or (Const 1) (Var "b")) (If (Const 1) (Seq []) (Seq [])) (While (Const 1) (Seq []))]),
  ("{\n  while 0 do {\n    b = z;\n    z = x;\n    while 27<19 do {}\n  }\n}",Seq [While (Const 0) (Seq [Assign "b" (Var "z"),Assign "z" (Var "x"),While (Binop Less (Const 27) (Const 19)) (Seq [])])]),
  ("b = -a==-1",Assign "b" (Binop Equal (Uminus (Var "a")) (Const (-1)))),
  ("{\n  z = 1;\n  while -(z+a) do\n    while -(z+1)*a do {};\n  while 3 do {\n    a = -a\n  };\n  if 0||1 then\n    if 0<(y<z) then {} else {}\n  else {};\n  while -(x==-z) do\n    x = -x<=a;\n  z = 0;\n  if -10||-z then\n    if a then\n      a = 1||0\n    else\n      y = 1\n  else if z/0*1 then\n    a = b\n  else\n    z = 1;\n  if -b then\n    if 0 then\n      if -x then {} else {}\n    else\n      while a do {}\n  else\n    x = -25<=1;\n  a = -10<-z;\n  if 0<=x then {} else {};\n  a = 1;\n  y = -((z<x)*-(-y));\n  z = -(-a);\n  while x&&-x/(0*0==-(1)<=19+y+b*a) do\n    b = z;\n  y = -(b==z);\n  if b then\n    if b then\n      x = 8\n    else if -(1) then {} else {}\n  else if -7+-6 then\n    y = 0\n  else\n    b = -y;\n  y = -22;\n  y = b/(x-(1<z));\n  z = 0;\n  while -18 do\n    y = y;\n  z = a;\n  if x then {} else\n    a = -(y/z);\n  x = -z;\n  a = 1;\n  if -(0) then\n    while 1 do\n      if x then\n        z = a\n      else\n        x = -b&&-(8)\n  else\n    a = x<=z*z\n}",Seq [Assign "z" (Const 1),While (Uminus (Binop Plus (Var "z") (Var "a"))) (While (Binop Times (Uminus (Binop Plus (Var "z") (Const 1))) (Var "a")) (Seq [])),While (Const 3) (Seq [Assign "a" (Uminus (Var "a"))]),If (Binop Or (Const 0) (Const 1)) (If (Binop Less (Const 0) (Binop Less (Var "y") (Var "z"))) (Seq []) (Seq [])) (Seq []),While (Uminus (Binop Equal (Var "x") (Uminus (Var "z")))) (Assign "x" (Binop LessEq (Uminus (Var "x")) (Var "a"))),Assign "z" (Const 0),If (Binop Or (Const (-10)) (Uminus (Var "z"))) (If (Var "a") (Assign "a" (Binop Or (Const 1) (Const 0))) (Assign "y" (Const 1))) (If (Binop Times (Binop Div (Var "z") (Const 0)) (Const 1)) (Assign "a" (Var "b")) (Assign "z" (Const 1))),If (Uminus (Var "b")) (If (Const 0) (If (Uminus (Var "x")) (Seq []) (Seq [])) (While (Var "a") (Seq []))) (Assign "x" (Binop LessEq (Const (-25)) (Const 1))),Assign "a" (Binop Less (Const (-10)) (Uminus (Var "z"))),If (Binop LessEq (Const 0) (Var "x")) (Seq []) (Seq []),Assign "a" (Const 1),Assign "y" (Uminus (Binop Times (Binop Less (Var "z") (Var "x")) (Uminus (Uminus (Var "y"))))),Assign "z" (Uminus (Uminus (Var "a"))),While (Binop And (Var "x") (Binop Div (Uminus (Var "x")) (Binop LessEq (Binop Equal (Binop Times (Const 0) (Const 0)) (Uminus (Const 1))) (Binop Plus (Binop Plus (Const 19) (Var "y")) (Binop Times (Var "b") (Var "a")))))) (Assign "b" (Var "z")),Assign "y" (Uminus (Binop Equal (Var "b") (Var "z"))),If (Var "b") (If (Var "b") (Assign "x" (Const 8)) (If (Uminus (Const 1)) (Seq []) (Seq []))) (If (Binop Plus (Const (-7)) (Const (-6))) (Assign "y" (Const 0)) (Assign "b" (Uminus (Var "y")))),Assign "y" (Const (-22)),Assign "y" (Binop Div (Var "b") (Binop Minus (Var "x") (Binop Less (Const 1) (Var "z")))),Assign "z" (Const 0),While (Const (-18)) (Assign "y" (Var "y")),Assign "z" (Var "a"),If (Var "x") (Seq []) (Assign "a" (Uminus (Binop Div (Var "y") (Var "z")))),Assign "x" (Uminus (Var "z")),Assign "a" (Const 1),If (Uminus (Const 0)) (While (Const 1) (If (Var "x") (Assign "z" (Var "a")) (Assign "x" (Binop And (Uminus (Var "b")) (Uminus (Const 8)))))) (Assign "a" (Binop LessEq (Var "x") (Binop Times (Var "z") (Var "z"))))]),
  ("z = (z<=(a==(0<1))==a)*(b<17)",Assign "z" (Binop Times (Binop Equal (Binop LessEq (Var "z") (Binop Equal (Var "a") (Binop Less (Const 0) (Const 1)))) (Var "a")) (Binop Less (Var "b") (Const 17)))),
  ("x = a",Assign "x" (Var "a")),
  ("{\n  if y then\n    b = a<(1==b)\n  else {};\n  while -(1) do {\n    if -(b-x) then\n      if x then {} else {}\n    else if z then {} else {};\n    a = z==0\n  };\n  if -x+x then\n    while x do {}\n  else if -29 then\n    b = -22\n  else\n    z = -(1*1);\n  if x-0 then {\n    x = -(-25)\n  } else\n    while y do\n      b = -11;\n  x = b+a;\n  if -(21) then\n    y = -(a+-(y<=1))\n  else if 3<a then\n    a = y<=-(1)\n  else {};\n  if x then\n    while b do\n      y = 13\n  else {};\n  b = 0;\n  b = 0;\n  x = 0\n}",Seq [If (Var "y") (Assign "b" (Binop Less (Var "a") (Binop Equal (Const 1) (Var "b")))) (Seq []),While (Uminus (Const 1)) (Seq [If (Uminus (Binop Minus (Var "b") (Var "x"))) (If (Var "x") (Seq []) (Seq [])) (If (Var "z") (Seq []) (Seq [])),Assign "a" (Binop Equal (Var "z") (Const 0))]),If (Binop Plus (Uminus (Var "x")) (Var "x")) (While (Var "x") (Seq [])) (If (Const (-29)) (Assign "b" (Const (-22))) (Assign "z" (Uminus (Binop Times (Const 1) (Const 1))))),If (Binop Minus (Var "x") (Const 0)) (Seq [Assign "x" (Uminus (Const (-25)))]) (While (Var "y") (Assign "b" (Const (-11)))),Assign "x" (Binop Plus (Var "b") (Var "a")),If (Uminus (Const 21)) (Assign "y" (Uminus (Binop Plus (Var "a") (Uminus (Binop LessEq (Var "y") (Const 1)))))) (If (Binop Less (Const 3) (Var "a")) (Assign "a" (Binop LessEq (Var "y") (Uminus (Const 1)))) (Seq [])),If (Var "x") (While (Var "b") (Assign "y" (Const 13))) (Seq []),Assign "b" (Const 0),Assign "b" (Const 0),Assign "x" (Const 0)]),
  ("b = a<(z||y+1)",Assign "b" (Binop Less (Var "a") (Binop Or (Var "z") (Binop Plus (Var "y") (Const 1))))),
  ("if -(1) then\n  b = 1\nelse if -y*1 then\n  z = b\nelse {}",If (Uminus (Const 1)) (Assign "b" (Const 1)) (If (Binop Times (Uminus (Var "y")) (Const 1)) (Assign "z" (Var "b")) (Seq []))),
  ("{\n  a = -z;\n  if 0 then\n    while z do\n      a = -(-22||z/(y<=(z&&-30)))\n  else {\n    x = 26/-30;\n    x = b\n  };\n  b = 5;\n  y = a;\n  x = 0;\n  while -1==-23 do {};\n  b = b;\n  x = 0<=(x<=a);\n  if 0 then\n    if 1<-17 then {} else {}\n  else {\n    z = z\n  };\n  y = 0/1;\n  b = y;\n  while x==y do\n    z = 0+(y<z);\n  if z then\n    a = 1\n  else\n    a = y<0;\n  if -(1) then\n    z = 1\n  else\n    x = b==x/(-(0)<-(0))\n}",Seq [Assign "a" (Uminus (Var "z")),If (Const 0) (While (Var "z") (Assign "a" (Uminus (Binop Or (Const (-22)) (Binop Div (Var "z") (Binop LessEq (Var "y") (Binop And (Var "z") (Const (-30))))))))) (Seq [Assign "x" (Binop Div (Const 26) (Const (-30))),Assign "x" (Var "b")]),Assign "b" (Const 5),Assign "y" (Var "a"),Assign "x" (Const 0),While (Binop Equal (Const (-1)) (Const (-23))) (Seq []),Assign "b" (Var "b"),Assign "x" (Binop LessEq (Const 0) (Binop LessEq (Var "x") (Var "a"))),If (Const 0) (If (Binop Less (Const 1) (Const (-17))) (Seq []) (Seq [])) (Seq [Assign "z" (Var "z")]),Assign "y" (Binop Div (Const 0) (Const 1)),Assign "b" (Var "y"),While (Binop Equal (Var "x") (Var "y")) (Assign "z" (Binop Plus (Const 0) (Binop Less (Var "y") (Var "z")))),If (Var "z") (Assign "a" (Const 1)) (Assign "a" (Binop Less (Var "y") (Const 0))),If (Uminus (Const 1)) (Assign "z" (Const 1)) (Assign "x" (Binop Equal (Var "b") (Binop Div (Var "x") (Binop Less (Uminus (Const 0)) (Uminus (Const 0))))))]),
  ("x = y",Assign "x" (Var "y")),
  ("if b then {\n  x = -(1)/z/-(-1);\n  y = 1;\n  y = -17;\n  z = z;\n  a = -(-a)\n} else\n  b = (-a||0==(x||a*1))==a",If (Var "b") (Seq [Assign "x" (Binop Div (Binop Div (Uminus (Const 1)) (Var "z")) (Uminus (Const (-1)))),Assign "y" (Const 1),Assign "y" (Const (-17)),Assign "z" (Var "z"),Assign "a" (Uminus (Uminus (Var "a")))]) (Assign "b" (Binop Equal (Binop Or (Uminus (Var "a")) (Binop Equal (Const 0) (Binop Or (Var "x") (Binop Times (Var "a") (Const 1))))) (Var "a")))),
  ("{\n  z = x;\n  b = a;\n  y = 1;\n  while a do\n    y = x;\n  a = -((4<=z<=b)+3)==-y;\n  z = x-(-7*-x<-(-(1)||1));\n  x = 1;\n  y = -(0);\n  y = 0;\n  x = 0;\n  while 9 do\n    if 9 then {} else {};\n  y = b;\n  if 18+-(-(0)) then {} else {};\n  if 1 then\n    b = 4\n  else {\n    b = y+0\n  };\n  if 1==0 then\n    x = z\n  else\n    while z&&25 do {};\n  if -21 then\n    if -(1-b+((y<1==-(0))+b)) then {} else {}\n  else\n    while y<=-(x||1) do {};\n  if 1 then\n    a = -(-12)\n  else\n    b = a;\n  while b do\n    if 0 then\n      y = 1\n    else {};\n  y = b<y*a;\n  x = z;\n  if 1 then\n    if z then\n      if -(y<-(0)) then\n        y = -(a<1)\n      else {}\n    else\n      while y do\n        if -(b<a)==x then {} else {}\n  else if 1+(-(0)&&y<=-2<=0||-(-4)) then\n    while -(1) do\n      y = z\n  else\n    y = 0;\n  z = -(1);\n  while 1 do\n    x = 11;\n  x = 1/y;\n  if 0 then\n    while 1 do\n      while y do {}\n  else {\n    z = a\n  };\n  a = -7\n}",Seq [Assign "z" (Var "x"),Assign "b" (Var "a"),Assign "y" (Const 1),While (Var "a") (Assign "y" (Var "x")),Assign "a" (Binop Equal (Uminus (Binop Plus (Binop LessEq (Binop LessEq (Const 4) (Var "z")) (Var "b")) (Const 3))) (Uminus (Var "y"))),Assign "z" (Binop Minus (Var "x") (Binop Less (Binop Times (Const (-7)) (Uminus (Var "x"))) (Uminus (Binop Or (Uminus (Const 1)) (Const 1))))),Assign "x" (Const 1),Assign "y" (Uminus (Const 0)),Assign "y" (Const 0),Assign "x" (Const 0),While (Const 9) (If (Const 9) (Seq []) (Seq [])),Assign "y" (Var "b"),If (Binop Plus (Const 18) (Uminus (Uminus (Const 0)))) (Seq []) (Seq []),If (Const 1) (Assign "b" (Const 4)) (Seq [Assign "b" (Binop Plus (Var "y") (Const 0))]),If (Binop Equal (Const 1) (Const 0)) (Assign "x" (Var "z")) (While (Binop And (Var "z") (Const 25)) (Seq [])),If (Const (-21)) (If (Uminus (Binop Plus (Binop Minus (Const 1) (Var "b")) (Binop Plus (Binop Equal (Binop Less (Var "y") (Const 1)) (Uminus (Const 0))) (Var "b")))) (Seq []) (Seq [])) (While (Binop LessEq (Var "y") (Uminus (Binop Or (Var "x") (Const 1)))) (Seq [])),If (Const 1) (Assign "a" (Uminus (Const (-12)))) (Assign "b" (Var "a")),While (Var "b") (If (Const 0) (Assign "y" (Const 1)) (Seq [])),Assign "y" (Binop Less (Var "b") (Binop Times (Var "y") (Var "a"))),Assign "x" (Var "z"),If (Const 1) (If (Var "z") (If (Uminus (Binop Less (Var "y") (Uminus (Const 0)))) (Assign "y" (Uminus (Binop Less (Var "a") (Const 1)))) (Seq [])) (While (Var "y") (If (Binop Equal (Uminus (Binop Less (Var "b") (Var "a"))) (Var "x")) (Seq []) (Seq [])))) (If (Binop Plus (Const 1) (Binop Or (Binop And (Uminus (Const 0)) (Binop LessEq (Binop LessEq (Var "y") (Const (-2))) (Const 0))) (Uminus (Const (-4))))) (While (Uminus (Const 1)) (Assign "y" (Var "z"))) (Assign "y" (Const 0))),Assign "z" (Uminus (Const 1)),While (Const 1) (Assign "x" (Const 11)),Assign "x" (Binop Div (Const 1) (Var "y")),If (Const 0) (While (Const 1) (While (Var "y") (Seq []))) (Seq [Assign "z" (Var "a")]),Assign "a" (Const (-7))]),
  ("if -8 then {\n  y = b;\n  z = -(0/0==29<-(1));\n  a = a;\n  a = a-0;\n  if 1-a then\n    y = 1==x/-((0&&x)<=b)\n  else\n    b = -(0)<=-z--27;\n  x = 0;\n  b = a||x;\n  z = -z\n} else if -(0) then {} else if b==-(b--(0)) then\n  x = 0\nelse if 0 then\n  b = 1\nelse {}",If (Const (-8)) (Seq [Assign "y" (Var "b"),Assign "z" (Uminus (Binop Less (Binop Equal (Binop Div (Const 0) (Const 0)) (Const 29)) (Uminus (Const 1)))),Assign "a" (Var "a"),Assign "a" (Binop Minus (Var "a") (Const 0)),If (Binop Minus (Const 1) (Var "a")) (Assign "y" (Binop Equal (Const 1) (Binop Div (Var "x") (Uminus (Binop LessEq (Binop And (Const 0) (Var "x")) (Var "b")))))) (Assign "b" (Binop LessEq (Uminus (Const 0)) (Binop Minus (Uminus (Var "z")) (Const (-27))))),Assign "x" (Const 0),Assign "b" (Binop Or (Var "a") (Var "x")),Assign "z" (Uminus (Var "z"))]) (If (Uminus (Const 0)) (Seq []) (If (Binop Equal (Var "b") (Uminus (Binop Minus (Var "b") (Uminus (Const 0))))) (Assign "x" (Const 0)) (If (Const 0) (Assign "b" (Const 1)) (Seq []))))),
  ("while a do\n  b = -(-4)==z",While (Var "a") (Assign "b" (Binop Equal (Uminus (Const (-4))) (Var "z")))),
  ("while z do {\n  z = 0;\n  y = -(-(1));\n  y = 1/x;\n  a = 1;\n  b = -13;\n  if -(-(11)) then {} else\n    y = -13\n}",While (Var "z") (Seq [Assign "z" (Const 0),Assign "y" (Uminus (Uminus (Const 1))),Assign "y" (Binop Div (Const 1) (Var "x")),Assign "a" (Const 1),Assign "b" (Const (-13)),If (Uminus (Uminus (Const 11))) (Seq []) (Assign "y" (Const (-13)))])),
  ("x = 0",Assign "x" (Const 0)),
  ("if 1 then\n  a = z\nelse {\n  while -z do\n    y = -x<-29;\n  while -(-z) do\n    a = z<a;\n  a = -24==1;\n  while 1 do\n    z = b<=-x/-13;\n  while b do\n    if b then {} else {}\n}",If (Const 1) (Assign "a" (Var "z")) (Seq [While (Uminus (Var "z")) (Assign "y" (Binop Less (Uminus (Var "x")) (Const (-29)))),While (Uminus (Uminus (Var "z"))) (Assign "a" (Binop Less (Var "z") (Var "a"))),Assign "a" (Binop Equal (Const (-24)) (Const 1)),While (Const 1) (Assign "z" (Binop LessEq (Var "b") (Binop Div (Uminus (Var "x")) (Const (-13))))),While (Var "b") (If (Var "b") (Seq []) (Seq []))])),
  ("b = -a",Assign "b" (Uminus (Var "a"))),
  ("{\n  while b+x do {\n    b = 1;\n    b = b;\n    if b then {} else {}\n  };\n  if -(-z==a) then\n    b = 0\n  else\n    b = 0;\n  while a do\n    a = -(-a);\n  if b then\n    if 6 then\n      if 0<z then {} else\n        b = y\n    else\n      y = 0\n  else {\n    b = 1;\n    a = a<b;\n    z = y&&7\n  };\n  a = 0;\n  z = -z;\n  if 0 then\n    z = z\n  else\n    a = y;\n  if -19 then\n    if 0 then\n      if b-y then\n        y = y\n      else\n        x = 0\n    else if 0<=1 then\n      while y*y do {}\n    else\n      b = -26\n  else if 1&&-24+x-0 then {} else\n    a = -4;\n  while b do {};\n  while y do\n    x = 0;\n  z = a||1;\n  if b then\n    y = -(x<(0<=a))\n  else {};\n  x = 0/0;\n  y = 1<1;\n  z = 13+(-29<a);\n  while -(-(0)<-b) do\n    while a do\n      while 0 do {};\n  x = 0\n}",Seq [While (Binop Plus (Var "b") (Var "x")) (Seq [Assign "b" (Const 1),Assign "b" (Var "b"),If (Var "b") (Seq []) (Seq [])]),If (Uminus (Binop Equal (Uminus (Var "z")) (Var "a"))) (Assign "b" (Const 0)) (Assign "b" (Const 0)),While (Var "a") (Assign "a" (Uminus (Uminus (Var "a")))),If (Var "b") (If (Const 6) (If (Binop Less (Const 0) (Var "z")) (Seq []) (Assign "b" (Var "y"))) (Assign "y" (Const 0))) (Seq [Assign "b" (Const 1),Assign "a" (Binop Less (Var "a") (Var "b")),Assign "z" (Binop And (Var "y") (Const 7))]),Assign "a" (Const 0),Assign "z" (Uminus (Var "z")),If (Const 0) (Assign "z" (Var "z")) (Assign "a" (Var "y")),If (Const (-19)) (If (Const 0) (If (Binop Minus (Var "b") (Var "y")) (Assign "y" (Var "y")) (Assign "x" (Const 0))) (If (Binop LessEq (Const 0) (Const 1)) (While (Binop Times (Var "y") (Var "y")) (Seq [])) (Assign "b" (Const (-26))))) (If (Binop And (Const 1) (Binop Minus (Binop Plus (Const (-24)) (Var "x")) (Const 0))) (Seq []) (Assign "a" (Const (-4)))),While (Var "b") (Seq []),While (Var "y") (Assign "x" (Const 0)),Assign "z" (Binop Or (Var "a") (Const 1)),If (Var "b") (Assign "y" (Uminus (Binop Less (Var "x") (Binop LessEq (Const 0) (Var "a"))))) (Seq []),Assign "x" (Binop Div (Const 0) (Const 0)),Assign "y" (Binop Less (Const 1) (Const 1)),Assign "z" (Binop Plus (Const 13) (Binop Less (Const (-29)) (Var "a"))),While (Uminus (Binop Less (Uminus (Const 0)) (Uminus (Var "b")))) (While (Var "a") (While (Const 0) (Seq []))),Assign "x" (Const 0)]),
  ("while 0 do\n  a = x",While (Const 0) (Assign "a" (Var "x"))),
  ("if 0&&x then {\n  z = y;\n  if z then\n    a = 0\n  else {};\n  a = -24;\n  if b then {} else {};\n  b = -(0);\n  if y then\n    a = (24<0)*(b*(-b*-z)&&1)\n  else if 1 then {} else {};\n  b = -20==z;\n  b = -(0)\n} else\n  x = z",If (Binop And (Const 0) (Var "x")) (Seq [Assign "z" (Var "y"),If (Var "z") (Assign "a" (Const 0)) (Seq []),Assign "a" (Const (-24)),If (Var "b") (Seq []) (Seq []),Assign "b" (Uminus (Const 0)),If (Var "y") (Assign "a" (Binop Times (Binop Less (Const 24) (Const 0)) (Binop And (Binop Times (Var "b") (Binop Times (Uminus (Var "b")) (Uminus (Var "z")))) (Const 1)))) (If (Const 1) (Seq []) (Seq [])),Assign "b" (Binop Equal (Const (-20)) (Var "z")),Assign "b" (Uminus (Const 0))]) (Assign "x" (Var "z"))),
  ("if -(-20) then\n  z = x\nelse {\n  b = b;\n  a = 1;\n  b = 1==0;\n  a = 1&&(1<=-x&&-x);\n  a = 1;\n  if b then\n    if z then {} else\n      x = 4\n  else {};\n  b = 1\n}",If (Uminus (Const (-20))) (Assign "z" (Var "x")) (Seq [Assign "b" (Var "b"),Assign "a" (Const 1),Assign "b" (Binop Equal (Const 1) (Const 0)),Assign "a" (Binop And (Const 1) (Binop And (Binop LessEq (Const 1) (Uminus (Var "x"))) (Uminus (Var "x")))),Assign "a" (Const 1),If (Var "b") (If (Var "z") (Seq []) (Assign "x" (Const 4))) (Seq []),Assign "b" (Const 1)])),
  ("x = 1&&-b",Assign "x" (Binop And (Const 1) (Uminus (Var "b")))),
  ("{\n  while x do\n    b = 9;\n  if 0 then\n    y = ((z&&a*1)-(1+1))*z-x\n  else {};\n  if x then {\n    if b then {} else {}\n  } else\n    a = 0;\n  if b-(0&&-28)+-(-(1)/(0-x))&&-(y||(-9==-4)*x) then {} else\n    x = -(a<=b)<=-z<=0;\n  if -b/((x*a||a/x)/a) then\n    a = z\n  else if 0<(0<=x) then {} else {};\n  a = -6;\n  if -(1) then {\n    while z do\n      if -5 then {} else {};\n    b = (a<=0)+b\n  } else if -14<=11-x then\n    a = 0\n  else if -(0)/b then\n    a = b==a\n  else {};\n  y = a;\n  if 14 then {\n    a = a\n  } else\n    b = y;\n  x = a;\n  z = -(-a);\n  if -4+a then\n    z = a<-b\n  else if 1 then\n    while b/(-a==(0||z))-1&&-x do {}\n  else {};\n  if 1/a==(b+z)*-y<(b&&y==-z)||-(y<z)/(y-b/x) then {\n    y = z\n  } else {};\n  y = 0;\n  x = a;\n  y = z;\n  if -(0) then\n    if 0 then\n      if 0*-(z<=1&&-11) then {} else {}\n    else\n      x = 12<-z\n  else\n    z = y<(x<=x);\n  x = b+1+0;\n  b = y;\n  y = b;\n  a = -(-x)+(0-b)-z||b;\n  while 0 do\n    x = -22-0\n}",Seq [While (Var "x") (Assign "b" (Const 9)),If (Const 0) (Assign "y" (Binop Minus (Binop Times (Binop Minus (Binop And (Var "z") (Binop Times (Var "a") (Const 1))) (Binop Plus (Const 1) (Const 1))) (Var "z")) (Var "x"))) (Seq []),If (Var "x") (Seq [If (Var "b") (Seq []) (Seq [])]) (Assign "a" (Const 0)),If (Binop And (Binop Plus (Binop Minus (Var "b") (Binop And (Const 0) (Const (-28)))) (Uminus (Binop Div (Uminus (Const 1)) (Binop Minus (Const 0) (Var "x"))))) (Uminus (Binop Or (Var "y") (Binop Times (Binop Equal (Const (-9)) (Const (-4))) (Var "x"))))) (Seq []) (Assign "x" (Binop LessEq (Binop LessEq (Uminus (Binop LessEq (Var "a") (Var "b"))) (Uminus (Var "z"))) (Const 0))),If (Binop Div (Uminus (Var "b")) (Binop Div (Binop Or (Binop Times (Var "x") (Var "a")) (Binop Div (Var "a") (Var "x"))) (Var "a"))) (Assign "a" (Var "z")) (If (Binop Less (Const 0) (Binop LessEq (Const 0) (Var "x"))) (Seq []) (Seq [])),Assign "a" (Const (-6)),If (Uminus (Const 1)) (Seq [While (Var "z") (If (Const (-5)) (Seq []) (Seq [])),Assign "b" (Binop Plus (Binop LessEq (Var "a") (Const 0)) (Var "b"))]) (If (Binop LessEq (Const (-14)) (Binop Minus (Const 11) (Var "x"))) (Assign "a" (Const 0)) (If (Binop Div (Uminus (Const 0)) (Var "b")) (Assign "a" (Binop Equal (Var "b") (Var "a"))) (Seq []))),Assign "y" (Var "a"),If (Const 14) (Seq [Assign "a" (Var "a")]) (Assign "b" (Var "y")),Assign "x" (Var "a"),Assign "z" (Uminus (Uminus (Var "a"))),If (Binop Plus (Const (-4)) (Var "a")) (Assign "z" (Binop Less (Var "a") (Uminus (Var "b")))) (If (Const 1) (While (Binop And (Binop Minus (Binop Div (Var "b") (Binop Equal (Uminus (Var "a")) (Binop Or (Const 0) (Var "z")))) (Const 1)) (Uminus (Var "x"))) (Seq [])) (Seq [])),If (Binop Or (Binop Less (Binop Equal (Binop Div (Const 1) (Var "a")) (Binop Times (Binop Plus (Var "b") (Var "z")) (Uminus (Var "y")))) (Binop And (Var "b") (Binop Equal (Var "y") (Uminus (Var "z"))))) (Binop Div (Uminus (Binop Less (Var "y") (Var "z"))) (Binop Minus (Var "y") (Binop Div (Var "b") (Var "x"))))) (Seq [Assign "y" (Var "z")]) (Seq []),Assign "y" (Const 0),Assign "x" (Var "a"),Assign "y" (Var "z"),If (Uminus (Const 0)) (If (Const 0) (If (Binop Times (Const 0) (Uminus (Binop And (Binop LessEq (Var "z") (Const 1)) (Const (-11))))) (Seq []) (Seq [])) (Assign "x" (Binop Less (Const 12) (Uminus (Var "z"))))) (Assign "z" (Binop Less (Var "y") (Binop LessEq (Var "x") (Var "x")))),Assign "x" (Binop Plus (Binop Plus (Var "b") (Const 1)) (Const 0)),Assign "b" (Var "y"),Assign "y" (Var "b"),Assign "a" (Binop Or (Binop Minus (Binop Plus (Uminus (Uminus (Var "x"))) (Binop Minus (Const 0) (Var "b"))) (Var "z")) (Var "b")),While (Const 0) (Assign "x" (Binop Minus (Const (-22)) (Const 0)))]),
  ("b = 0+16/1",Assign "b" (Binop Plus (Const 0) (Binop Div (Const 16) (Const 1)))),
  ("{\n  if z then\n    b = b<(y<1)\n  else {\n    while b do {}\n  };\n  z = b;\n  b = -((-25<(z*-8&&-29))*x);\n  a = -(0&&1);\n  x = 1;\n  y = y;\n  while -(12)+a+-b||-20 do\n    if 28 then\n      b = a||-27\n    else if 1 then\n      if z+a*18 then {} else {}\n    else if b then {} else {};\n  a = (b&&b)/14;\n  while b+-1 do\n    x = 1;\n  b = y;\n  x = x-a;\n  a = 0;\n  x = -((7&&0)<=-5);\n  if 0 then\n    x = x*((a||-27/9)+b<=(y<-(1)<=a))\n  else {}\n}",Seq [If (Var "z") (Assign "b" (Binop Less (Var "b") (Binop Less (Var "y") (Const 1)))) (Seq [While (Var "b") (Seq [])]),Assign "z" (Var "b"),Assign "b" (Uminus (Binop Times (Binop Less (Const (-25)) (Binop And (Binop Times (Var "z") (Const (-8))) (Const (-29)))) (Var "x"))),Assign "a" (Uminus (Binop And (Const 0) (Const 1))),Assign "x" (Const 1),Assign "y" (Var "y"),While (Binop Or (Binop Plus (Binop Plus (Uminus (Const 12)) (Var "a")) (Uminus (Var "b"))) (Const (-20))) (If (Const 28) (Assign "b" (Binop Or (Var "a") (Const (-27)))) (If (Const 1) (If (Binop Plus (Var "z") (Binop Times (Var "a") (Const 18))) (Seq []) (Seq [])) (If (Var "b") (Seq []) (Seq [])))),Assign "a" (Binop Div (Binop And (Var "b") (Var "b")) (Const 14)),While (Binop Plus (Var "b") (Const (-1))) (Assign "x" (Const 1)),Assign "b" (Var "y"),Assign "x" (Binop Minus (Var "x") (Var "a")),Assign "a" (Const 0),Assign "x" (Uminus (Binop LessEq (Binop And (Const 7) (Const 0)) (Const (-5)))),If (Const 0) (Assign "x" (Binop Times (Var "x") (Binop LessEq (Binop Plus (Binop Or (Var "a") (Binop Div (Const (-27)) (Const 9))) (Var "b")) (Binop LessEq (Binop Less (Var "y") (Uminus (Const 1))) (Var "a"))))) (Seq [])]),
  ("if x||a then {\n  y = x;\n  if -14 then\n    y = -(1)==-(-6)&&-((1<=x)/((x<-29)+b))\n  else {};\n  if 0 then {} else {};\n  if y then\n    b = 15\n  else {};\n  if 8 then\n    if -a then\n      a = b\n    else\n      z = y\n  else\n    y = b/((1<-21*21)-1);\n  if y then {} else\n    a = 15;\n  a = 0;\n  y = a;\n  if 1 then {} else\n    x = -9+(-23-a);\n  b = -a\n} else if -(0+16) then\n  b = 1\nelse\n  while b-y do {}",If (Binop Or (Var "x") (Var "a")) (Seq [Assign "y" (Var "x"),If (Const (-14)) (Assign "y" (Binop And (Binop Equal (Uminus (Const 1)) (Uminus (Const (-6)))) (Uminus (Binop Div (Binop LessEq (Const 1) (Var "x")) (Binop Plus (Binop Less (Var "x") (Const (-29))) (Var "b")))))) (Seq []),If (Const 0) (Seq []) (Seq []),If (Var "y") (Assign "b" (Const 15)) (Seq []),If (Const 8) (If (Uminus (Var "a")) (Assign "a" (Var "b")) (Assign "z" (Var "y"))) (Assign "y" (Binop Div (Var "b") (Binop Minus (Binop Less (Const 1) (Binop Times (Const (-21)) (Const 21))) (Const 1)))),If (Var "y") (Seq []) (Assign "a" (Const 15)),Assign "a" (Const 0),Assign "y" (Var "a"),If (Const 1) (Seq []) (Assign "x" (Binop Plus (Const (-9)) (Binop Minus (Const (-23)) (Var "a")))),Assign "b" (Uminus (Var "a"))]) (If (Uminus (Binop Plus (Const 0) (Const 16))) (Assign "b" (Const 1)) (While (Binop Minus (Var "b") (Var "y")) (Seq [])))),
  ("while b do\n  y = 0",While (Var "b") (Assign "y" (Const 0))),
  ("y = 0+(0-0)--((b&&z+a)+-(1))",Assign "y" (Binop Minus (Binop Plus (Const 0) (Binop Minus (Const 0) (Const 0))) (Uminus (Binop Plus (Binop And (Var "b") (Binop Plus (Var "z") (Var "a"))) (Uminus (Const 1)))))),
  ("while -26 do\n  if -24 then\n    if x then {} else if y then\n      b = -21\n    else\n      b = -z\n  else {}",While (Const (-26)) (If (Const (-24)) (If (Var "x") (Seq []) (If (Var "y") (Assign "b" (Const (-21))) (Assign "b" (Uminus (Var "z"))))) (Seq []))),
  ("{\n  while y do\n    x = x;\n  a = 1;\n  if y then\n    if 1/(-(x<-z)+-(0)) then {} else\n      y = -22\n  else {};\n  a = -b;\n  y = x;\n  if -(0) then\n    x = b\n  else\n    z = b<=11;\n  while x do\n    if x then {\n      z = x\n    } else\n      b = z;\n  y = x;\n  if -(-(-(0))) then {\n    while 0==-((-(24)<x)-y) do\n      b = 0;\n    while x==b do\n      if z<y/z then {} else {};\n    a = z+1\n  } else\n    z = 0;\n  b = z\n}",Seq [While (Var "y") (Assign "x" (Var "x")),Assign "a" (Const 1),If (Var "y") (If (Binop Div (Const 1) (Binop Plus (Uminus (Binop Less (Var "x") (Uminus (Var "z")))) (Uminus (Const 0)))) (Seq []) (Assign "y" (Const (-22)))) (Seq []),Assign "a" (Uminus (Var "b")),Assign "y" (Var "x"),If (Uminus (Const 0)) (Assign "x" (Var "b")) (Assign "z" (Binop LessEq (Var "b") (Const 11))),While (Var "x") (If (Var "x") (Seq [Assign "z" (Var "x")]) (Assign "b" (Var "z"))),Assign "y" (Var "x"),If (Uminus (Uminus (Uminus (Const 0)))) (Seq [While (Binop Equal (Const 0) (Uminus (Binop Minus (Binop Less (Uminus (Const 24)) (Var "x")) (Var "y")))) (Assign "b" (Const 0)),While (Binop Equal (Var "x") (Var "b")) (If (Binop Less (Var "z") (Binop Div (Var "y") (Var "z"))) (Seq []) (Seq [])),Assign "a" (Binop Plus (Var "z") (Const 1))]) (Assign "z" (Const 0)),Assign "b" (Var "z")]),
  ("a = (1&&x)==z",Assign "a" (Binop Equal (Binop And (Const 1) (Var "x")) (Var "z"))),
  ("{\n  z = 1;\n  y = y/((z+0)*y<(0<0<=-(1)))/-b;\n  a = 1;\n  z = (x<14<x)--(0);\n  x = x;\n  if (0-a<=y)-8 then {} else\n    while 0<0 do\n      y = 1;\n  if z then\n    while z do {}\n  else\n    x = a;\n  if 1 then {} else\n    x = z-x;\n  y = 0/(x-b-x)*z;\n  x = z;\n  if b*(b&&0) then\n    x = 0\n  else {\n    while -(0+0)+-(0&&a) do {};\n    a = -b;\n    if z then\n      z = z||-x\n    else {}\n  };\n  z = -(-(-y+1)&&0-z--y+(-(1)+-x));\n  if -a then {\n    y = y\n  } else\n    while a do\n      b = 1;\n  if (b-(-x-1)+6)*(x*8) then\n    z = -11<=(z==0)\n  else\n    while 0 do\n      if -17 then {} else {};\n  x = 0;\n  a = b;\n  if z then\n    z = -17-x\n  else\n    z = z<0*a;\n  a = 0==-27;\n  x = y;\n  if y then\n    a = z==1-17\n  else {\n    b = z==(1||y)\n  };\n  while -z do\n    y = 0;\n  y = 1;\n  y = a--a+a;\n  b = b+(y+a/20==-(0))<b;\n  while (0||x)+1&&18 do\n    if -(z<=(18&&x)-y+23) then\n      z = y\n    else if (1<=z==1)+y+(0<-a==-(0)) then {} else {};\n  while z do {\n    if b then {} else {}\n  };\n  while z do\n    if b||b then\n      a = 0\n    else {}\n}",Seq [Assign "z" (Const 1),Assign "y" (Binop Div (Binop Div (Var "y") (Binop Less (Binop Times (Binop Plus (Var "z") (Const 0)) (Var "y")) (Binop LessEq (Binop Less (Const 0) (Const 0)) (Uminus (Const 1))))) (Uminus (Var "b"))),Assign "a" (Const 1),Assign "z" (Binop Minus (Binop Less (Binop Less (Var "x") (Const 14)) (Var "x")) (Uminus (Const 0))),Assign "x" (Var "x"),If (Binop Minus (Binop LessEq (Binop Minus (Const 0) (Var "a")) (Var "y")) (Const 8)) (Seq []) (While (Binop Less (Const 0) (Const 0)) (Assign "y" (Const 1))),If (Var "z") (While (Var "z") (Seq [])) (Assign "x" (Var "a")),If (Const 1) (Seq []) (Assign "x" (Binop Minus (Var "z") (Var "x"))),Assign "y" (Binop Times (Binop Div (Const 0) (Binop Minus (Binop Minus (Var "x") (Var "b")) (Var "x"))) (Var "z")),Assign "x" (Var "z"),If (Binop Times (Var "b") (Binop And (Var "b") (Const 0))) (Assign "x" (Const 0)) (Seq [While (Binop Plus (Uminus (Binop Plus (Const 0) (Const 0))) (Uminus (Binop And (Const 0) (Var "a")))) (Seq []),Assign "a" (Uminus (Var "b")),If (Var "z") (Assign "z" (Binop Or (Var "z") (Uminus (Var "x")))) (Seq [])]),Assign "z" (Uminus (Binop And (Uminus (Binop Plus (Uminus (Var "y")) (Const 1))) (Binop Plus (Binop Minus (Binop Minus (Const 0) (Var "z")) (Uminus (Var "y"))) (Binop Plus (Uminus (Const 1)) (Uminus (Var "x")))))),If (Uminus (Var "a")) (Seq [Assign "y" (Var "y")]) (While (Var "a") (Assign "b" (Const 1))),If (Binop Times (Binop Plus (Binop Minus (Var "b") (Binop Minus (Uminus (Var "x")) (Const 1))) (Const 6)) (Binop Times (Var "x") (Const 8))) (Assign "z" (Binop LessEq (Const (-11)) (Binop Equal (Var "z") (Const 0)))) (While (Const 0) (If (Const (-17)) (Seq []) (Seq []))),Assign "x" (Const 0),Assign "a" (Var "b"),If (Var "z") (Assign "z" (Binop Minus (Const (-17)) (Var "x"))) (Assign "z" (Binop Less (Var "z") (Binop Times (Const 0) (Var "a")))),Assign "a" (Binop Equal (Const 0) (Const (-27))),Assign "x" (Var "y"),If (Var "y") (Assign "a" (Binop Equal (Var "z") (Binop Minus (Const 1) (Const 17)))) (Seq [Assign "b" (Binop Equal (Var "z") (Binop Or (Const 1) (Var "y")))]),While (Uminus (Var "z")) (Assign "y" (Const 0)),Assign "y" (Const 1),Assign "y" (Binop Plus (Binop Minus (Var "a") (Uminus (Var "a"))) (Var "a")),Assign "b" (Binop Less (Binop Plus (Var "b") (Binop Equal (Binop Plus (Var "y") (Binop Div (Var "a") (Const 20))) (Uminus (Const 0)))) (Var "b")),While (Binop And (Binop Plus (Binop Or (Const 0) (Var "x")) (Const 1)) (Const 18)) (If (Uminus (Binop LessEq (Var "z") (Binop Plus (Binop Minus (Binop And (Const 18) (Var "x")) (Var "y")) (Const 23)))) (Assign "z" (Var "y")) (If (Binop Plus (Binop Plus (Binop Equal (Binop LessEq (Const 1) (Var "z")) (Const 1)) (Var "y")) (Binop Equal (Binop Less (Const 0) (Uminus (Var "a"))) (Uminus (Const 0)))) (Seq []) (Seq []))),While (Var "z") (Seq [If (Var "b") (Seq []) (Seq [])]),While (Var "z") (If (Binop Or (Var "b") (Var "b")) (Assign "a" (Const 0)) (Seq []))]),
  ("{\n  b = 0;\n  x = -a--(z-x)*1-b;\n  a = -(1);\n  x = 0*(z||y)==0==(-(-(0))<0);\n  b = a;\n  if 16+(x<=b&&(y||x)&&b)<=(0||1+(1==b))/-(1-3*y) then {} else {\n    if -4 then\n      if 0 then {} else {}\n    else\n      a = b==b\n  };\n  if 0+z then\n    a = a\n  else\n    b = z;\n  b = 0;\n  z = z<=-b;\n  x = -21\n}",Seq [Assign "b" (Const 0),Assign "x" (Binop Minus (Binop Minus (Uminus (Var "a")) (Binop Times (Uminus (Binop Minus (Var "z") (Var "x"))) (Const 1))) (Var "b")),Assign "a" (Uminus (Const 1)),Assign "x" (Binop Equal (Binop Equal (Binop Times (Const 0) (Binop Or (Var "z") (Var "y"))) (Const 0)) (Binop Less (Uminus (Uminus (Const 0))) (Const 0))),Assign "b" (Var "a"),If (Binop LessEq (Binop Plus (Const 16) (Binop And (Binop And (Binop LessEq (Var "x") (Var "b")) (Binop Or (Var "y") (Var "x"))) (Var "b"))) (Binop Div (Binop Or (Const 0) (Binop Plus (Const 1) (Binop Equal (Const 1) (Var "b")))) (Uminus (Binop Minus (Const 1) (Binop Times (Const 3) (Var "y")))))) (Seq []) (Seq [If (Const (-4)) (If (Const 0) (Seq []) (Seq [])) (Assign "a" (Binop Equal (Var "b") (Var "b")))]),If (Binop Plus (Const 0) (Var "z")) (Assign "a" (Var "a")) (Assign "b" (Var "z")),Assign "b" (Const 0),Assign "z" (Binop LessEq (Var "z") (Uminus (Var "b"))),Assign "x" (Const (-21))]),
  ("{\n  x = 1;\n  a = 10*(-(1)==a-1);\n  while (-7+y)/22 do\n    x = 1;\n  b = -22;\n  z = b;\n  x = 1;\n  if y then\n    while x do\n      b = x\n  else\n    b = 6\n}",Seq [Assign "x" (Const 1),Assign "a" (Binop Times (Const 10) (Binop Equal (Uminus (Const 1)) (Binop Minus (Var "a") (Const 1)))),While (Binop Div (Binop Plus (Const (-7)) (Var "y")) (Const 22)) (Assign "x" (Const 1)),Assign "b" (Const (-22)),Assign "z" (Var "b"),Assign "x" (Const 1),If (Var "y") (While (Var "x") (Assign "b" (Var "x"))) (Assign "b" (Const 6))]),
  ("if a<=-(0) then\n  if a then\n    x = (z+(1==14))/z\n  else if 0 then {\n    if z then {} else {}\n  } else\n    x = -(a||b)==0<(1&&-z)\nelse\n  y = -9",If (Binop LessEq (Var "a") (Uminus (Const 0))) (If (Var "a") (Assign "x" (Binop Div (Binop Plus (Var "z") (Binop Equal (Const 1) (Const 14))) (Var "z"))) (If (Const 0) (Seq [If (Var "z") (Seq []) (Seq [])]) (Assign "x" (Binop Less (Binop Equal (Uminus (Binop Or (Var "a") (Var "b"))) (Const 0)) (Binop And (Const 1) (Uminus (Var "z"))))))) (Assign "y" (Const (-9)))),
  ("{\n  while -y*-7 do\n    if z then {} else\n      while -(1) do {};\n  z = a;\n  z = 30/1;\n  z = -22+0==-(-a);\n  if 0 then {} else {};\n  while -(-(y||(a/b||0))) do {};\n  x = -19;\n  while (1+1)*0&&-(-(0)) do\n    b = -x;\n  y = a;\n  x = b*x*3;\n  if 1 then {} else\n    b = 1&&1&&-11*0*((z<=0)/y)||0;\n  y = 0;\n  if 0 then\n    if b then\n      b = y\n    else if 0==1 then {} else {}\n  else\n    z = z;\n  y = b<=0<=-17;\n  while z do\n    z = z||0;\n  z = b&&(z<=-z==x)*-((0<=0)+y);\n  x = -y;\n  if 0/((x&&1)/-(-(26))<0) then {} else\n    a = -(-(x*0));\n  if 26-z then\n    b = 1*y<=x\n  else\n    a = b;\n  y = 0==-(-y);\n  b = b;\n  y = 25<=1||-(1==21);\n  y = b&&-(0);\n  a = x;\n  while 0 do\n    while -11 do {};\n  z = z;\n  while 0*1 do {\n    z = 1\n  }\n}",Seq [While (Binop Times (Uminus (Var "y")) (Const (-7))) (If (Var "z") (Seq []) (While (Uminus (Const 1)) (Seq []))),Assign "z" (Var "a"),Assign "z" (Binop Div (Const 30) (Const 1)),Assign "z" (Binop Equal (Binop Plus (Const (-22)) (Const 0)) (Uminus (Uminus (Var "a")))),If (Const 0) (Seq []) (Seq []),While (Uminus (Uminus (Binop Or (Var "y") (Binop Or (Binop Div (Var "a") (Var "b")) (Const 0))))) (Seq []),Assign "x" (Const (-19)),While (Binop And (Binop Times (Binop Plus (Const 1) (Const 1)) (Const 0)) (Uminus (Uminus (Const 0)))) (Assign "b" (Uminus (Var "x"))),Assign "y" (Var "a"),Assign "x" (Binop Times (Binop Times (Var "b") (Var "x")) (Const 3)),If (Const 1) (Seq []) (Assign "b" (Binop Or (Binop And (Binop And (Const 1) (Const 1)) (Binop Times (Binop Times (Const (-11)) (Const 0)) (Binop Div (Binop LessEq (Var "z") (Const 0)) (Var "y")))) (Const 0))),Assign "y" (Const 0),If (Const 0) (If (Var "b") (Assign "b" (Var "y")) (If (Binop Equal (Const 0) (Const 1)) (Seq []) (Seq []))) (Assign "z" (Var "z")),Assign "y" (Binop LessEq (Binop LessEq (Var "b") (Const 0)) (Const (-17))),While (Var "z") (Assign "z" (Binop Or (Var "z") (Const 0))),Assign "z" (Binop And (Var "b") (Binop Times (Binop Equal (Binop LessEq (Var "z") (Uminus (Var "z"))) (Var "x")) (Uminus (Binop Plus (Binop LessEq (Const 0) (Const 0)) (Var "y"))))),Assign "x" (Uminus (Var "y")),If (Binop Div (Const 0) (Binop Less (Binop Div (Binop And (Var "x") (Const 1)) (Uminus (Uminus (Const 26)))) (Const 0))) (Seq []) (Assign "a" (Uminus (Uminus (Binop Times (Var "x") (Const 0))))),If (Binop Minus (Const 26) (Var "z")) (Assign "b" (Binop LessEq (Binop Times (Const 1) (Var "y")) (Var "x"))) (Assign "a" (Var "b")),Assign "y" (Binop Equal (Const 0) (Uminus (Uminus (Var "y")))),Assign "b" (Var "b"),Assign "y" (Binop Or (Binop LessEq (Const 25) (Const 1)) (Uminus (Binop Equal (Const 1) (Const 21)))),Assign "y" (Binop And (Var "b") (Uminus (Const 0))),Assign "a" (Var "x"),While (Const 0) (While (Const (-11)) (Seq [])),Assign "z" (Var "z"),While (Binop Times (Const 0) (Const 1)) (Seq [Assign "z" (Const 1)])]),
  ("{\n  b = 18;\n  if x then {\n    z = -(-b);\n    a = z;\n    a = 0\n  } else {\n    y = -z\n  };\n  while 0 do\n    y = -(-(-14)||(1==a)/x);\n  if 7 then {} else {\n    if -9-0 then {} else\n      y = x\n  };\n  y = z;\n  x = 29;\n  b = -19\n}",Seq [Assign "b" (Const 18),If (Var "x") (Seq [Assign "z" (Uminus (Uminus (Var "b"))),Assign "a" (Var "z"),Assign "a" (Const 0)]) (Seq [Assign "y" (Uminus (Var "z"))]),While (Const 0) (Assign "y" (Uminus (Binop Or (Uminus (Const (-14))) (Binop Div (Binop Equal (Const 1) (Var "a")) (Var "x"))))),If (Const 7) (Seq []) (Seq [If (Binop Minus (Const (-9)) (Const 0)) (Seq []) (Assign "y" (Var "x"))]),Assign "y" (Var "z"),Assign "x" (Const 29),Assign "b" (Const (-19))]),
  ("while b do\n  y = (1==(1/21<=-b))-(y+1<=-x)<x",While (Var "b") (Assign "y" (Binop Less (Binop Minus (Binop Equal (Const 1) (Binop LessEq (Binop Div (Const 1) (Const 21)) (Uminus (Var "b")))) (Binop LessEq (Binop Plus (Var "y") (Const 1)) (Uminus (Var "x")))) (Var "x")))),
  ("{\n  a = 24;\n  y = b&&(1||-5);\n  z = -(-y)/-27;\n  a = y;\n  while 0 do\n    if a then {} else {};\n  z = 12;\n  if -5+0 then {\n    while -y do {}\n  } else if 1 then\n    b = 1\n  else\n    while x do {};\n  a = z;\n  b = 29;\n  a = 1;\n  b = x;\n  x = 0;\n  if 19 then {\n    z = -29;\n    z = 10\n  } else\n    z = 0||0*1\n}",Seq [Assign "a" (Const 24),Assign "y" (Binop And (Var "b") (Binop Or (Const 1) (Const (-5)))),Assign "z" (Binop Div (Uminus (Uminus (Var "y"))) (Const (-27))),Assign "a" (Var "y"),While (Const 0) (If (Var "a") (Seq []) (Seq [])),Assign "z" (Const 12),If (Binop Plus (Const (-5)) (Const 0)) (Seq [While (Uminus (Var "y")) (Seq [])]) (If (Const 1) (Assign "b" (Const 1)) (While (Var "x") (Seq []))),Assign "a" (Var "z"),Assign "b" (Const 29),Assign "a" (Const 1),Assign "b" (Var "x"),Assign "x" (Const 0),If (Const 19) (Seq [Assign "z" (Const (-29)),Assign "z" (Const 10)]) (Assign "z" (Binop Or (Const 0) (Binop Times (Const 0) (Const 1))))]),
  ("{\n  y = -y;\n  if 1 then\n    a = -(-8)\n  else\n    while z do {};\n  if -((0&&a)*x/(0+x==z/x)) then {} else\n    x = 1;\n  if (-b&&1)<=-28 then\n    a = (b*1||z)<(z<=z)\n  else\n    x = x;\n  y = -7;\n  b = x;\n  if 0 then\n    y = 1==z\n  else {};\n  while -10 do\n    a = 0;\n  z = x;\n  b = (z&&b)-z;\n  x = 1*1;\n  while b-(b||z) do\n    a = 1+y;\n  y = 23/-22;\n  if a then\n    y = x\n  else\n    b = 18;\n  z = a;\n  x = -z/16;\n  z = 0;\n  while 1<(a&&0==x<=1/-19==a) do\n    b = z;\n  x = -(-y);\n  x = y<x/(-z--x)<=x;\n  z = 0;\n  if -27 then\n    x = 28\n  else\n    z = y<=0;\n  x = -(1/a)\n}",Seq [Assign "y" (Uminus (Var "y")),If (Const 1) (Assign "a" (Uminus (Const (-8)))) (While (Var "z") (Seq [])),If (Uminus (Binop Div (Binop Times (Binop And (Const 0) (Var "a")) (Var "x")) (Binop Equal (Binop Plus (Const 0) (Var "x")) (Binop Div (Var "z") (Var "x"))))) (Seq []) (Assign "x" (Const 1)),If (Binop LessEq (Binop And (Uminus (Var "b")) (Const 1)) (Const (-28))) (Assign "a" (Binop Less (Binop Or (Binop Times (Var "b") (Const 1)) (Var "z")) (Binop LessEq (Var "z") (Var "z")))) (Assign "x" (Var "x")),Assign "y" (Const (-7)),Assign "b" (Var "x"),If (Const 0) (Assign "y" (Binop Equal (Const 1) (Var "z"))) (Seq []),While (Const (-10)) (Assign "a" (Const 0)),Assign "z" (Var "x"),Assign "b" (Binop Minus (Binop And (Var "z") (Var "b")) (Var "z")),Assign "x" (Binop Times (Const 1) (Const 1)),While (Binop Minus (Var "b") (Binop Or (Var "b") (Var "z"))) (Assign "a" (Binop Plus (Const 1) (Var "y"))),Assign "y" (Binop Div (Const 23) (Const (-22))),If (Var "a") (Assign "y" (Var "x")) (Assign "b" (Const 18)),Assign "z" (Var "a"),Assign "x" (Binop Div (Uminus (Var "z")) (Const 16)),Assign "z" (Const 0),While (Binop Less (Const 1) (Binop And (Var "a") (Binop Equal (Binop LessEq (Binop Equal (Const 0) (Var "x")) (Binop Div (Const 1) (Const (-19)))) (Var "a")))) (Assign "b" (Var "z")),Assign "x" (Uminus (Uminus (Var "y"))),Assign "x" (Binop LessEq (Binop Less (Var "y") (Binop Div (Var "x") (Binop Minus (Uminus (Var "z")) (Uminus (Var "x"))))) (Var "x")),Assign "z" (Const 0),If (Const (-27)) (Assign "x" (Const 28)) (Assign "z" (Binop LessEq (Var "y") (Const 0))),Assign "x" (Uminus (Binop Div (Const 1) (Var "a")))]),
  ("y = b||0==16<=y",Assign "y" (Binop Or (Var "b") (Binop LessEq (Binop Equal (Const 0) (Const 16)) (Var "y")))),
  ("if 17 then\n  y = -6\nelse if x/0 then\n  y = -(1)\nelse if 0 then {\n  z = 0\n} else\n  y = 1",If (Const 17) (Assign "y" (Const (-6))) (If (Binop Div (Var "x") (Const 0)) (Assign "y" (Uminus (Const 1))) (If (Const 0) (Seq [Assign "z" (Const 0)]) (Assign "y" (Const 1))))),
  ("a = x+0",Assign "a" (Binop Plus (Var "x") (Const 0))),
  ("{\n  x = b;\n  if 0 then\n    z = b<-b\n  else if 2<=0 then\n    if x<=(z==1)<z/y then {} else\n      x = b\n  else\n    y = 0;\n  while -b do\n    x = x;\n  b = -(-(-(19))+-(0-b))&&(-(-4<=0)&&(b<1)+y);\n  a = a;\n  while -(1)<=z do\n    b = -((-y<z)/a);\n  x = -((1||(z||a))<(1<x&&0/y))&&(0-z&&0);\n  x = 1;\n  a = -(1);\n  y = x;\n  a = (0||0)+x;\n  if a then {\n    y = -(-(20)--z)/((3&&-(23<y))<=0)\n  } else\n    b = z;\n  z = 0-1;\n  a = b/a;\n  z = 1;\n  if b-(y&&1&&z) then {} else {\n    b = a;\n    if 8 then {} else {}\n  };\n  z = -20;\n  b = x;\n  y = 1<-(1);\n  x = 1;\n  a = 0;\n  if 0*-(-25) then {\n    x = b\n  } else {\n    y = -(7-1)\n  }\n}",Seq [Assign "x" (Var "b"),If (Const 0) (Assign "z" (Binop Less (Var "b") (Uminus (Var "b")))) (If (Binop LessEq (Const 2) (Const 0)) (If (Binop Less (Binop LessEq (Var "x") (Binop Equal (Var "z") (Const 1))) (Binop Div (Var "z") (Var "y"))) (Seq []) (Assign "x" (Var "b"))) (Assign "y" (Const 0))),While (Uminus (Var "b")) (Assign "x" (Var "x")),Assign "b" (Binop And (Uminus (Binop Plus (Uminus (Uminus (Const 19))) (Uminus (Binop Minus (Const 0) (Var "b"))))) (Binop And (Uminus (Binop LessEq (Const (-4)) (Const 0))) (Binop Plus (Binop Less (Var "b") (Const 1)) (Var "y")))),Assign "a" (Var "a"),While (Binop LessEq (Uminus (Const 1)) (Var "z")) (Assign "b" (Uminus (Binop Div (Binop Less (Uminus (Var "y")) (Var "z")) (Var "a")))),Assign "x" (Binop And (Uminus (Binop Less (Binop Or (Const 1) (Binop Or (Var "z") (Var "a"))) (Binop And (Binop Less (Const 1) (Var "x")) (Binop Div (Const 0) (Var "y"))))) (Binop And (Binop Minus (Const 0) (Var "z")) (Const 0))),Assign "x" (Const 1),Assign "a" (Uminus (Const 1)),Assign "y" (Var "x"),Assign "a" (Binop Plus (Binop Or (Const 0) (Const 0)) (Var "x")),If (Var "a") (Seq [Assign "y" (Binop Div (Uminus (Binop Minus (Uminus (Const 20)) (Uminus (Var "z")))) (Binop LessEq (Binop And (Const 3) (Uminus (Binop Less (Const 23) (Var "y")))) (Const 0)))]) (Assign "b" (Var "z")),Assign "z" (Binop Minus (Const 0) (Const 1)),Assign "a" (Binop Div (Var "b") (Var "a")),Assign "z" (Const 1),If (Binop Minus (Var "b") (Binop And (Binop And (Var "y") (Const 1)) (Var "z"))) (Seq []) (Seq [Assign "b" (Var "a"),If (Const 8) (Seq []) (Seq [])]),Assign "z" (Const (-20)),Assign "b" (Var "x"),Assign "y" (Binop Less (Const 1) (Uminus (Const 1))),Assign "x" (Const 1),Assign "a" (Const 0),If (Binop Times (Const 0) (Uminus (Const (-25)))) (Seq [Assign "x" (Var "b")]) (Seq [Assign "y" (Uminus (Binop Minus (Const 7) (Const 1)))])]),
  ("{\n  y = 9;\n  y = -(a&&0);\n  z = -(b==(1<=1));\n  z = 0;\n  x = -(-11<=(a<-x))*-(0);\n  if 1 then\n    if 0 then {} else {\n      if 1 then {} else {}\n    }\n  else\n    a = 0;\n  if -13||(7<y)/x==0||1 then\n    x = 1==x||z&&-(-16)\n  else if z==(1+-(a/0)<-(-(-y))) then\n    z = 0+0-a&&(24||y)\n  else\n    y = 17||0;\n  a = z;\n  y = a<=-(0*z+(0||1))==1;\n  if z then\n    b = a-0\n  else\n    b = -28;\n  x = b;\n  z = -z;\n  a = 0*1;\n  y = 0;\n  if a then\n    z = 29\n  else {\n    if x||-17 then\n      x = b\n    else if -(-(0)) then {} else {};\n    z = (1||b)==(0<=1)\n  };\n  x = 1\n}",Seq [Assign "y" (Const 9),Assign "y" (Uminus (Binop And (Var "a") (Const 0))),Assign "z" (Uminus (Binop Equal (Var "b") (Binop LessEq (Const 1) (Const 1)))),Assign "z" (Const 0),Assign "x" (Binop Times (Uminus (Binop LessEq (Const (-11)) (Binop Less (Var "a") (Uminus (Var "x"))))) (Uminus (Const 0))),If (Const 1) (If (Const 0) (Seq []) (Seq [If (Const 1) (Seq []) (Seq [])])) (Assign "a" (Const 0)),If (Binop Or (Binop Or (Const (-13)) (Binop Equal (Binop Div (Binop Less (Const 7) (Var "y")) (Var "x")) (Const 0))) (Const 1)) (Assign "x" (Binop Or (Binop Equal (Const 1) (Var "x")) (Binop And (Var "z") (Uminus (Const (-16)))))) (If (Binop Equal (Var "z") (Binop Less (Binop Plus (Const 1) (Uminus (Binop Div (Var "a") (Const 0)))) (Uminus (Uminus (Uminus (Var "y")))))) (Assign "z" (Binop And (Binop Minus (Binop Plus (Const 0) (Const 0)) (Var "a")) (Binop Or (Const 24) (Var "y")))) (Assign "y" (Binop Or (Const 17) (Const 0)))),Assign "a" (Var "z"),Assign "y" (Binop Equal (Binop LessEq (Var "a") (Uminus (Binop Plus (Binop Times (Const 0) (Var "z")) (Binop Or (Const 0) (Const 1))))) (Const 1)),If (Var "z") (Assign "b" (Binop Minus (Var "a") (Const 0))) (Assign "b" (Const (-28))),Assign "x" (Var "b"),Assign "z" (Uminus (Var "z")),Assign "a" (Binop Times (Const 0) (Const 1)),Assign "y" (Const 0),If (Var "a") (Assign "z" (Const 29)) (Seq [If (Binop Or (Var "x") (Const (-17))) (Assign "x" (Var "b")) (If (Uminus (Uminus (Const 0))) (Seq []) (Seq [])),Assign "z" (Binop Equal (Binop Or (Const 1) (Var "b")) (Binop LessEq (Const 0) (Const 1)))]),Assign "x" (Const 1)]),
  ("a = 1",Assign "a" (Const 1)),
  ("{\n  while a do\n    x = a\n}",Seq [While (Var "a") (Assign "x" (Var "a"))]),
  ("{\n  z = x==-7;\n  a = -22--27;\n  while z do {};\n  z = 1;\n  x = a\n}",Seq [Assign "z" (Binop Equal (Var "x") (Const (-7))),Assign "a" (Binop Minus (Const (-22)) (Const (-27))),While (Var "z") (Seq []),Assign "z" (Const 1),Assign "x" (Var "a")]),
  ("{\n  a = x*1;\n  if -(0) then\n    if x==-(0) then\n      if x then {} else {}\n    else {}\n  else if 1 then {} else\n    x = -(1);\n  a = 1;\n  x = a;\n  while -a do\n    if z then\n      a = x\n    else if z then\n      x = x\n    else\n      x = 18;\n  a = b&&1+((x<15)+b);\n  if 0 then\n    x = 0+0\n  else {};\n  b = -23<=0*(x/x);\n  x = -(z*(4/(1||z)<=(z==1)));\n  a = y;\n  if -(1) then\n    z = z\n  else if (-(30)-(0<=5-y))/x then\n    while -(-x) do {}\n  else if -(-(1)) then {} else {};\n  x = -26;\n  while y do\n    z = 0+28;\n  y = -(-(-18<z*-24<0))\n}",Seq [Assign "a" (Binop Times (Var "x") (Const 1)),If (Uminus (Const 0)) (If (Binop Equal (Var "x") (Uminus (Const 0))) (If (Var "x") (Seq []) (Seq [])) (Seq [])) (If (Const 1) (Seq []) (Assign "x" (Uminus (Const 1)))),Assign "a" (Const 1),Assign "x" (Var "a"),While (Uminus (Var "a")) (If (Var "z") (Assign "a" (Var "x")) (If (Var "z") (Assign "x" (Var "x")) (Assign "x" (Const 18)))),Assign "a" (Binop And (Var "b") (Binop Plus (Const 1) (Binop Plus (Binop Less (Var "x") (Const 15)) (Var "b")))),If (Const 0) (Assign "x" (Binop Plus (Const 0) (Const 0))) (Seq []),Assign "b" (Binop LessEq (Const (-23)) (Binop Times (Const 0) (Binop Div (Var "x") (Var "x")))),Assign "x" (Uminus (Binop Times (Var "z") (Binop LessEq (Binop Div (Const 4) (Binop Or (Const 1) (Var "z"))) (Binop Equal (Var "z") (Const 1))))),Assign "a" (Var "y"),If (Uminus (Const 1)) (Assign "z" (Var "z")) (If (Binop Div (Binop Minus (Uminus (Const 30)) (Binop LessEq (Const 0) (Binop Minus (Const 5) (Var "y")))) (Var "x")) (While (Uminus (Uminus (Var "x"))) (Seq [])) (If (Uminus (Uminus (Const 1))) (Seq []) (Seq []))),Assign "x" (Const (-26)),While (Var "y") (Assign "z" (Binop Plus (Const 0) (Const 28))),Assign "y" (Uminus (Uminus (Binop Less (Binop Less (Const (-18)) (Binop Times (Var "z") (Const (-24)))) (Const 0))))]),
  ("{\n  y = a;\n  while a do {};\n  while -b do\n    x = 5;\n  a = y;\n  a = (-y<=-13)+-(b||(a||y<-16));\n  y = x\n}",Seq [Assign "y" (Var "a"),While (Var "a") (Seq []),While (Uminus (Var "b")) (Assign "x" (Const 5)),Assign "a" (Var "y"),Assign "a" (Binop Plus (Binop LessEq (Uminus (Var "y")) (Const (-13))) (Uminus (Binop Or (Var "b") (Binop Or (Var "a") (Binop Less (Var "y") (Const (-16))))))),Assign "y" (Var "x")]),
  ("y = 0/y<-(6)",Assign "y" (Binop Less (Binop Div (Const 0) (Var "y")) (Uminus (Const 6)))),
  ("x = -(1<=0-0)/z+0",Assign "x" (Binop Plus (Binop Div (Uminus (Binop LessEq (Const 1) (Binop Minus (Const 0) (Const 0)))) (Var "z")) (Const 0))),
  ("x = -3",Assign "x" (Const (-3))),
  ("{\n  a = -(a||b&&(15<0)+(z-2));\n  if 21 then\n    y = -(0)\n  else\n    b = x;\n  y = 0;\n  y = y/z;\n  y = a;\n  if 8 then {} else\n    z = y;\n  x = 1&&z+0;\n  z = -a+-x;\n  a = -5;\n  a = a;\n  y = -(a||y);\n  y = -a;\n  a = 0;\n  x = 0;\n  x = 0;\n  if b&&1 then\n    b = x\n  else\n    y = -(-(12));\n  x = 1;\n  if b then {} else {};\n  x = 1;\n  z = x<=x+-22;\n  z = x;\n  z = z;\n  if 1*1 then\n    while 19||-22 do {}\n  else\n    a = b;\n  y = 0;\n  while -(-28*(-7<=-a)) do\n    if a then {} else if 0 then {} else {};\n  z = -(z+0);\n  a = 18;\n  z = z;\n  if y then\n    x = -(0)\n  else if a then\n    z = z\n  else {\n    a = a\n  };\n  while 1 do {};\n  a = 1\n}",Seq [Assign "a" (Uminus (Binop Or (Var "a") (Binop And (Var "b") (Binop Plus (Binop Less (Const 15) (Const 0)) (Binop Minus (Var "z") (Const 2)))))),If (Const 21) (Assign "y" (Uminus (Const 0))) (Assign "b" (Var "x")),Assign "y" (Const 0),Assign "y" (Binop Div (Var "y") (Var "z")),Assign "y" (Var "a"),If (Const 8) (Seq []) (Assign "z" (Var "y")),Assign "x" (Binop And (Const 1) (Binop Plus (Var "z") (Const 0))),Assign "z" (Binop Plus (Uminus (Var "a")) (Uminus (Var "x"))),Assign "a" (Const (-5)),Assign "a" (Var "a"),Assign "y" (Uminus (Binop Or (Var "a") (Var "y"))),Assign "y" (Uminus (Var "a")),Assign "a" (Const 0),Assign "x" (Const 0),Assign "x" (Const 0),If (Binop And (Var "b") (Const 1)) (Assign "b" (Var "x")) (Assign "y" (Uminus (Uminus (Const 12)))),Assign "x" (Const 1),If (Var "b") (Seq []) (Seq []),Assign "x" (Const 1),Assign "z" (Binop LessEq (Var "x") (Binop Plus (Var "x") (Const (-22)))),Assign "z" (Var "x"),Assign "z" (Var "z"),If (Binop Times (Const 1) (Const 1)) (While (Binop Or (Const 19) (Const (-22))) (Seq [])) (Assign "a" (Var "b")),Assign "y" (Const 0),While (Uminus (Binop Times (Const (-28)) (Binop LessEq (Const (-7)) (Uminus (Var "a"))))) (If (Var "a") (Seq []) (If (Const 0) (Seq []) (Seq []))),Assign "z" (Uminus (Binop Plus (Var "z") (Const 0))),Assign "a" (Const 18),Assign "z" (Var "z"),If (Var "y") (Assign "x" (Uminus (Const 0))) (If (Var "a") (Assign "z" (Var "z")) (Seq [Assign "a" (Var "a")])),While (Const 1) (Seq []),Assign "a" (Const 1)]),
  ("while -z do\n  z = b",While (Uminus (Var "z")) (Assign "z" (Var "b"))),
  ("x = -(z*x*b)",Assign "x" (Uminus (Binop Times (Binop Times (Var "z") (Var "x")) (Var "b")))),
  ("y = 0&&-(1)/((-27==x)+10)",Assign "y" (Binop And (Const 0) (Binop Div (Uminus (Const 1)) (Binop Plus (Binop Equal (Const (-27)) (Var "x")) (Const 10))))),
  ("if z then\n  b = 1\nelse\n  b = (-11==0)+0",If (Var "z") (Assign "b" (Const 1)) (Assign "b" (Binop Plus (Binop Equal (Const (-11)) (Const 0)) (Const 0)))),
  ("if x then\n  y = -8\nelse if a then {} else\n  b = 0--(-4)*(-(0)<1)",If (Var "x") (Assign "y" (Const (-8))) (If (Var "a") (Seq []) (Assign "b" (Binop Minus (Const 0) (Binop Times (Uminus (Const (-4))) (Binop Less (Uminus (Const 0)) (Const 1))))))),
  ("while y-(1<y==((-18||0)&&-4)) do {\n  if 10 then\n    y = z\n  else\n    a = z;\n  b = 26;\n  if z then\n    a = a\n  else\n    y = -(-(-a));\n  z = (z-1+1)*(1*x);\n  y = b\n}",While (Binop Minus (Var "y") (Binop Equal (Binop Less (Const 1) (Var "y")) (Binop And (Binop Or (Const (-18)) (Const 0)) (Const (-4))))) (Seq [If (Const 10) (Assign "y" (Var "z")) (Assign "a" (Var "z")),Assign "b" (Const 26),If (Var "z") (Assign "a" (Var "a")) (Assign "y" (Uminus (Uminus (Uminus (Var "a"))))),Assign "z" (Binop Times (Binop Plus (Binop Minus (Var "z") (Const 1)) (Const 1)) (Binop Times (Const 1) (Var "x"))),Assign "y" (Var "b")])),
  ("a = 1--b",Assign "a" (Binop Minus (Const 1) (Uminus (Var "b")))),
  ("a = -z",Assign "a" (Uminus (Var "z"))),
  ("{\n  a = x\n}",Seq [Assign "a" (Var "x")]),
  ("x = -((1+0<-22&&-(0))+a)",Assign "x" (Uminus (Binop Plus (Binop And (Binop Less (Binop Plus (Const 1) (Const 0)) (Const (-22))) (Uminus (Const 0))) (Var "a")))),
  ("a = y",Assign "a" (Var "y")),
  ("if 1 then {\n  if a then\n    if a then\n      if z then {} else {}\n    else\n      b = z&&b*0\n  else\n    b = a*b;\n  if 1==25 then\n    x = z\n  else {};\n  a = x-z\n} else {\n  if a then\n    z = a\n  else if -(0-z&&a<=b<b) then\n    y = a&&(-2||-(1)&&b)-x\n  else\n    x = -a;\n  z = -b\n}",If (Const 1) (Seq [If (Var "a") (If (Var "a") (If (Var "z") (Seq []) (Seq [])) (Assign "b" (Binop And (Var "z") (Binop Times (Var "b") (Const 0))))) (Assign "b" (Binop Times (Var "a") (Var "b"))),If (Binop Equal (Const 1) (Const 25)) (Assign "x" (Var "z")) (Seq []),Assign "a" (Binop Minus (Var "x") (Var "z"))]) (Seq [If (Var "a") (Assign "z" (Var "a")) (If (Uminus (Binop And (Binop Minus (Const 0) (Var "z")) (Binop Less (Binop LessEq (Var "a") (Var "b")) (Var "b")))) (Assign "y" (Binop And (Var "a") (Binop Minus (Binop Or (Const (-2)) (Binop And (Uminus (Const 1)) (Var "b"))) (Var "x")))) (Assign "x" (Uminus (Var "a")))),Assign "z" (Uminus (Var "b"))])),
  ("a = (16<=a&&0)+(b==7-b)",Assign "a" (Binop Plus (Binop And (Binop LessEq (Const 16) (Var "a")) (Const 0)) (Binop Equal (Var "b") (Binop Minus (Const 7) (Var "b"))))),
  ("z = y",Assign "z" (Var "y")),
  ("if a/x*a then {\n  while b do {};\n  while 0 do\n    x = y;\n  if 24 then\n    a = 0\n  else {\n    if a then {} else {}\n  };\n  if (y<=((-5/a||1)==b))-(y||0) then {} else {}\n} else {\n  while z/-y do\n    while 0 do {};\n  a = y<=-11;\n  y = 1\n}",If (Binop Times (Binop Div (Var "a") (Var "x")) (Var "a")) (Seq [While (Var "b") (Seq []),While (Const 0) (Assign "x" (Var "y")),If (Const 24) (Assign "a" (Const 0)) (Seq [If (Var "a") (Seq []) (Seq [])]),If (Binop Minus (Binop LessEq (Var "y") (Binop Equal (Binop Or (Binop Div (Const (-5)) (Var "a")) (Const 1)) (Var "b"))) (Binop Or (Var "y") (Const 0))) (Seq []) (Seq [])]) (Seq [While (Binop Div (Var "z") (Uminus (Var "y"))) (While (Const 0) (Seq [])),Assign "a" (Binop LessEq (Var "y") (Const (-11))),Assign "y" (Const 1)])),
  ("{\n  if -13 then\n    z = 20<b\n  else if x+0 then {\n    y = b\n  } else if y+y<=y*-26 then {} else\n    b = x;\n  b = z;\n  while -a==0 do {\n    a = -28\n  };\n  while 1 do {\n    y = z\n  };\n  if 1 then\n    z = x\n  else\n    a = a;\n  z = 1;\n  while z do\n    while x&&x do\n      y = z;\n  z = 1;\n  b = b;\n  if x then\n    a = b\n  else\n    x = x&&(z<=1&&-(0));\n  z = a\n}",Seq [If (Const (-13)) (Assign "z" (Binop Less (Const 20) (Var "b"))) (If (Binop Plus (Var "x") (Const 0)) (Seq [Assign "y" (Var "b")]) (If (Binop LessEq (Binop Plus (Var "y") (Var "y")) (Binop Times (Var "y") (Const (-26)))) (Seq []) (Assign "b" (Var "x")))),Assign "b" (Var "z"),While (Binop Equal (Uminus (Var "a")) (Const 0)) (Seq [Assign "a" (Const (-28))]),While (Const 1) (Seq [Assign "y" (Var "z")]),If (Const 1) (Assign "z" (Var "x")) (Assign "a" (Var "a")),Assign "z" (Const 1),While (Var "z") (While (Binop And (Var "x") (Var "x")) (Assign "y" (Var "z"))),Assign "z" (Const 1),Assign "b" (Var "b"),If (Var "x") (Assign "a" (Var "b")) (Assign "x" (Binop And (Var "x") (Binop And (Binop LessEq (Var "z") (Const 1)) (Uminus (Const 0))))),Assign "z" (Var "a")]),
  ("a = 1<x",Assign "a" (Binop Less (Const 1) (Var "x"))),
  ("while y do\n  while 15 do {\n    y = 0;\n    x = 13\n  }",While (Var "y") (While (Const 15) (Seq [Assign "y" (Const 0),Assign "x" (Const 13)]))),
  ("if b then\n  y = 0\nelse\n  x = a",If (Var "b") (Assign "y" (Const 0)) (Assign "x" (Var "a"))),
  ("if 1 then\n  if x then\n    a = -(1)\n  else\n    x = -1&&-7\nelse\n  y = 0",If (Const 1) (If (Var "x") (Assign "a" (Uminus (Const 1))) (Assign "x" (Binop And (Const (-1)) (Const (-7))))) (Assign "y" (Const 0))),
  ("while a do\n  if -(-(0))<=a then\n    while -z do\n      z = a\n  else {}",While (Var "a") (If (Binop LessEq (Uminus (Uminus (Const 0))) (Var "a")) (While (Uminus (Var "z")) (Assign "z" (Var "a"))) (Seq []))),
  ("{\n  z = 0;\n  a = x;\n  y = 4*z+-(-y);\n  if a&&0 then\n    while 0 do {}\n  else {};\n  a = z;\n  b = 1;\n  a = -27;\n  if -15 then\n    a = b\n  else {\n    a = -(1)<-15&&(-(-10)||-1)\n  };\n  a = b;\n  a = b;\n  a = -6<(0+0-(20<=a)<=(z&&-12)*-y)/-(-(1));\n  z = a;\n  y = a;\n  a = x;\n  b = x<0;\n  z = 0;\n  if y&&15 then\n    if y then {} else {}\n  else if -y then {} else {};\n  if (-28-b<1)+-a then\n    if -(-(-(25)))&&y&&z then {} else {}\n  else\n    b = x;\n  x = y<(x||1);\n  y = x;\n  x = 0;\n  b = -11-0;\n  y = (z&&a<=1)--29;\n  if b/b then\n    a = y\n  else\n    y = a;\n  if -30 then\n    if a then {} else {}\n  else\n    while 0 do {};\n  b = 0;\n  x = 0\n}",Seq [Assign "z" (Const 0),Assign "a" (Var "x"),Assign "y" (Binop Plus (Binop Times (Const 4) (Var "z")) (Uminus (Uminus (Var "y")))),If (Binop And (Var "a") (Const 0)) (While (Const 0) (Seq [])) (Seq []),Assign "a" (Var "z"),Assign "b" (Const 1),Assign "a" (Const (-27)),If (Const (-15)) (Assign "a" (Var "b")) (Seq [Assign "a" (Binop And (Binop Less (Uminus (Const 1)) (Const (-15))) (Binop Or (Uminus (Const (-10))) (Const (-1))))]),Assign "a" (Var "b"),Assign "a" (Var "b"),Assign "a" (Binop Less (Const (-6)) (Binop Div (Binop LessEq (Binop Minus (Binop Plus (Const 0) (Const 0)) (Binop LessEq (Const 20) (Var "a"))) (Binop Times (Binop And (Var "z") (Const (-12))) (Uminus (Var "y")))) (Uminus (Uminus (Const 1))))),Assign "z" (Var "a"),Assign "y" (Var "a"),Assign "a" (Var "x"),Assign "b" (Binop Less (Var "x") (Const 0)),Assign "z" (Const 0),If (Binop And (Var "y") (Const 15)) (If (Var "y") (Seq []) (Seq [])) (If (Uminus (Var "y")) (Seq []) (Seq [])),If (Binop Plus (Binop Less (Binop Minus (Const (-28)) (Var "b")) (Const 1)) (Uminus (Var "a"))) (If (Binop And (Binop And (Uminus (Uminus (Uminus (Const 25)))) (Var "y")) (Var "z")) (Seq []) (Seq [])) (Assign "b" (Var "x")),Assign "x" (Binop Less (Var "y") (Binop Or (Var "x") (Const 1))),Assign "y" (Var "x"),Assign "x" (Const 0),Assign "b" (Binop Minus (Const (-11)) (Const 0)),Assign "y" (Binop Minus (Binop And (Var "z") (Binop LessEq (Var "a") (Const 1))) (Const (-29))),If (Binop Div (Var "b") (Var "b")) (Assign "a" (Var "y")) (Assign "y" (Var "a")),If (Const (-30)) (If (Var "a") (Seq []) (Seq [])) (While (Const 0) (Seq [])),Assign "b" (Const 0),Assign "x" (Const 0)]),
  ("if 0 then\n  if (x+b)/(a*(b==1)+-(0)&&0) then\n    if y then {} else {}\n  else {\n    while x do {}\n  }\nelse\n  x = -a",If (Const 0) (If (Binop Div (Binop Plus (Var "x") (Var "b")) (Binop And (Binop Plus (Binop Times (Var "a") (Binop Equal (Var "b") (Const 1))) (Uminus (Const 0))) (Const 0))) (If (Var "y") (Seq []) (Seq [])) (Seq [While (Var "x") (Seq [])])) (Assign "x" (Uminus (Var "a")))),
  ("{\n  z = 30;\n  b = 1||a||z||-(23)<=0;\n  if 0 then\n    x = 1\n  else\n    while -(b/1<=((y<21||0+0)==(0||27))) do\n      if z then {} else {};\n  if -27 then\n    b = ((b&&y)<(0==z))*-(0)\n  else\n    x = a+-y;\n  if (a||z)--30 then\n    y = b\n  else {};\n  if (-x<=y)*-(b/-(1)) then\n    a = -(-(-(1==a)))\n  else\n    while 1-a do {};\n  a = 1;\n  x = -1;\n  z = x<=-14;\n  while 1 do {};\n  y = a;\n  while 1 do\n    y = z;\n  z = z;\n  if -(-z)==(b<-(b<26)) then\n    x = z\n  else\n    while z do\n      a = -(1);\n  if -(x-(a+b))||z then\n    x = b&&1\n  else\n    b = a/-18+1;\n  x = 0;\n  b = -13;\n  while 0<a do {};\n  z = 0*1;\n  if y*-7 then {} else {};\n  if 0 then\n    a = b\n  else {};\n  z = -(-(0<=0))/1;\n  if b then {\n    if -(-y) then {} else\n      z = x\n  } else if 1 then\n    a = 1\n  else\n    while -b do\n      while -a<z do {}\n}",Seq [Assign "z" (Const 30),Assign "b" (Binop Or (Binop Or (Binop Or (Const 1) (Var "a")) (Var "z")) (Binop LessEq (Uminus (Const 23)) (Const 0))),If (Const 0) (Assign "x" (Const 1)) (While (Uminus (Binop LessEq (Binop Div (Var "b") (Const 1)) (Binop Equal (Binop Or (Binop Less (Var "y") (Const 21)) (Binop Plus (Const 0) (Const 0))) (Binop Or (Const 0) (Const 27))))) (If (Var "z") (Seq []) (Seq []))),If (Const (-27)) (Assign "b" (Binop Times (Binop Less (Binop And (Var "b") (Var "y")) (Binop Equal (Const 0) (Var "z"))) (Uminus (Const 0)))) (Assign "x" (Binop Plus (Var "a") (Uminus (Var "y")))),If (Binop Minus (Binop Or (Var "a") (Var "z")) (Const (-30))) (Assign "y" (Var "b")) (Seq []),If (Binop Times (Binop LessEq (Uminus (Var "x")) (Var "y")) (Uminus (Binop Div (Var "b") (Uminus (Const 1))))) (Assign "a" (Uminus (Uminus (Uminus (Binop Equal (Const 1) (Var "a")))))) (While (Binop Minus (Const 1) (Var "a")) (Seq [])),Assign "a" (Const 1),Assign "x" (Const (-1)),Assign "z" (Binop LessEq (Var "x") (Const (-14))),While (Const 1) (Seq []),Assign "y" (Var "a"),While (Const 1) (Assign "y" (Var "z")),Assign "z" (Var "z"),If (Binop Equal (Uminus (Uminus (Var "z"))) (Binop Less (Var "b") (Uminus (Binop Less (Var "b") (Const 26))))) (Assign "x" (Var "z")) (While (Var "z") (Assign "a" (Uminus (Const 1)))),If (Binop Or (Uminus (Binop Minus (Var "x") (Binop Plus (Var "a") (Var "b")))) (Var "z")) (Assign "x" (Binop And (Var "b") (Const 1))) (Assign "b" (Binop Plus (Binop Div (Var "a") (Const (-18))) (Const 1))),Assign "x" (Const 0),Assign "b" (Const (-13)),While (Binop Less (Const 0) (Var "a")) (Seq []),Assign "z" (Binop Times (Const 0) (Const 1)),If (Binop Times (Var "y") (Const (-7))) (Seq []) (Seq []),If (Const 0) (Assign "a" (Var "b")) (Seq []),Assign "z" (Binop Div (Uminus (Uminus (Binop LessEq (Const 0) (Const 0)))) (Const 1)),If (Var "b") (Seq [If (Uminus (Uminus (Var "y"))) (Seq []) (Assign "z" (Var "x"))]) (If (Const 1) (Assign "a" (Const 1)) (While (Uminus (Var "b")) (While (Binop Less (Uminus (Var "a")) (Var "z")) (Seq []))))]),
  ("{\n  y = -(a<=(z<=-y)+1);\n  x = y;\n  if 1 then\n    x = x\n  else if x&&z then\n    if a then {} else {}\n  else {};\n  z = y;\n  if y then {} else\n    while z do\n      z = y-15--(x<0)||0;\n  while 1==16 do {};\n  b = a;\n  if b<a then {} else\n    a = x;\n  while 15*z do\n    if x==0 then {} else {};\n  if x*b then {} else\n    z = b+b;\n  z = 8;\n  a = 0;\n  b = x;\n  z = -x<=(-(-7)||z<=-22&&y)<=(1/z<0<=(2||-3))/b;\n  y = -z;\n  if -(0) then\n    if -21 then {} else {}\n  else\n    a = y;\n  a = (-(1-a)<-(-x))+y;\n  if z<a then {} else {};\n  a = a;\n  b = x;\n  if a then\n    b = -8\n  else if x-z then\n    z = 22\n  else {};\n  if x then {} else if -(-(-29==0)) then\n    if 1 then\n      x = y\n    else if 0 then {} else {}\n  else\n    b = -28;\n  b = z;\n  b = b<=(z==-a);\n  a = -(20);\n  y = y;\n  if x+-15||0==z then\n    if a then {} else if b-0 then {} else {}\n  else {};\n  x = 0;\n  y = 1;\n  b = x;\n  b = -x;\n  a = 0&&(-b&&1);\n  b = 0;\n  if b then\n    z = -(0)\n  else\n    z = z;\n  if z then\n    if x==-(0) then {} else\n      z = y\n  else\n    b = (30--(16))/(y&&(1||0)/1);\n  x = -(1);\n  a = 1;\n  z = b;\n  x = 0;\n  b = -(-x)&&x;\n  while z==0&&-17 do\n    if 4 then\n      b = -(-y<=-(0))&&10\n    else {\n      z = 0\n    }\n}",Seq [Assign "y" (Uminus (Binop LessEq (Var "a") (Binop Plus (Binop LessEq (Var "z") (Uminus (Var "y"))) (Const 1)))),Assign "x" (Var "y"),If (Const 1) (Assign "x" (Var "x")) (If (Binop And (Var "x") (Var "z")) (If (Var "a") (Seq []) (Seq [])) (Seq [])),Assign "z" (Var "y"),If (Var "y") (Seq []) (While (Var "z") (Assign "z" (Binop Or (Binop Minus (Binop Minus (Var "y") (Const 15)) (Uminus (Binop Less (Var "x") (Const 0)))) (Const 0)))),While (Binop Equal (Const 1) (Const 16)) (Seq []),Assign "b" (Var "a"),If (Binop Less (Var "b") (Var "a")) (Seq []) (Assign "a" (Var "x")),While (Binop Times (Const 15) (Var "z")) (If (Binop Equal (Var "x") (Const 0)) (Seq []) (Seq [])),If (Binop Times (Var "x") (Var "b")) (Seq []) (Assign "z" (Binop Plus (Var "b") (Var "b"))),Assign "z" (Const 8),Assign "a" (Const 0),Assign "b" (Var "x"),Assign "z" (Binop LessEq (Binop LessEq (Uminus (Var "x")) (Binop Or (Uminus (Const (-7))) (Binop And (Binop LessEq (Var "z") (Const (-22))) (Var "y")))) (Binop Div (Binop LessEq (Binop Less (Binop Div (Const 1) (Var "z")) (Const 0)) (Binop Or (Const 2) (Const (-3)))) (Var "b"))),Assign "y" (Uminus (Var "z")),If (Uminus (Const 0)) (If (Const (-21)) (Seq []) (Seq [])) (Assign "a" (Var "y")),Assign "a" (Binop Plus (Binop Less (Uminus (Binop Minus (Const 1) (Var "a"))) (Uminus (Uminus (Var "x")))) (Var "y")),If (Binop Less (Var "z") (Var "a")) (Seq []) (Seq []),Assign "a" (Var "a"),Assign "b" (Var "x"),If (Var "a") (Assign "b" (Const (-8))) (If (Binop Minus (Var "x") (Var "z")) (Assign "z" (Const 22)) (Seq [])),If (Var "x") (Seq []) (If (Uminus (Uminus (Binop Equal (Const (-29)) (Const 0)))) (If (Const 1) (Assign "x" (Var "y")) (If (Const 0) (Seq []) (Seq []))) (Assign "b" (Const (-28)))),Assign "b" (Var "z"),Assign "b" (Binop LessEq (Var "b") (Binop Equal (Var "z") (Uminus (Var "a")))),Assign "a" (Uminus (Const 20)),Assign "y" (Var "y"),If (Binop Or (Binop Plus (Var "x") (Const (-15))) (Binop Equal (Const 0) (Var "z"))) (If (Var "a") (Seq []) (If (Binop Minus (Var "b") (Const 0)) (Seq []) (Seq []))) (Seq []),Assign "x" (Const 0),Assign "y" (Const 1),Assign "b" (Var "x"),Assign "b" (Uminus (Var "x")),Assign "a" (Binop And (Const 0) (Binop And (Uminus (Var "b")) (Const 1))),Assign "b" (Const 0),If (Var "b") (Assign "z" (Uminus (Const 0))) (Assign "z" (Var "z")),If (Var "z") (If (Binop Equal (Var "x") (Uminus (Const 0))) (Seq []) (Assign "z" (Var "y"))) (Assign "b" (Binop Div (Binop Minus (Const 30) (Uminus (Const 16))) (Binop And (Var "y") (Binop Div (Binop Or (Const 1) (Const 0)) (Const 1))))),Assign "x" (Uminus (Const 1)),Assign "a" (Const 1),Assign "z" (Var "b"),Assign "x" (Const 0),Assign "b" (Binop And (Uminus (Uminus (Var "x"))) (Var "x")),While (Binop And (Binop Equal (Var "z") (Const 0)) (Const (-17))) (If (Const 4) (Assign "b" (Binop And (Uminus (Binop LessEq (Uminus (Var "y")) (Uminus (Const 0)))) (Const 10))) (Seq [Assign "z" (Const 0)]))]),
  ("{\n  z = -b;\n  if -(0) then\n    z = -(a&&0)/(1==0)\n  else\n    y = -(0)||-b/(1==y);\n  x = a;\n  z = 28-z;\n  y = b;\n  z = -b;\n  if -(0) then\n    x = x\n  else\n    a = 0;\n  x = 1;\n  x = (1-1)/a<(0&&1);\n  if -b then\n    if y then\n      x = (a<25)+x\n    else {}\n  else\n    z = z<x&&y;\n  a = z;\n  if -29 then {} else {\n    if -6-(1+y) then {} else {}\n  };\n  a = 0;\n  z = a;\n  y = -(0);\n  z = z;\n  z = b;\n  z = 1==(x==y-x<y&&28==1*z/-(0));\n  if y then\n    if -a then {} else\n      z = 0\n  else {};\n  z = 14;\n  y = b;\n  if x then\n    if 1 then {} else {}\n  else\n    x = z;\n  b = b;\n  y = -(-a);\n  if b/b<-(-(30))+a+z then {\n    z = 24\n  } else\n    a = b\n}",Seq [Assign "z" (Uminus (Var "b")),If (Uminus (Const 0)) (Assign "z" (Binop Div (Uminus (Binop And (Var "a") (Const 0))) (Binop Equal (Const 1) (Const 0)))) (Assign "y" (Binop Or (Uminus (Const 0)) (Binop Div (Uminus (Var "b")) (Binop Equal (Const 1) (Var "y"))))),Assign "x" (Var "a"),Assign "z" (Binop Minus (Const 28) (Var "z")),Assign "y" (Var "b"),Assign "z" (Uminus (Var "b")),If (Uminus (Const 0)) (Assign "x" (Var "x")) (Assign "a" (Const 0)),Assign "x" (Const 1),Assign "x" (Binop Less (Binop Div (Binop Minus (Const 1) (Const 1)) (Var "a")) (Binop And (Const 0) (Const 1))),If (Uminus (Var "b")) (If (Var "y") (Assign "x" (Binop Plus (Binop Less (Var "a") (Const 25)) (Var "x"))) (Seq [])) (Assign "z" (Binop And (Binop Less (Var "z") (Var "x")) (Var "y"))),Assign "a" (Var "z"),If (Const (-29)) (Seq []) (Seq [If (Binop Minus (Const (-6)) (Binop Plus (Const 1) (Var "y"))) (Seq []) (Seq [])]),Assign "a" (Const 0),Assign "z" (Var "a"),Assign "y" (Uminus (Const 0)),Assign "z" (Var "z"),Assign "z" (Var "b"),Assign "z" (Binop Equal (Const 1) (Binop And (Binop Less (Binop Equal (Var "x") (Binop Minus (Var "y") (Var "x"))) (Var "y")) (Binop Equal (Const 28) (Binop Div (Binop Times (Const 1) (Var "z")) (Uminus (Const 0)))))),If (Var "y") (If (Uminus (Var "a")) (Seq []) (Assign "z" (Const 0))) (Seq []),Assign "z" (Const 14),Assign "y" (Var "b"),If (Var "x") (If (Const 1) (Seq []) (Seq [])) (Assign "x" (Var "z")),Assign "b" (Var "b"),Assign "y" (Uminus (Uminus (Var "a"))),If (Binop Less (Binop Div (Var "b") (Var "b")) (Binop Plus (Binop Plus (Uminus (Uminus (Const 30))) (Var "a")) (Var "z"))) (Seq [Assign "z" (Const 24)]) (Assign "a" (Var "b"))]),
  ("while a do {\n  b = 0\n}",While (Var "a") (Seq [Assign "b" (Const 0)])),
  ("if 25-(b||1)||a then\n  x = 1-(a-((0&&1)+-(0)))*-8\nelse\n  x = 0",If (Binop Or (Binop Minus (Const 25) (Binop Or (Var "b") (Const 1))) (Var "a")) (Assign "x" (Binop Minus (Const 1) (Binop Times (Binop Minus (Var "a") (Binop Plus (Binop And (Const 0) (Const 1)) (Uminus (Const 0)))) (Const (-8))))) (Assign "x" (Const 0))),
  ("{\n  x = -(b<0<=y);\n  if b then\n    y = x\n  else {\n    if -y then {} else {}\n  };\n  if -(y==z) then\n    if 1==0 then\n      while -(0)-16 do {}\n    else if 4 then {} else {}\n  else\n    b = a;\n  z = 0<=(x<=b)==(a<=-14);\n  x = 0;\n  if 1 then\n    y = -(1==y)\n  else {};\n  z = 0;\n  x = a;\n  a = a==-(1);\n  if 1 then\n    z = b\n  else {};\n  a = y-0;\n  if 1 then {} else {};\n  while z<=-7 do\n    if -z then\n      a = 29\n    else {}\n}",Seq [Assign "x" (Uminus (Binop LessEq (Binop Less (Var "b") (Const 0)) (Var "y"))),If (Var "b") (Assign "y" (Var "x")) (Seq [If (Uminus (Var "y")) (Seq []) (Seq [])]),If (Uminus (Binop Equal (Var "y") (Var "z"))) (If (Binop Equal (Const 1) (Const 0)) (While (Binop Minus (Uminus (Const 0)) (Const 16)) (Seq [])) (If (Const 4) (Seq []) (Seq []))) (Assign "b" (Var "a")),Assign "z" (Binop Equal (Binop LessEq (Const 0) (Binop LessEq (Var "x") (Var "b"))) (Binop LessEq (Var "a") (Const (-14)))),Assign "x" (Const 0),If (Const 1) (Assign "y" (Uminus (Binop Equal (Const 1) (Var "y")))) (Seq []),Assign "z" (Const 0),Assign "x" (Var "a"),Assign "a" (Binop Equal (Var "a") (Uminus (Const 1))),If (Const 1) (Assign "z" (Var "b")) (Seq []),Assign "a" (Binop Minus (Var "y") (Const 0)),If (Const 1) (Seq []) (Seq []),While (Binop LessEq (Var "z") (Const (-7))) (If (Uminus (Var "z")) (Assign "a" (Const 29)) (Seq []))]),
  ("x = -2",Assign "x" (Const (-2))),
  ("{\n  x = 0;\n  x = a;\n  z = 1\n}",Seq [Assign "x" (Const 0),Assign "x" (Var "a"),Assign "z" (Const 1)]),
  ("{\n  x = 0;\n  if 0 then\n    x = 0*x\n  else\n    a = a;\n  while -24 do\n    if x then\n      b = 0&&-(0)\n    else {\n      x = 0\n    };\n  while z do {\n    while 0 do {}\n  };\n  z = y;\n  y = 1;\n  z = x\n}",Seq [Assign "x" (Const 0),If (Const 0) (Assign "x" (Binop Times (Const 0) (Var "x"))) (Assign "a" (Var "a")),While (Const (-24)) (If (Var "x") (Assign "b" (Binop And (Const 0) (Uminus (Const 0)))) (Seq [Assign "x" (Const 0)])),While (Var "z") (Seq [While (Const 0) (Seq [])]),Assign "z" (Var "y"),Assign "y" (Const 1),Assign "z" (Var "x")]),
  ("{\n  a = -12;\n  while a<y==(-(-z)/1&&1) do\n    if x then\n      while (-24==(-15==z))+(-(-(-7))--y) do\n        b = (z||a)<a\n    else if x then {} else if 0 then {} else {}\n}",Seq [Assign "a" (Const (-12)),While (Binop Equal (Binop Less (Var "a") (Var "y")) (Binop And (Binop Div (Uminus (Uminus (Var "z"))) (Const 1)) (Const 1))) (If (Var "x") (While (Binop Plus (Binop Equal (Const (-24)) (Binop Equal (Const (-15)) (Var "z"))) (Binop Minus (Uminus (Uminus (Const (-7)))) (Uminus (Var "y")))) (Assign "b" (Binop Less (Binop Or (Var "z") (Var "a")) (Var "a")))) (If (Var "x") (Seq []) (If (Const 0) (Seq []) (Seq []))))]),
  ("x = 0-(x<-(-(1)))",Assign "x" (Binop Minus (Const 0) (Binop Less (Var "x") (Uminus (Uminus (Const 1)))))),
  ("while 1 do {\n  if 9 then\n    y = z\n  else {};\n  if x then\n    z = 1==(-25<=1)\n  else if 0 then {} else {};\n  z = z&&a;\n  a = z;\n  b = x;\n  while y-x<y*(0||z+-24)/((1==z)/(-11/y)) do\n    a = 0\n}",While (Const 1) (Seq [If (Const 9) (Assign "y" (Var "z")) (Seq []),If (Var "x") (Assign "z" (Binop Equal (Const 1) (Binop LessEq (Const (-25)) (Const 1)))) (If (Const 0) (Seq []) (Seq [])),Assign "z" (Binop And (Var "z") (Var "a")),Assign "a" (Var "z"),Assign "b" (Var "x"),While (Binop Less (Binop Minus (Var "y") (Var "x")) (Binop Div (Binop Times (Var "y") (Binop Or (Const 0) (Binop Plus (Var "z") (Const (-24))))) (Binop Div (Binop Equal (Const 1) (Var "z")) (Binop Div (Const (-11)) (Var "y"))))) (Assign "a" (Const 0))])),
  ("b = z*1",Assign "b" (Binop Times (Var "z") (Const 1))),
  ("{\n  while z do\n    y = z;\n  y = z;\n  if -(((0<(1==1))-(-14<=y<=b*-16))*0) then\n    b = a||18\n  else {};\n  y = 1;\n  if (0==1)-x then\n    b = -(-16)*-7<=0\n  else\n    z = z;\n  y = -y;\n  x = -26/(z/a==-(y-0)==-b);\n  a = 0&&y||1/(0&&a)*z;\n  z = z*7+-(1);\n  if 1 then\n    if x then\n      y = -29\n    else {}\n  else\n    z = x;\n  a = z;\n  if z==x then {\n    z = 1\n  } else {\n    x = (b&&(a||z))-(0&&z*b==(a&&b)&&x)\n  };\n  if 0 then\n    b = a\n  else {};\n  b = b+(a-(z==1))+a<=-(0+a);\n  a = x;\n  z = 1+0;\n  while -(-(0)) do\n    z = 23\n}",Seq [While (Var "z") (Assign "y" (Var "z")),Assign "y" (Var "z"),If (Uminus (Binop Times (Binop Minus (Binop Less (Const 0) (Binop Equal (Const 1) (Const 1))) (Binop LessEq (Binop LessEq (Const (-14)) (Var "y")) (Binop Times (Var "b") (Const (-16))))) (Const 0))) (Assign "b" (Binop Or (Var "a") (Const 18))) (Seq []),Assign "y" (Const 1),If (Binop Minus (Binop Equal (Const 0) (Const 1)) (Var "x")) (Assign "b" (Binop LessEq (Binop Times (Uminus (Const (-16))) (Const (-7))) (Const 0))) (Assign "z" (Var "z")),Assign "y" (Uminus (Var "y")),Assign "x" (Binop Div (Const (-26)) (Binop Equal (Binop Equal (Binop Div (Var "z") (Var "a")) (Uminus (Binop Minus (Var "y") (Const 0)))) (Uminus (Var "b")))),Assign "a" (Binop Or (Binop And (Const 0) (Var "y")) (Binop Times (Binop Div (Const 1) (Binop And (Const 0) (Var "a"))) (Var "z"))),Assign "z" (Binop Plus (Binop Times (Var "z") (Const 7)) (Uminus (Const 1))),If (Const 1) (If (Var "x") (Assign "y" (Const (-29))) (Seq [])) (Assign "z" (Var "x")),Assign "a" (Var "z"),If (Binop Equal (Var "z") (Var "x")) (Seq [Assign "z" (Const 1)]) (Seq [Assign "x" (Binop Minus (Binop And (Var "b") (Binop Or (Var "a") (Var "z"))) (Binop And (Binop And (Const 0) (Binop Equal (Binop Times (Var "z") (Var "b")) (Binop And (Var "a") (Var "b")))) (Var "x")))]),If (Const 0) (Assign "b" (Var "a")) (Seq []),Assign "b" (Binop LessEq (Binop Plus (Binop Plus (Var "b") (Binop Minus (Var "a") (Binop Equal (Var "z") (Const 1)))) (Var "a")) (Uminus (Binop Plus (Const 0) (Var "a")))),Assign "a" (Var "x"),Assign "z" (Binop Plus (Const 1) (Const 0)),While (Uminus (Uminus (Const 0))) (Assign "z" (Const 23))]),
  ("if 0 then\n  while 30 do\n    x = 18\nelse\n  y = b",If (Const 0) (While (Const 30) (Assign "x" (Const 18))) (Assign "y" (Var "b"))),
  ("while 0*x do {\n  while -23 do\n    a = (a&&z)-1;\n  z = b-14<=-18;\n  z = b;\n  y = y;\n  y = (a<(z&&(z&&1))||0*z+0)<b;\n  a = -a\n}",While (Binop Times (Const 0) (Var "x")) (Seq [While (Const (-23)) (Assign "a" (Binop Minus (Binop And (Var "a") (Var "z")) (Const 1))),Assign "z" (Binop LessEq (Binop Minus (Var "b") (Const 14)) (Const (-18))),Assign "z" (Var "b"),Assign "y" (Var "y"),Assign "y" (Binop Less (Binop Or (Binop Less (Var "a") (Binop And (Var "z") (Binop And (Var "z") (Const 1)))) (Binop Plus (Binop Times (Const 0) (Var "z")) (Const 0))) (Var "b")),Assign "a" (Uminus (Var "a"))])),
  ("{\n  while 0*0/1&&1 do\n    z = y;\n  while 1&&1*1+1 do\n    x = -b;\n  z = -y||0;\n  y = 1;\n  x = b;\n  y = 1;\n  a = z;\n  a = 4;\n  b = -(0);\n  if 0 then\n    if z then\n      a = a\n    else\n      y = -(-(0))\n  else {};\n  a = x*(1||x||b)+y;\n  if 1 then\n    if -21 then {} else if x+((1||-(0&&0))&&-(x*(1+b))) then {} else {}\n  else {\n    if b then {} else {}\n  };\n  x = (a==1+b)*-z;\n  while y do\n    z = x;\n  if z then\n    while 1||y*1==1<=0||-11 do {}\n  else {};\n  x = 1;\n  y = 1;\n  a = x;\n  if -z||b then\n    b = b\n  else\n    a = -(1);\n  z = 1==1\n}",Seq [While (Binop And (Binop Div (Binop Times (Const 0) (Const 0)) (Const 1)) (Const 1)) (Assign "z" (Var "y")),While (Binop And (Const 1) (Binop Plus (Binop Times (Const 1) (Const 1)) (Const 1))) (Assign "x" (Uminus (Var "b"))),Assign "z" (Binop Or (Uminus (Var "y")) (Const 0)),Assign "y" (Const 1),Assign "x" (Var "b"),Assign "y" (Const 1),Assign "a" (Var "z"),Assign "a" (Const 4),Assign "b" (Uminus (Const 0)),If (Const 0) (If (Var "z") (Assign "a" (Var "a")) (Assign "y" (Uminus (Uminus (Const 0))))) (Seq []),Assign "a" (Binop Plus (Binop Times (Var "x") (Binop Or (Binop Or (Const 1) (Var "x")) (Var "b"))) (Var "y")),If (Const 1) (If (Const (-21)) (Seq []) (If (Binop Plus (Var "x") (Binop And (Binop Or (Const 1) (Uminus (Binop And (Const 0) (Const 0)))) (Uminus (Binop Times (Var "x") (Binop Plus (Const 1) (Var "b")))))) (Seq []) (Seq []))) (Seq [If (Var "b") (Seq []) (Seq [])]),Assign "x" (Binop Times (Binop Equal (Var "a") (Binop Plus (Const 1) (Var "b"))) (Uminus (Var "z"))),While (Var "y") (Assign "z" (Var "x")),If (Var "z") (While (Binop Or (Binop Or (Const 1) (Binop LessEq (Binop Equal (Binop Times (Var "y") (Const 1)) (Const 1)) (Const 0))) (Const (-11))) (Seq [])) (Seq []),Assign "x" (Const 1),Assign "y" (Const 1),Assign "a" (Var "x"),If (Binop Or (Uminus (Var "z")) (Var "b")) (Assign "b" (Var "b")) (Assign "a" (Uminus (Const 1))),Assign "z" (Binop Equal (Const 1) (Const 1))]),
  ("b = 12&&29",Assign "b" (Binop And (Const 12) (Const 29))),
  ("a = z",Assign "a" (Var "z")),
  ("while a do {\n  if x then\n    z = -16\n  else {};\n  if -5 then {} else {};\n  while (-(24*1)||0)*(x==(1&&6*-x)) do\n    if 0 then\n      a = (b+-(-(0/1)))/(a*a)\n    else {};\n  z = -28<b*(-13<=-z)/1;\n  x = a\n}",While (Var "a") (Seq [If (Var "x") (Assign "z" (Const (-16))) (Seq []),If (Const (-5)) (Seq []) (Seq []),While (Binop Times (Binop Or (Uminus (Binop Times (Const 24) (Const 1))) (Const 0)) (Binop Equal (Var "x") (Binop And (Const 1) (Binop Times (Const 6) (Uminus (Var "x")))))) (If (Const 0) (Assign "a" (Binop Div (Binop Plus (Var "b") (Uminus (Uminus (Binop Div (Const 0) (Const 1))))) (Binop Times (Var "a") (Var "a")))) (Seq [])),Assign "z" (Binop Less (Const (-28)) (Binop Div (Binop Times (Var "b") (Binop LessEq (Const (-13)) (Uminus (Var "z")))) (Const 1))),Assign "x" (Var "a")])),
  ("{\n  x = 1||(0<28)*y;\n  b = z||-(-20)/20<=z;\n  z = b;\n  x = 1;\n  y = 0;\n  x = z;\n  y = -(1);\n  while -(-(0||b<=0))<(y||x/(-14<1)) do\n    b = 1;\n  y = a+1;\n  b = 0;\n  y = y||-a;\n  a = (a==1)/(0<a);\n  while -(-(23||0||x)) do\n    b = -(0*y);\n  a = 0&&x;\n  if 1 then {} else {};\n  while -(-(-z))&&0 do\n    b = b;\n  a = a;\n  b = 2;\n  y = x;\n  while a do\n    if 1 then {} else\n      while -(0) do {};\n  z = y+1*(a+-25);\n  z = 0;\n  x = 28<-(-18/1)\n}",Seq [Assign "x" (Binop Or (Const 1) (Binop Times (Binop Less (Const 0) (Const 28)) (Var "y"))),Assign "b" (Binop Or (Var "z") (Binop LessEq (Binop Div (Uminus (Const (-20))) (Const 20)) (Var "z"))),Assign "z" (Var "b"),Assign "x" (Const 1),Assign "y" (Const 0),Assign "x" (Var "z"),Assign "y" (Uminus (Const 1)),While (Binop Less (Uminus (Uminus (Binop Or (Const 0) (Binop LessEq (Var "b") (Const 0))))) (Binop Or (Var "y") (Binop Div (Var "x") (Binop Less (Const (-14)) (Const 1))))) (Assign "b" (Const 1)),Assign "y" (Binop Plus (Var "a") (Const 1)),Assign "b" (Const 0),Assign "y" (Binop Or (Var "y") (Uminus (Var "a"))),Assign "a" (Binop Div (Binop Equal (Var "a") (Const 1)) (Binop Less (Const 0) (Var "a"))),While (Uminus (Uminus (Binop Or (Binop Or (Const 23) (Const 0)) (Var "x")))) (Assign "b" (Uminus (Binop Times (Const 0) (Var "y")))),Assign "a" (Binop And (Const 0) (Var "x")),If (Const 1) (Seq []) (Seq []),While (Binop And (Uminus (Uminus (Uminus (Var "z")))) (Const 0)) (Assign "b" (Var "b")),Assign "a" (Var "a"),Assign "b" (Const 2),Assign "y" (Var "x"),While (Var "a") (If (Const 1) (Seq []) (While (Uminus (Const 0)) (Seq []))),Assign "z" (Binop Plus (Var "y") (Binop Times (Const 1) (Binop Plus (Var "a") (Const (-25))))),Assign "z" (Const 0),Assign "x" (Binop Less (Const 28) (Uminus (Binop Div (Const (-18)) (Const 1))))]),
  ("{\n  if -7 then {\n    z = a/a<0||-4+a-y\n  } else\n    b = z<x;\n  a = -(1)&&(16&&a);\n  if -((0<1||1)&&a&&-23) then\n    y = y\n  else\n    b = y-1<z;\n  a = (1||y)&&y;\n  y = 0;\n  b = 1;\n  a = z;\n  while x do\n    y = b;\n  x = 1;\n  while x do {};\n  if z then {} else\n    y = a;\n  if 0<=z||0 then\n    x = x*0&&0<=-y\n  else\n    x = -((0<1/x)-x)/z;\n  a = y<=9<=(z<=1)+a;\n  z = x\n}",Seq [If (Const (-7)) (Seq [Assign "z" (Binop Or (Binop Less (Binop Div (Var "a") (Var "a")) (Const 0)) (Binop Minus (Binop Plus (Const (-4)) (Var "a")) (Var "y")))]) (Assign "b" (Binop Less (Var "z") (Var "x"))),Assign "a" (Binop And (Uminus (Const 1)) (Binop And (Const 16) (Var "a"))),If (Uminus (Binop And (Binop And (Binop Or (Binop Less (Const 0) (Const 1)) (Const 1)) (Var "a")) (Const (-23)))) (Assign "y" (Var "y")) (Assign "b" (Binop Less (Binop Minus (Var "y") (Const 1)) (Var "z"))),Assign "a" (Binop And (Binop Or (Const 1) (Var "y")) (Var "y")),Assign "y" (Const 0),Assign "b" (Const 1),Assign "a" (Var "z"),While (Var "x") (Assign "y" (Var "b")),Assign "x" (Const 1),While (Var "x") (Seq []),If (Var "z") (Seq []) (Assign "y" (Var "a")),If (Binop Or (Binop LessEq (Const 0) (Var "z")) (Const 0)) (Assign "x" (Binop And (Binop Times (Var "x") (Const 0)) (Binop LessEq (Const 0) (Uminus (Var "y"))))) (Assign "x" (Binop Div (Uminus (Binop Minus (Binop Less (Const 0) (Binop Div (Const 1) (Var "x"))) (Var "x"))) (Var "z"))),Assign "a" (Binop LessEq (Binop LessEq (Var "y") (Const 9)) (Binop Plus (Binop LessEq (Var "z") (Const 1)) (Var "a"))),Assign "z" (Var "x")]),
  ("if 0 then {\n  a = 1\n} else {}",If (Const 0) (Seq [Assign "a" (Const 1)]) (Seq [])),
  ("y = -20||-(-10)",Assign "y" (Binop Or (Const (-20)) (Uminus (Const (-10))))),
  ("{\n  x = z+(a&&1);\n  b = 1*0;\n  x = 0;\n  z = z;\n  a = 1;\n  x = 20;\n  if -(y/1) then\n    while 0 do\n      b = (y<=-(-9))/(1+0)\n  else {};\n  b = 1;\n  while -(0&&a)+z do {};\n  z = 1;\n  a = 1;\n  y = (z&&1==a)/1/-(1);\n  a = 1;\n  b = y;\n  b = 0;\n  while y do\n    while a do\n      while z==z do\n        if 18 then {} else {};\n  x = a;\n  x = 0||-21;\n  if a&&-a*1 then\n    z = -x\n  else {\n    y = a;\n    a = 0+b==b+(y==1)\n  }\n}",Seq [Assign "x" (Binop Plus (Var "z") (Binop And (Var "a") (Const 1))),Assign "b" (Binop Times (Const 1) (Const 0)),Assign "x" (Const 0),Assign "z" (Var "z"),Assign "a" (Const 1),Assign "x" (Const 20),If (Uminus (Binop Div (Var "y") (Const 1))) (While (Const 0) (Assign "b" (Binop Div (Binop LessEq (Var "y") (Uminus (Const (-9)))) (Binop Plus (Const 1) (Const 0))))) (Seq []),Assign "b" (Const 1),While (Binop Plus (Uminus (Binop And (Const 0) (Var "a"))) (Var "z")) (Seq []),Assign "z" (Const 1),Assign "a" (Const 1),Assign "y" (Binop Div (Binop Div (Binop And (Var "z") (Binop Equal (Const 1) (Var "a"))) (Const 1)) (Uminus (Const 1))),Assign "a" (Const 1),Assign "b" (Var "y"),Assign "b" (Const 0),While (Var "y") (While (Var "a") (While (Binop Equal (Var "z") (Var "z")) (If (Const 18) (Seq []) (Seq [])))),Assign "x" (Var "a"),Assign "x" (Binop Or (Const 0) (Const (-21))),If (Binop And (Var "a") (Binop Times (Uminus (Var "a")) (Const 1))) (Assign "z" (Uminus (Var "x"))) (Seq [Assign "y" (Var "a"),Assign "a" (Binop Equal (Binop Plus (Const 0) (Var "b")) (Binop Plus (Var "b") (Binop Equal (Var "y") (Const 1))))])]),
  ("if -18 then\n  b = -27\nelse {\n  x = 1;\n  a = 0<b--a;\n  x = 0&&a\n}",If (Const (-18)) (Assign "b" (Const (-27))) (Seq [Assign "x" (Const 1),Assign "a" (Binop Less (Const 0) (Binop Minus (Var "b") (Uminus (Var "a")))),Assign "x" (Binop And (Const 0) (Var "a"))])),
  ("{\n  b = y;\n  if -(z/(y&&x))||y then {} else {\n    a = x--(b<-b--z)\n  };\n  if a then\n    if z-(1||x) then\n      while 0/a do {}\n    else if a*(8||y)-1 then\n      if a/x then {} else {}\n    else\n      a = -5\n  else if 5 then\n    z = z\n  else {};\n  b = x;\n  while -a<15 do\n    x = 1-1;\n  x = 0;\n  x = b;\n  a = 0;\n  x = 0\n}",Seq [Assign "b" (Var "y"),If (Binop Or (Uminus (Binop Div (Var "z") (Binop And (Var "y") (Var "x")))) (Var "y")) (Seq []) (Seq [Assign "a" (Binop Minus (Var "x") (Uminus (Binop Less (Var "b") (Binop Minus (Uminus (Var "b")) (Uminus (Var "z"))))))]),If (Var "a") (If (Binop Minus (Var "z") (Binop Or (Const 1) (Var "x"))) (While (Binop Div (Const 0) (Var "a")) (Seq [])) (If (Binop Minus (Binop Times (Var "a") (Binop Or (Const 8) (Var "y"))) (Const 1)) (If (Binop Div (Var "a") (Var "x")) (Seq []) (Seq [])) (Assign "a" (Const (-5))))) (If (Const 5) (Assign "z" (Var "z")) (Seq [])),Assign "b" (Var "x"),While (Binop Less (Uminus (Var "a")) (Const 15)) (Assign "x" (Binop Minus (Const 1) (Const 1))),Assign "x" (Const 0),Assign "x" (Var "b"),Assign "a" (Const 0),Assign "x" (Const 0)]),
  ("{\n  while (0||b)==a do\n    y = -30;\n  if -(0+0) then\n    a = x\n  else\n    y = 1;\n  x = z;\n  y = b-b;\n  if y==0 then\n    a = -(1)\n  else if z-x==b then\n    b = y\n  else {\n    b = y\n  };\n  y = a;\n  while a<x&&a do\n    z = 0||0;\n  y = -(1+(1/a+y/1*0));\n  x = 0+1||0;\n  a = -9;\n  while b do\n    if a then\n      a = -(-23)\n    else\n      z = 0;\n  a = y;\n  z = 0;\n  if x then\n    a = -22\n  else\n    y = a--b;\n  if x then\n    a = 1\n  else\n    while -(0) do\n      y = (b<(a==-10<-(1)))*(0==0)/-(0);\n  x = b;\n  if -(-26) then\n    y = 0\n  else\n    y = b;\n  a = x==y;\n  y = z;\n  a = -(-x);\n  if -y then\n    z = 7\n  else\n    while b do\n      a = (-(b+x*1)-(-(a&&a)<19))*(z/((z<a)/(1||-30))||z*x*-12+-z);\n  b = 2;\n  if 0 then\n    a = 0*a\n  else if -a then\n    x = y\n  else {\n    z = 1\n  }\n}",Seq [While (Binop Equal (Binop Or (Const 0) (Var "b")) (Var "a")) (Assign "y" (Const (-30))),If (Uminus (Binop Plus (Const 0) (Const 0))) (Assign "a" (Var "x")) (Assign "y" (Const 1)),Assign "x" (Var "z"),Assign "y" (Binop Minus (Var "b") (Var "b")),If (Binop Equal (Var "y") (Const 0)) (Assign "a" (Uminus (Const 1))) (If (Binop Equal (Binop Minus (Var "z") (Var "x")) (Var "b")) (Assign "b" (Var "y")) (Seq [Assign "b" (Var "y")])),Assign "y" (Var "a"),While (Binop And (Binop Less (Var "a") (Var "x")) (Var "a")) (Assign "z" (Binop Or (Const 0) (Const 0))),Assign "y" (Uminus (Binop Plus (Const 1) (Binop Plus (Binop Div (Const 1) (Var "a")) (Binop Times (Binop Div (Var "y") (Const 1)) (Const 0))))),Assign "x" (Binop Or (Binop Plus (Const 0) (Const 1)) (Const 0)),Assign "a" (Const (-9)),While (Var "b") (If (Var "a") (Assign "a" (Uminus (Const (-23)))) (Assign "z" (Const 0))),Assign "a" (Var "y"),Assign "z" (Const 0),If (Var "x") (Assign "a" (Const (-22))) (Assign "y" (Binop Minus (Var "a") (Uminus (Var "b")))),If (Var "x") (Assign "a" (Const 1)) (While (Uminus (Const 0)) (Assign "y" (Binop Div (Binop Times (Binop Less (Var "b") (Binop Less (Binop Equal (Var "a") (Const (-10))) (Uminus (Const 1)))) (Binop Equal (Const 0) (Const 0))) (Uminus (Const 0))))),Assign "x" (Var "b"),If (Uminus (Const (-26))) (Assign "y" (Const 0)) (Assign "y" (Var "b")),Assign "a" (Binop Equal (Var "x") (Var "y")),Assign "y" (Var "z"),Assign "a" (Uminus (Uminus (Var "x"))),If (Uminus (Var "y")) (Assign "z" (Const 7)) (While (Var "b") (Assign "a" (Binop Times (Binop Minus (Uminus (Binop Plus (Var "b") (Binop Times (Var "x") (Const 1)))) (Binop Less (Uminus (Binop And (Var "a") (Var "a"))) (Const 19))) (Binop Or (Binop Div (Var "z") (Binop Div (Binop Less (Var "z") (Var "a")) (Binop Or (Const 1) (Const (-30))))) (Binop Plus (Binop Times (Binop Times (Var "z") (Var "x")) (Const (-12))) (Uminus (Var "z"))))))),Assign "b" (Const 2),If (Const 0) (Assign "a" (Binop Times (Const 0) (Var "a"))) (If (Uminus (Var "a")) (Assign "x" (Var "y")) (Seq [Assign "z" (Const 1)]))]),
  ("if 0 then\n  while y do {\n    z = -y;\n    z = (y-5&&b)/b<=a\n  }\nelse\n  x = x",If (Const 0) (While (Var "y") (Seq [Assign "z" (Uminus (Var "y")),Assign "z" (Binop LessEq (Binop Div (Binop And (Binop Minus (Var "y") (Const 5)) (Var "b")) (Var "b")) (Var "a"))])) (Assign "x" (Var "x"))),
  ("{\n  a = b;\n  z = a;\n  if b then\n    z = 0+b\n  else {};\n  while -10 do {\n    y = -9;\n    y = 0*(a<1)\n  }\n}",Seq [Assign "a" (Var "b"),Assign "z" (Var "a"),If (Var "b") (Assign "z" (Binop Plus (Const 0) (Var "b"))) (Seq []),While (Const (-10)) (Seq [Assign "y" (Const (-9)),Assign "y" (Binop Times (Const 0) (Binop Less (Var "a") (Const 1)))])]),
  ("{\n  if b then\n    a = 0\n  else\n    while 1 do\n      x = 1;\n  if a==x then\n    z = z\n  else\n    y = -(-(-b)+(b||y==1)+(30<=x));\n  z = x;\n  z = z<=6;\n  z = 13;\n  y = -2;\n  y = a;\n  a = 11<b;\n  z = 1;\n  y = a;\n  if -(y||x) then\n    b = a\n  else\n    z = 0--13;\n  x = -(a-0);\n  a = 0;\n  z = -16;\n  a = y;\n  if 0-z then {} else\n    x = z*-20;\n  while z do\n    x = 0&&x;\n  if z-x then\n    while y*-y do\n      z = -13\n  else {};\n  x = x;\n  while 0 do\n    if b/b then\n      z = -a||-(-((1&&y)-(b-z)))\n    else {};\n  y = 0*0<=0;\n  b = 0<=(-(24)&&b);\n  if (0+1||a)<6 then\n    y = -(b&&z)==(z==-(a+b))\n  else\n    b = -(b-17);\n  z = y;\n  while 1 do\n    if 1||11||b==a then\n      b = z\n    else {}\n}",Seq [If (Var "b") (Assign "a" (Const 0)) (While (Const 1) (Assign "x" (Const 1))),If (Binop Equal (Var "a") (Var "x")) (Assign "z" (Var "z")) (Assign "y" (Uminus (Binop Plus (Binop Plus (Uminus (Uminus (Var "b"))) (Binop Or (Var "b") (Binop Equal (Var "y") (Const 1)))) (Binop LessEq (Const 30) (Var "x"))))),Assign "z" (Var "x"),Assign "z" (Binop LessEq (Var "z") (Const 6)),Assign "z" (Const 13),Assign "y" (Const (-2)),Assign "y" (Var "a"),Assign "a" (Binop Less (Const 11) (Var "b")),Assign "z" (Const 1),Assign "y" (Var "a"),If (Uminus (Binop Or (Var "y") (Var "x"))) (Assign "b" (Var "a")) (Assign "z" (Binop Minus (Const 0) (Const (-13)))),Assign "x" (Uminus (Binop Minus (Var "a") (Const 0))),Assign "a" (Const 0),Assign "z" (Const (-16)),Assign "a" (Var "y"),If (Binop Minus (Const 0) (Var "z")) (Seq []) (Assign "x" (Binop Times (Var "z") (Const (-20)))),While (Var "z") (Assign "x" (Binop And (Const 0) (Var "x"))),If (Binop Minus (Var "z") (Var "x")) (While (Binop Times (Var "y") (Uminus (Var "y"))) (Assign "z" (Const (-13)))) (Seq []),Assign "x" (Var "x"),While (Const 0) (If (Binop Div (Var "b") (Var "b")) (Assign "z" (Binop Or (Uminus (Var "a")) (Uminus (Uminus (Binop Minus (Binop And (Const 1) (Var "y")) (Binop Minus (Var "b") (Var "z"))))))) (Seq [])),Assign "y" (Binop LessEq (Binop Times (Const 0) (Const 0)) (Const 0)),Assign "b" (Binop LessEq (Const 0) (Binop And (Uminus (Const 24)) (Var "b"))),If (Binop Less (Binop Or (Binop Plus (Const 0) (Const 1)) (Var "a")) (Const 6)) (Assign "y" (Binop Equal (Uminus (Binop And (Var "b") (Var "z"))) (Binop Equal (Var "z") (Uminus (Binop Plus (Var "a") (Var "b")))))) (Assign "b" (Uminus (Binop Minus (Var "b") (Const 17)))),Assign "z" (Var "y"),While (Const 1) (If (Binop Or (Binop Or (Const 1) (Const 11)) (Binop Equal (Var "b") (Var "a"))) (Assign "b" (Var "z")) (Seq []))]),
  ("y = 7",Assign "y" (Const 7)),
  ("while -(y<b) do\n  if -(-2) then {\n    while -(0) do\n      if 1 then {} else {};\n    while z do {}\n  } else {\n    a = -(0)\n  }",While (Uminus (Binop Less (Var "y") (Var "b"))) (If (Uminus (Const (-2))) (Seq [While (Uminus (Const 0)) (If (Const 1) (Seq []) (Seq [])),While (Var "z") (Seq [])]) (Seq [Assign "a" (Uminus (Const 0))]))),
  ("if z then\n  if 1 then\n    if 1 then {\n      if 1 then {} else {}\n    } else {\n      z = b\n    }\n  else {}\nelse {\n  b = 1/19;\n  b = b;\n  if -((4-y&&a*(0*a))<=18) then\n    z = 1\n  else if 1 then\n    if 0*(0<(a&&x)) then {} else {}\n  else {}\n}",If (Var "z") (If (Const 1) (If (Const 1) (Seq [If (Const 1) (Seq []) (Seq [])]) (Seq [Assign "z" (Var "b")])) (Seq [])) (Seq [Assign "b" (Binop Div (Const 1) (Const 19)),Assign "b" (Var "b"),If (Uminus (Binop LessEq (Binop And (Binop Minus (Const 4) (Var "y")) (Binop Times (Var "a") (Binop Times (Const 0) (Var "a")))) (Const 18))) (Assign "z" (Const 1)) (If (Const 1) (If (Binop Times (Const 0) (Binop Less (Const 0) (Binop And (Var "a") (Var "x")))) (Seq []) (Seq [])) (Seq []))])),
  ("if 0<=1 then\n  while 0/(z/-(z-(x<1))) do\n    z = a\nelse\n  z = b",If (Binop LessEq (Const 0) (Const 1)) (While (Binop Div (Const 0) (Binop Div (Var "z") (Uminus (Binop Minus (Var "z") (Binop Less (Var "x") (Const 1)))))) (Assign "z" (Var "a"))) (Assign "z" (Var "b"))),
  ("while a do {\n  x = -(0&&b)\n}",While (Var "a") (Seq [Assign "x" (Uminus (Binop And (Const 0) (Var "b")))])),
  ("if 9<-y then\n  if 12 then\n    b = 26\n  else\n    y = (a&&(x<=1)-y)/0\nelse {\n  x = y;\n  a = z;\n  a = 0\n}",If (Binop Less (Const 9) (Uminus (Var "y"))) (If (Const 12) (Assign "b" (Const 26)) (Assign "y" (Binop Div (Binop And (Var "a") (Binop Minus (Binop LessEq (Var "x") (Const 1)) (Var "y"))) (Const 0)))) (Seq [Assign "x" (Var "y"),Assign "a" (Var "z"),Assign "a" (Const 0)])),
  ("{\n  if y then\n    if 13 then {} else if y==a*1 then {} else {}\n  else {};\n  a = 0;\n  y = -7*-(1);\n  x = -a;\n  y = y;\n  a = -8;\n  y = z;\n  y = 1;\n  z = -(13);\n  while b||((z==y)+y||1) do {};\n  if b then\n    a = 8<-4\n  else if b then {} else {};\n  a = b;\n  b = 1;\n  x = 1;\n  b = b;\n  while y do\n    if z+b then\n      while -(-3)-(0==1) do {}\n    else if 0&&z then\n      z = a\n    else if 19||0 then {} else {};\n  y = -1;\n  if 21 then {\n    z = 1==1\n  } else\n    a = x;\n  y = 1;\n  z = a;\n  z = 0;\n  y = 0;\n  a = 1;\n  b = x+-(-(1));\n  if 0/(a<z==1)&&((z||y||b)==(0==y&&a))+x then\n    if -(-(x*b))/z then {} else {}\n  else {};\n  while -(y+-(1))<=-y do {};\n  a = -26;\n  while 0 do\n    if x then\n      x = x\n    else if 0 then {} else {};\n  while 0 do\n    while -(z==-(0)) do\n      x = z;\n  y = 0<=z;\n  while b*-30 do\n    x = x;\n  z = -a;\n  if 0 then {} else {}\n}",Seq [If (Var "y") (If (Const 13) (Seq []) (If (Binop Equal (Var "y") (Binop Times (Var "a") (Const 1))) (Seq []) (Seq []))) (Seq []),Assign "a" (Const 0),Assign "y" (Binop Times (Const (-7)) (Uminus (Const 1))),Assign "x" (Uminus (Var "a")),Assign "y" (Var "y"),Assign "a" (Const (-8)),Assign "y" (Var "z"),Assign "y" (Const 1),Assign "z" (Uminus (Const 13)),While (Binop Or (Var "b") (Binop Or (Binop Plus (Binop Equal (Var "z") (Var "y")) (Var "y")) (Const 1))) (Seq []),If (Var "b") (Assign "a" (Binop Less (Const 8) (Const (-4)))) (If (Var "b") (Seq []) (Seq [])),Assign "a" (Var "b"),Assign "b" (Const 1),Assign "x" (Const 1),Assign "b" (Var "b"),While (Var "y") (If (Binop Plus (Var "z") (Var "b")) (While (Binop Minus (Uminus (Const (-3))) (Binop Equal (Const 0) (Const 1))) (Seq [])) (If (Binop And (Const 0) (Var "z")) (Assign "z" (Var "a")) (If (Binop Or (Const 19) (Const 0)) (Seq []) (Seq [])))),Assign "y" (Const (-1)),If (Const 21) (Seq [Assign "z" (Binop Equal (Const 1) (Const 1))]) (Assign "a" (Var "x")),Assign "y" (Const 1),Assign "z" (Var "a"),Assign "z" (Const 0),Assign "y" (Const 0),Assign "a" (Const 1),Assign "b" (Binop Plus (Var "x") (Uminus (Uminus (Const 1)))),If (Binop And (Binop Div (Const 0) (Binop Equal (Binop Less (Var "a") (Var "z")) (Const 1))) (Binop Plus (Binop Equal (Binop Or (Binop Or (Var "z") (Var "y")) (Var "b")) (Binop And (Binop Equal (Const 0) (Var "y")) (Var "a"))) (Var "x"))) (If (Binop Div (Uminus (Uminus (Binop Times (Var "x") (Var "b")))) (Var "z")) (Seq []) (Seq [])) (Seq []),While (Binop LessEq (Uminus (Binop Plus (Var "y") (Uminus (Const 1)))) (Uminus (Var "y"))) (Seq []),Assign "a" (Const (-26)),While (Const 0) (If (Var "x") (Assign "x" (Var "x")) (If (Const 0) (Seq []) (Seq []))),While (Const 0) (While (Uminus (Binop Equal (Var "z") (Uminus (Const 0)))) (Assign "x" (Var "z"))),Assign "y" (Binop LessEq (Const 0) (Var "z")),While (Binop Times (Var "b") (Const (-30))) (Assign "x" (Var "x")),Assign "z" (Uminus (Var "a")),If (Const 0) (Seq []) (Seq [])]),
  ("y = -(19*(y==1))",Assign "y" (Uminus (Binop Times (Const 19) (Binop Equal (Var "y") (Const 1))))),
  ("if b/(-(0)&&-5) then\n  b = -(-2/-b)\nelse\n  y = y",If (Binop Div (Var "b") (Binop And (Uminus (Const 0)) (Const (-5)))) (Assign "b" (Uminus (Binop Div (Const (-2)) (Uminus (Var "b"))))) (Assign "y" (Var "y"))),
  ("x = 5",Assign "x" (Const 5)),
  ("if a<0 then {\n  while -(0) do\n    y = a;\n  if -(b+7<=(y*y==-(-b))) then {} else\n    x = y;\n  x = 0;\n  x = -26;\n  a = 24--z;\n  b = -7\n} else\n  y = x",If (Binop Less (Var "a") (Const 0)) (Seq [While (Uminus (Const 0)) (Assign "y" (Var "a")),If (Uminus (Binop LessEq (Binop Plus (Var "b") (Const 7)) (Binop Equal (Binop Times (Var "y") (Var "y")) (Uminus (Uminus (Var "b")))))) (Seq []) (Assign "x" (Var "y")),Assign "x" (Const 0),Assign "x" (Const (-26)),Assign "a" (Binop Minus (Const 24) (Uminus (Var "z"))),Assign "b" (Const (-7))]) (Assign "y" (Var "x"))),
  ("if 1 then\n  y = -22\nelse {\n  if 0 then {\n    x = 0*-(29<-z)-b\n  } else\n    z = -z;\n  x = 1;\n  a = a/1;\n  x = z-z;\n  y = 1<-x;\n  while z<0 do\n    z = x;\n  while 1 do\n    a = y&&a\n}",If (Const 1) (Assign "y" (Const (-22))) (Seq [If (Const 0) (Seq [Assign "x" (Binop Minus (Binop Times (Const 0) (Uminus (Binop Less (Const 29) (Uminus (Var "z"))))) (Var "b"))]) (Assign "z" (Uminus (Var "z"))),Assign "x" (Const 1),Assign "a" (Binop Div (Var "a") (Const 1)),Assign "x" (Binop Minus (Var "z") (Var "z")),Assign "y" (Binop Less (Const 1) (Uminus (Var "x"))),While (Binop Less (Var "z") (Const 0)) (Assign "z" (Var "x")),While (Const 1) (Assign "a" (Binop And (Var "y") (Var "a")))])),
  ("x = -(0)/b",Assign "x" (Binop Div (Uminus (Const 0)) (Var "b"))),
  ("while 1 do\n  z = y",While (Const 1) (Assign "z" (Var "y"))),
  ("{\n  if 22<=z then {} else {\n    if z then {} else {}\n  };\n  b = -((-25||1)<=x);\n  if 0 then\n    x = z\n  else {\n    z = a\n  };\n  if -(1)||1 then\n    b = 1\n  else\n    y = 0/x;\n  if z then\n    b = x\n  else\n    a = 1;\n  x = z\n}",Seq [If (Binop LessEq (Const 22) (Var "z")) (Seq []) (Seq [If (Var "z") (Seq []) (Seq [])]),Assign "b" (Uminus (Binop LessEq (Binop Or (Const (-25)) (Const 1)) (Var "x"))),If (Const 0) (Assign "x" (Var "z")) (Seq [Assign "z" (Var "a")]),If (Binop Or (Uminus (Const 1)) (Const 1)) (Assign "b" (Const 1)) (Assign "y" (Binop Div (Const 0) (Var "x"))),If (Var "z") (Assign "b" (Var "x")) (Assign "a" (Const 1)),Assign "x" (Var "z")]),
  ("if 1 then\n  z = 0\nelse if 1 then\n  b = x||-a==-30==a\nelse\n  z = -(1&&0)",If (Const 1) (Assign "z" (Const 0)) (If (Const 1) (Assign "b" (Binop Or (Var "x") (Binop Equal (Binop Equal (Uminus (Var "a")) (Const (-30))) (Var "a")))) (Assign "z" (Uminus (Binop And (Const 1) (Const 0)))))),
  ("while 0 do\n  x = -(0)",While (Const 0) (Assign "x" (Uminus (Const 0)))),
  ("if (a==1)/y<a then {} else {\n  while -11 do\n    x = 6;\n  z = x;\n  if 0 then\n    z = y\n  else\n    a = (0||a)*0--(-(-13)/y)*-b\n}",If (Binop Less (Binop Div (Binop Equal (Var "a") (Const 1)) (Var "y")) (Var "a")) (Seq []) (Seq [While (Const (-11)) (Assign "x" (Const 6)),Assign "z" (Var "x"),If (Const 0) (Assign "z" (Var "y")) (Assign "a" (Binop Minus (Binop Times (Binop Or (Const 0) (Var "a")) (Const 0)) (Binop Times (Uminus (Binop Div (Uminus (Const (-13))) (Var "y"))) (Uminus (Var "b")))))])),
  ("if x*1 then\n  x = z\nelse\n  x = b",If (Binop Times (Var "x") (Const 1)) (Assign "x" (Var "z")) (Assign "x" (Var "b"))),
  ("{\n  b = -b;\n  if z then\n    while y==0||y do\n      a = a||b||0\n  else {};\n  a = 1;\n  if x then {} else {};\n  b = -26;\n  x = a;\n  while b+(0+1<=(z||b-0)<=-7) do\n    b = y+z;\n  a = 1||x;\n  x = 1;\n  if 1 then\n    b = x\n  else\n    while -18 do {};\n  a = a;\n  if a then\n    b = b\n  else {};\n  if a then\n    if y then {} else {}\n  else {};\n  a = -(1<=(-(0||x)<=-(x*1)));\n  while y do\n    x = a\n}",Seq [Assign "b" (Uminus (Var "b")),If (Var "z") (While (Binop Or (Binop Equal (Var "y") (Const 0)) (Var "y")) (Assign "a" (Binop Or (Binop Or (Var "a") (Var "b")) (Const 0)))) (Seq []),Assign "a" (Const 1),If (Var "x") (Seq []) (Seq []),Assign "b" (Const (-26)),Assign "x" (Var "a"),While (Binop Plus (Var "b") (Binop LessEq (Binop LessEq (Binop Plus (Const 0) (Const 1)) (Binop Or (Var "z") (Binop Minus (Var "b") (Const 0)))) (Const (-7)))) (Assign "b" (Binop Plus (Var "y") (Var "z"))),Assign "a" (Binop Or (Const 1) (Var "x")),Assign "x" (Const 1),If (Const 1) (Assign "b" (Var "x")) (While (Const (-18)) (Seq [])),Assign "a" (Var "a"),If (Var "a") (Assign "b" (Var "b")) (Seq []),If (Var "a") (If (Var "y") (Seq []) (Seq [])) (Seq []),Assign "a" (Uminus (Binop LessEq (Const 1) (Binop LessEq (Uminus (Binop Or (Const 0) (Var "x"))) (Uminus (Binop Times (Var "x") (Const 1)))))),While (Var "y") (Assign "x" (Var "a"))]),
  ("if -13 then\n  y = 1\nelse {}",If (Const (-13)) (Assign "y" (Const 1)) (Seq [])),
  ("while a*-(-(-x))<(b-x+(x-0)+((1<=0)+(0+1))||1) do\n  y = b",While (Binop Less (Binop Times (Var "a") (Uminus (Uminus (Uminus (Var "x"))))) (Binop Or (Binop Plus (Binop Plus (Binop Minus (Var "b") (Var "x")) (Binop Minus (Var "x") (Const 0))) (Binop Plus (Binop LessEq (Const 1) (Const 0)) (Binop Plus (Const 0) (Const 1)))) (Const 1))) (Assign "y" (Var "b"))),
  ("z = 0/22",Assign "z" (Binop Div (Const 0) (Const 22))),
  ("{\n  y = y;\n  b = a<(1<y&&1)/y-0;\n  a = -(1)/1;\n  y = 1;\n  z = (b&&(a==(1||b))+-27)/y;\n  x = a;\n  while 16 do {};\n  if (b||x)<-(a+-2) then\n    a = z\n  else\n    a = y<=y;\n  while -(-(0-20)) do\n    x = a<-(-(1))<x;\n  b = a;\n  z = -27;\n  z = 0;\n  while -(0&&x)+-(0+-x)*((y<x&&x<0)/0) do {};\n  a = 1;\n  b = 7;\n  if -(0/(0<0)) then\n    a = -(1)\n  else\n    z = y;\n  if 1 then\n    if x-((-18<0)+0/0&&1)<b then\n      z = -(-11)\n    else {}\n  else if 0<-1<=-z then {} else\n    while -23 do {};\n  a = b;\n  if (-x/a<=(z==y)-a)-((a||(0||a))<b) then\n    y = 1*((1||b-a)<y)<1\n  else if -12 then\n    while 1==-(-(-y))+1 do {}\n  else {\n    b = x\n  };\n  if -y then\n    if x--1 then {} else {}\n  else\n    b = y\n}",Seq [Assign "y" (Var "y"),Assign "b" (Binop Less (Var "a") (Binop Minus (Binop Div (Binop And (Binop Less (Const 1) (Var "y")) (Const 1)) (Var "y")) (Const 0))),Assign "a" (Binop Div (Uminus (Const 1)) (Const 1)),Assign "y" (Const 1),Assign "z" (Binop Div (Binop And (Var "b") (Binop Plus (Binop Equal (Var "a") (Binop Or (Const 1) (Var "b"))) (Const (-27)))) (Var "y")),Assign "x" (Var "a"),While (Const 16) (Seq []),If (Binop Less (Binop Or (Var "b") (Var "x")) (Uminus (Binop Plus (Var "a") (Const (-2))))) (Assign "a" (Var "z")) (Assign "a" (Binop LessEq (Var "y") (Var "y"))),While (Uminus (Uminus (Binop Minus (Const 0) (Const 20)))) (Assign "x" (Binop Less (Binop Less (Var "a") (Uminus (Uminus (Const 1)))) (Var "x"))),Assign "b" (Var "a"),Assign "z" (Const (-27)),Assign "z" (Const 0),While (Binop Plus (Uminus (Binop And (Const 0) (Var "x"))) (Binop Times (Uminus (Binop Plus (Const 0) (Uminus (Var "x")))) (Binop Div (Binop And (Binop Less (Var "y") (Var "x")) (Binop Less (Var "x") (Const 0))) (Const 0)))) (Seq []),Assign "a" (Const 1),Assign "b" (Const 7),If (Uminus (Binop Div (Const 0) (Binop Less (Const 0) (Const 0)))) (Assign "a" (Uminus (Const 1))) (Assign "z" (Var "y")),If (Const 1) (If (Binop Less (Binop Minus (Var "x") (Binop And (Binop Plus (Binop Less (Const (-18)) (Const 0)) (Binop Div (Const 0) (Const 0))) (Const 1))) (Var "b")) (Assign "z" (Uminus (Const (-11)))) (Seq [])) (If (Binop LessEq (Binop Less (Const 0) (Const (-1))) (Uminus (Var "z"))) (Seq []) (While (Const (-23)) (Seq []))),Assign "a" (Var "b"),If (Binop Minus (Binop LessEq (Binop Div (Uminus (Var "x")) (Var "a")) (Binop Minus (Binop Equal (Var "z") (Var "y")) (Var "a"))) (Binop Less (Binop Or (Var "a") (Binop Or (Const 0) (Var "a"))) (Var "b"))) (Assign "y" (Binop Less (Binop Times (Const 1) (Binop Less (Binop Or (Const 1) (Binop Minus (Var "b") (Var "a"))) (Var "y"))) (Const 1))) (If (Const (-12)) (While (Binop Equal (Const 1) (Binop Plus (Uminus (Uminus (Uminus (Var "y")))) (Const 1))) (Seq [])) (Seq [Assign "b" (Var "x")])),If (Uminus (Var "y")) (If (Binop Minus (Var "x") (Const (-1))) (Seq []) (Seq [])) (Assign "b" (Var "y"))]),
  ("if 0-0/-(1) then {\n  if 20 then\n    b = -(0)\n  else\n    x = a;\n  z = 6/-(-(1)/a);\n  a = (1||(z||a&&-21))-a;\n  if x then\n    y = -((x||(0&&0)<(y&&a))==1)\n  else\n    x = 1;\n  a = -y;\n  b = y;\n  x = 1\n} else {\n  b = 1+-((0||-16)/(-(4)+-(0)));\n  if 1 then {} else {};\n  z = a+-(0);\n  while 1 do\n    a = z;\n  b = y;\n  if -25==-(y&&a) then\n    x = b\n  else\n    a = 0;\n  y = y*a\n}",If (Binop Minus (Const 0) (Binop Div (Const 0) (Uminus (Const 1)))) (Seq [If (Const 20) (Assign "b" (Uminus (Const 0))) (Assign "x" (Var "a")),Assign "z" (Binop Div (Const 6) (Uminus (Binop Div (Uminus (Const 1)) (Var "a")))),Assign "a" (Binop Minus (Binop Or (Const 1) (Binop Or (Var "z") (Binop And (Var "a") (Const (-21))))) (Var "a")),If (Var "x") (Assign "y" (Uminus (Binop Equal (Binop Or (Var "x") (Binop Less (Binop And (Const 0) (Const 0)) (Binop And (Var "y") (Var "a")))) (Const 1)))) (Assign "x" (Const 1)),Assign "a" (Uminus (Var "y")),Assign "b" (Var "y"),Assign "x" (Const 1)]) (Seq [Assign "b" (Binop Plus (Const 1) (Uminus (Binop Div (Binop Or (Const 0) (Const (-16))) (Binop Plus (Uminus (Const 4)) (Uminus (Const 0)))))),If (Const 1) (Seq []) (Seq []),Assign "z" (Binop Plus (Var "a") (Uminus (Const 0))),While (Const 1) (Assign "a" (Var "z")),Assign "b" (Var "y"),If (Binop Equal (Const (-25)) (Uminus (Binop And (Var "y") (Var "a")))) (Assign "x" (Var "b")) (Assign "a" (Const 0)),Assign "y" (Binop Times (Var "y") (Var "a"))])),
  ("if y then {\n  y = -19;\n  x = 0;\n  if -4 then\n    y = (-29==z||1<-b)*(-b-(0-30<9))/-(0)\n  else if 0 then\n    z = -(-(b==-11))\n  else {}\n} else {\n  while z/(1-1) do {};\n  a = z==1/((1&&-b)+1);\n  while 1 do {};\n  b = 0;\n  a = -b;\n  z = y\n}",If (Var "y") (Seq [Assign "y" (Const (-19)),Assign "x" (Const 0),If (Const (-4)) (Assign "y" (Binop Div (Binop Times (Binop Or (Binop Equal (Const (-29)) (Var "z")) (Binop Less (Const 1) (Uminus (Var "b")))) (Binop Minus (Uminus (Var "b")) (Binop Less (Binop Minus (Const 0) (Const 30)) (Const 9)))) (Uminus (Const 0)))) (If (Const 0) (Assign "z" (Uminus (Uminus (Binop Equal (Var "b") (Const (-11)))))) (Seq []))]) (Seq [While (Binop Div (Var "z") (Binop Minus (Const 1) (Const 1))) (Seq []),Assign "a" (Binop Equal (Var "z") (Binop Div (Const 1) (Binop Plus (Binop And (Const 1) (Uminus (Var "b"))) (Const 1)))),While (Const 1) (Seq []),Assign "b" (Const 0),Assign "a" (Uminus (Var "b")),Assign "z" (Var "y")])),
  ("z = 25",Assign "z" (Const 25)),
  ("while z do\n  b = -17/a",While (Var "z") (Assign "b" (Binop Div (Const (-17)) (Var "a")))),
  ("a = -b",Assign "a" (Uminus (Var "b"))),
  ("{\n  if -(0&&-(0)) then {\n    y = a\n  } else {};\n  if 1 then\n    x = y\n  else if 1*y then\n    y = (9&&y)*1*1\n  else\n    x = 0;\n  a = b||b;\n  b = 1;\n  while a do {};\n  y = y*(y*1);\n  a = -(y*y);\n  a = 1;\n  x = a;\n  z = x;\n  if 1 then\n    b = 1\n  else\n    b = (a&&1)*x;\n  x = b;\n  if -25*(-(a--a)||y/1-y) then {} else if -(-27) then\n    while z==1 do {}\n  else\n    x = 3;\n  if 0 then {\n    x = -b\n  } else\n    z = 0;\n  z = x;\n  if (0&&1)/0 then\n    while 0<a do\n      while x do {}\n  else {};\n  a = a/(1+z);\n  x = -4;\n  if 0==0 then\n    if y/a then\n      a = z\n    else\n      b = 0\n  else {};\n  if 0 then\n    y = -(0/1)\n  else {\n    if b then\n      if 1 then {} else {}\n    else\n      y = -(1)\n  }\n}",Seq [If (Uminus (Binop And (Const 0) (Uminus (Const 0)))) (Seq [Assign "y" (Var "a")]) (Seq []),If (Const 1) (Assign "x" (Var "y")) (If (Binop Times (Const 1) (Var "y")) (Assign "y" (Binop Times (Binop Times (Binop And (Const 9) (Var "y")) (Const 1)) (Const 1))) (Assign "x" (Const 0))),Assign "a" (Binop Or (Var "b") (Var "b")),Assign "b" (Const 1),While (Var "a") (Seq []),Assign "y" (Binop Times (Var "y") (Binop Times (Var "y") (Const 1))),Assign "a" (Uminus (Binop Times (Var "y") (Var "y"))),Assign "a" (Const 1),Assign "x" (Var "a"),Assign "z" (Var "x"),If (Const 1) (Assign "b" (Const 1)) (Assign "b" (Binop Times (Binop And (Var "a") (Const 1)) (Var "x"))),Assign "x" (Var "b"),If (Binop Times (Const (-25)) (Binop Or (Uminus (Binop Minus (Var "a") (Uminus (Var "a")))) (Binop Minus (Binop Div (Var "y") (Const 1)) (Var "y")))) (Seq []) (If (Uminus (Const (-27))) (While (Binop Equal (Var "z") (Const 1)) (Seq [])) (Assign "x" (Const 3))),If (Const 0) (Seq [Assign "x" (Uminus (Var "b"))]) (Assign "z" (Const 0)),Assign "z" (Var "x"),If (Binop Div (Binop And (Const 0) (Const 1)) (Const 0)) (While (Binop Less (Const 0) (Var "a")) (While (Var "x") (Seq []))) (Seq []),Assign "a" (Binop Div (Var "a") (Binop Plus (Const 1) (Var "z"))),Assign "x" (Const (-4)),If (Binop Equal (Const 0) (Const 0)) (If (Binop Div (Var "y") (Var "a")) (Assign "a" (Var "z")) (Assign "b" (Const 0))) (Seq []),If (Const 0) (Assign "y" (Uminus (Binop Div (Const 0) (Const 1)))) (Seq [If (Var "b") (If (Const 1) (Seq []) (Seq [])) (Assign "y" (Uminus (Const 1)))])]),
  ("{\n  z = z/(a+-20);\n  a = 0/(7-7*-21)/1;\n  y = x&&y;\n  b = 1;\n  a = 0<b;\n  if 0 then {\n    b = (0||y+z)+0/0\n  } else\n    b = 26<=z*-22/y+a;\n  b = z*0;\n  z = b;\n  x = -y;\n  b = -(b<9*0-1);\n  x = 0;\n  a = -(0)\n}",Seq [Assign "z" (Binop Div (Var "z") (Binop Plus (Var "a") (Const (-20)))),Assign "a" (Binop Div (Binop Div (Const 0) (Binop Minus (Const 7) (Binop Times (Const 7) (Const (-21))))) (Const 1)),Assign "y" (Binop And (Var "x") (Var "y")),Assign "b" (Const 1),Assign "a" (Binop Less (Const 0) (Var "b")),If (Const 0) (Seq [Assign "b" (Binop Plus (Binop Or (Const 0) (Binop Plus (Var "y") (Var "z"))) (Binop Div (Const 0) (Const 0)))]) (Assign "b" (Binop LessEq (Const 26) (Binop Plus (Binop Div (Binop Times (Var "z") (Const (-22))) (Var "y")) (Var "a")))),Assign "b" (Binop Times (Var "z") (Const 0)),Assign "z" (Var "b"),Assign "x" (Uminus (Var "y")),Assign "b" (Uminus (Binop Less (Var "b") (Binop Minus (Binop Times (Const 9) (Const 0)) (Const 1)))),Assign "x" (Const 0),Assign "a" (Uminus (Const 0))]),
  ("while a do {}",While (Var "a") (Seq [])),
  ("{\n  if 1 then\n    while 14 do\n      if 20 then {} else {}\n  else\n    while 26 do\n      z = (b+y)/b;\n  a = a;\n  if -(0) then\n    if y then\n      if (0-b+0-(0<=1<=-26)||0==z)+0*1 then {} else {}\n    else\n      x = z\n  else {};\n  b = z/14;\n  if 1 then\n    if 1&&y then\n      y = x\n    else {}\n  else {}\n}",Seq [If (Const 1) (While (Const 14) (If (Const 20) (Seq []) (Seq []))) (While (Const 26) (Assign "z" (Binop Div (Binop Plus (Var "b") (Var "y")) (Var "b")))),Assign "a" (Var "a"),If (Uminus (Const 0)) (If (Var "y") (If (Binop Plus (Binop Or (Binop Minus (Binop Plus (Binop Minus (Const 0) (Var "b")) (Const 0)) (Binop LessEq (Binop LessEq (Const 0) (Const 1)) (Const (-26)))) (Binop Equal (Const 0) (Var "z"))) (Binop Times (Const 0) (Const 1))) (Seq []) (Seq [])) (Assign "x" (Var "z"))) (Seq []),Assign "b" (Binop Div (Var "z") (Const 14)),If (Const 1) (If (Binop And (Const 1) (Var "y")) (Assign "y" (Var "x")) (Seq [])) (Seq [])]),
  ("{\n  if z then {} else if -(8)==(y==x||1<=b/1) then\n    while -(-(-(1))) do\n      z = -(-b)\n  else {};\n  z = -14<=(y&&-25<=0);\n  y = -24;\n  z = 1;\n  z = -x;\n  x = z+0;\n  z = a;\n  a = (0||z-1)&&y;\n  a = (-(z||1||0<=b)<=0)*(0*(1+0)||0*-14);\n  y = 1;\n  while 0 do {\n    a = b&&z\n  };\n  b = 0+y;\n  y = 0;\n  a = 0/(x<1)/0;\n  if 26 then\n    while -x do {}\n  else\n    while -(0) do {};\n  x = 1;\n  if x then\n    z = z\n  else {};\n  y = 0/y;\n  y = 1/y;\n  if -25||1 then {\n    if 0/-13 then {} else {}\n  } else {\n    x = -x\n  };\n  x = 1\n}",Seq [If (Var "z") (Seq []) (If (Binop Equal (Uminus (Const 8)) (Binop Or (Binop Equal (Var "y") (Var "x")) (Binop LessEq (Const 1) (Binop Div (Var "b") (Const 1))))) (While (Uminus (Uminus (Uminus (Const 1)))) (Assign "z" (Uminus (Uminus (Var "b"))))) (Seq [])),Assign "z" (Binop LessEq (Const (-14)) (Binop And (Var "y") (Binop LessEq (Const (-25)) (Const 0)))),Assign "y" (Const (-24)),Assign "z" (Const 1),Assign "z" (Uminus (Var "x")),Assign "x" (Binop Plus (Var "z") (Const 0)),Assign "z" (Var "a"),Assign "a" (Binop And (Binop Or (Const 0) (Binop Minus (Var "z") (Const 1))) (Var "y")),Assign "a" (Binop Times (Binop LessEq (Uminus (Binop Or (Binop Or (Var "z") (Const 1)) (Binop LessEq (Const 0) (Var "b")))) (Const 0)) (Binop Or (Binop Times (Const 0) (Binop Plus (Const 1) (Const 0))) (Binop Times (Const 0) (Const (-14))))),Assign "y" (Const 1),While (Const 0) (Seq [Assign "a" (Binop And (Var "b") (Var "z"))]),Assign "b" (Binop Plus (Const 0) (Var "y")),Assign "y" (Const 0),Assign "a" (Binop Div (Binop Div (Const 0) (Binop Less (Var "x") (Const 1))) (Const 0)),If (Const 26) (While (Uminus (Var "x")) (Seq [])) (While (Uminus (Const 0)) (Seq [])),Assign "x" (Const 1),If (Var "x") (Assign "z" (Var "z")) (Seq []),Assign "y" (Binop Div (Const 0) (Var "y")),Assign "y" (Binop Div (Const 1) (Var "y")),If (Binop Or (Const (-25)) (Const 1)) (Seq [If (Binop Div (Const 0) (Const (-13))) (Seq []) (Seq [])]) (Seq [Assign "x" (Uminus (Var "x"))]),Assign "x" (Const 1)]),
  ("y = (1+((1==0)--11*b))*-((1&&b)<=z)<=-(0)",Assign "y" (Binop LessEq (Binop Times (Binop Plus (Const 1) (Binop Minus (Binop Equal (Const 1) (Const 0)) (Binop Times (Const (-11)) (Var "b")))) (Uminus (Binop LessEq (Binop And (Const 1) (Var "b")) (Var "z")))) (Uminus (Const 0)))),
  ("if x<=y then\n  while (b-1<(-26<=(0&&0))<1)/(-(-x*1)<=z) do\n    if 0 then\n      z = -15\n    else\n      a = 1\nelse if a then\n  a = x&&y\nelse\n  z = -5",If (Binop LessEq (Var "x") (Var "y")) (While (Binop Div (Binop Less (Binop Less (Binop Minus (Var "b") (Const 1)) (Binop LessEq (Const (-26)) (Binop And (Const 0) (Const 0)))) (Const 1)) (Binop LessEq (Uminus (Binop Times (Uminus (Var "x")) (Const 1))) (Var "z"))) (If (Const 0) (Assign "z" (Const (-15))) (Assign "a" (Const 1)))) (If (Var "a") (Assign "a" (Binop And (Var "x") (Var "y"))) (Assign "z" (Const (-5))))),
  ("{\n  x = z;\n  while (y<=21)-1 do\n    z = z;\n  x = 0;\n  z = 1;\n  x = 1;\n  x = -7;\n  z = -x;\n  while (0&&-(-(1)))/z<y do\n    b = z||0;\n  if x then\n    b = z\n  else\n    b = 1;\n  if -30 then\n    while -(-23)+b do {}\n  else if z<=(a&&1) then {} else\n    y = 1;\n  x = 0;\n  if 1<-(-(1)) then {} else {\n    if 0 then {} else {}\n  };\n  x = -x||b*(y/-a);\n  if z then\n    y = a\n  else {};\n  b = y;\n  while x do\n    a = -21;\n  while -x==b do {\n    x = z==15\n  };\n  if 0<=y then\n    x = z<-16&&x\n  else {};\n  b = -14;\n  if -2 then\n    y = 0-1\n  else {\n    y = -(-(13))==-2;\n    if 1 then {} else {}\n  };\n  z = 1<0*29*-(a<x&&y)\n}",Seq [Assign "x" (Var "z"),While (Binop Minus (Binop LessEq (Var "y") (Const 21)) (Const 1)) (Assign "z" (Var "z")),Assign "x" (Const 0),Assign "z" (Const 1),Assign "x" (Const 1),Assign "x" (Const (-7)),Assign "z" (Uminus (Var "x")),While (Binop Less (Binop Div (Binop And (Const 0) (Uminus (Uminus (Const 1)))) (Var "z")) (Var "y")) (Assign "b" (Binop Or (Var "z") (Const 0))),If (Var "x") (Assign "b" (Var "z")) (Assign "b" (Const 1)),If (Const (-30)) (While (Binop Plus (Uminus (Const (-23))) (Var "b")) (Seq [])) (If (Binop LessEq (Var "z") (Binop And (Var "a") (Const 1))) (Seq []) (Assign "y" (Const 1))),Assign "x" (Const 0),If (Binop Less (Const 1) (Uminus (Uminus (Const 1)))) (Seq []) (Seq [If (Const 0) (Seq []) (Seq [])]),Assign "x" (Binop Or (Uminus (Var "x")) (Binop Times (Var "b") (Binop Div (Var "y") (Uminus (Var "a"))))),If (Var "z") (Assign "y" (Var "a")) (Seq []),Assign "b" (Var "y"),While (Var "x") (Assign "a" (Const (-21))),While (Binop Equal (Uminus (Var "x")) (Var "b")) (Seq [Assign "x" (Binop Equal (Var "z") (Const 15))]),If (Binop LessEq (Const 0) (Var "y")) (Assign "x" (Binop And (Binop Less (Var "z") (Const (-16))) (Var "x"))) (Seq []),Assign "b" (Const (-14)),If (Const (-2)) (Assign "y" (Binop Minus (Const 0) (Const 1))) (Seq [Assign "y" (Binop Equal (Uminus (Uminus (Const 13))) (Const (-2))),If (Const 1) (Seq []) (Seq [])]),Assign "z" (Binop Less (Const 1) (Binop Times (Binop Times (Const 0) (Const 29)) (Uminus (Binop And (Binop Less (Var "a") (Var "x")) (Var "y")))))]),
  ("{\n  a = 0;\n  b = -19==19<0;\n  while 6 do\n    z = 0\n}",Seq [Assign "a" (Const 0),Assign "b" (Binop Less (Binop Equal (Const (-19)) (Const 19)) (Const 0)),While (Const 6) (Assign "z" (Const 0))]),
  ("b = -(y+0<1/a<=a)",Assign "b" (Uminus (Binop LessEq (Binop Less (Binop Plus (Var "y") (Const 0)) (Binop Div (Const 1) (Var "a"))) (Var "a")))),
  ("{\n  while 14 do\n    if -a<(1<y<=z) then {} else {};\n  while a do\n    if 1 then {} else {};\n  if z then {\n    b = z+z\n  } else {};\n  z = -y;\n  if -(0) then\n    y = x-y\n  else\n    while 19 do\n      x = -(-(0)-x);\n  z = y;\n  a = 0;\n  x = -(1);\n  a = 1;\n  z = 1;\n  a = 1+(z<=1/-(0));\n  z = 29;\n  z = 0;\n  y = 1;\n  while 0-y do {};\n  z = 1;\n  if -b then\n    if 0 then {} else {}\n  else if 29 then {} else {};\n  b = z||z||b||0;\n  z = 1;\n  z = 0;\n  x = -(0+y);\n  if -(-a||30) then\n    if b then {} else {}\n  else {};\n  while a do\n    if 0 then {} else\n      a = a;\n  if b then\n    a = -b<(y<y)\n  else\n    a = 1;\n  while (0==y)/1 do\n    x = 0;\n  x = -(1);\n  z = -18;\n  y = y||0;\n  while 1 do\n    z = -29/1;\n  b = 0*(0==(0||a/1+x));\n  y = z/(1*b)<=(y*(-25&&0)||-26*a)\n}",Seq [While (Const 14) (If (Binop Less (Uminus (Var "a")) (Binop LessEq (Binop Less (Const 1) (Var "y")) (Var "z"))) (Seq []) (Seq [])),While (Var "a") (If (Const 1) (Seq []) (Seq [])),If (Var "z") (Seq [Assign "b" (Binop Plus (Var "z") (Var "z"))]) (Seq []),Assign "z" (Uminus (Var "y")),If (Uminus (Const 0)) (Assign "y" (Binop Minus (Var "x") (Var "y"))) (While (Const 19) (Assign "x" (Uminus (Binop Minus (Uminus (Const 0)) (Var "x"))))),Assign "z" (Var "y"),Assign "a" (Const 0),Assign "x" (Uminus (Const 1)),Assign "a" (Const 1),Assign "z" (Const 1),Assign "a" (Binop Plus (Const 1) (Binop LessEq (Var "z") (Binop Div (Const 1) (Uminus (Const 0))))),Assign "z" (Const 29),Assign "z" (Const 0),Assign "y" (Const 1),While (Binop Minus (Const 0) (Var "y")) (Seq []),Assign "z" (Const 1),If (Uminus (Var "b")) (If (Const 0) (Seq []) (Seq [])) (If (Const 29) (Seq []) (Seq [])),Assign "b" (Binop Or (Binop Or (Binop Or (Var "z") (Var "z")) (Var "b")) (Const 0)),Assign "z" (Const 1),Assign "z" (Const 0),Assign "x" (Uminus (Binop Plus (Const 0) (Var "y"))),If (Uminus (Binop Or (Uminus (Var "a")) (Const 30))) (If (Var "b") (Seq []) (Seq [])) (Seq []),While (Var "a") (If (Const 0) (Seq []) (Assign "a" (Var "a"))),If (Var "b") (Assign "a" (Binop Less (Uminus (Var "b")) (Binop Less (Var "y") (Var "y")))) (Assign "a" (Const 1)),While (Binop Div (Binop Equal (Const 0) (Var "y")) (Const 1)) (Assign "x" (Const 0)),Assign "x" (Uminus (Const 1)),Assign "z" (Const (-18)),Assign "y" (Binop Or (Var "y") (Const 0)),While (Const 1) (Assign "z" (Binop Div (Const (-29)) (Const 1))),Assign "b" (Binop Times (Const 0) (Binop Equal (Const 0) (Binop Or (Const 0) (Binop Plus (Binop Div (Var "a") (Const 1)) (Var "x"))))),Assign "y" (Binop LessEq (Binop Div (Var "z") (Binop Times (Const 1) (Var "b"))) (Binop Or (Binop Times (Var "y") (Binop And (Const (-25)) (Const 0))) (Binop Times (Const (-26)) (Var "a"))))]),
  ("{\n  if 0 then\n    if -(1)*b then\n      while 0 do\n        b = z*-(-7&&y)\n    else\n      b = 0\n  else {\n    if -4+x then\n      a = y/a\n    else\n      b = -(0);\n    y = 0\n  };\n  a = 0;\n  a = -x--y;\n  a = -(0/24<(x+x-a)/(z+1));\n  a = 8;\n  a = a;\n  a = x+z;\n  a = -7&&-(0);\n  x = 1*y;\n  y = -30;\n  y = 1-y;\n  if b then {} else {};\n  b = b;\n  z = (1&&0)==1;\n  if -(1<=29<=1) then {} else\n    z = 1&&z/(24-(0&&a))<-z-y/z;\n  if (0||1)*0 then\n    x = b\n  else {};\n  z = 0;\n  while 1 do\n    x = x;\n  b = a;\n  while -b==-(1<z)||1 do\n    x = -19;\n  b = a;\n  z = -(-(0&&-(1)))<1;\n  while -z*b--(13) do\n    x = -b==(1&&0);\n  z = y;\n  while y*(21--7) do\n    b = 0;\n  if 0||(0||(-6<z)*(-(1)/-b)) then\n    b = -(-(0))||b\n  else\n    y = 0&&0\n}",Seq [If (Const 0) (If (Binop Times (Uminus (Const 1)) (Var "b")) (While (Const 0) (Assign "b" (Binop Times (Var "z") (Uminus (Binop And (Const (-7)) (Var "y")))))) (Assign "b" (Const 0))) (Seq [If (Binop Plus (Const (-4)) (Var "x")) (Assign "a" (Binop Div (Var "y") (Var "a"))) (Assign "b" (Uminus (Const 0))),Assign "y" (Const 0)]),Assign "a" (Const 0),Assign "a" (Binop Minus (Uminus (Var "x")) (Uminus (Var "y"))),Assign "a" (Uminus (Binop Less (Binop Div (Const 0) (Const 24)) (Binop Div (Binop Minus (Binop Plus (Var "x") (Var "x")) (Var "a")) (Binop Plus (Var "z") (Const 1))))),Assign "a" (Const 8),Assign "a" (Var "a"),Assign "a" (Binop Plus (Var "x") (Var "z")),Assign "a" (Binop And (Const (-7)) (Uminus (Const 0))),Assign "x" (Binop Times (Const 1) (Var "y")),Assign "y" (Const (-30)),Assign "y" (Binop Minus (Const 1) (Var "y")),If (Var "b") (Seq []) (Seq []),Assign "b" (Var "b"),Assign "z" (Binop Equal (Binop And (Const 1) (Const 0)) (Const 1)),If (Uminus (Binop LessEq (Binop LessEq (Const 1) (Const 29)) (Const 1))) (Seq []) (Assign "z" (Binop And (Const 1) (Binop Less (Binop Div (Var "z") (Binop Minus (Const 24) (Binop And (Const 0) (Var "a")))) (Binop Minus (Uminus (Var "z")) (Binop Div (Var "y") (Var "z")))))),If (Binop Times (Binop Or (Const 0) (Const 1)) (Const 0)) (Assign "x" (Var "b")) (Seq []),Assign "z" (Const 0),While (Const 1) (Assign "x" (Var "x")),Assign "b" (Var "a"),While (Binop Or (Binop Equal (Uminus (Var "b")) (Uminus (Binop Less (Const 1) (Var "z")))) (Const 1)) (Assign "x" (Const (-19))),Assign "b" (Var "a"),Assign "z" (Binop Less (Uminus (Uminus (Binop And (Const 0) (Uminus (Const 1))))) (Const 1)),While (Binop Minus (Binop Times (Uminus (Var "z")) (Var "b")) (Uminus (Const 13))) (Assign "x" (Binop Equal (Uminus (Var "b")) (Binop And (Const 1) (Const 0)))),Assign "z" (Var "y"),While (Binop Times (Var "y") (Binop Minus (Const 21) (Const (-7)))) (Assign "b" (Const 0)),If (Binop Or (Const 0) (Binop Or (Const 0) (Binop Times (Binop Less (Const (-6)) (Var "z")) (Binop Div (Uminus (Const 1)) (Uminus (Var "b")))))) (Assign "b" (Binop Or (Uminus (Uminus (Const 0))) (Var "b"))) (Assign "y" (Binop And (Const 0) (Const 0)))]),
  ("{\n  z = a/0;\n  if 1 then\n    a = x\n  else {};\n  b = a;\n  a = -(0);\n  while (z<=-(1<=-6))-z do {};\n  a = 0;\n  a = -(0*-2);\n  b = x;\n  b = 5;\n  x = b;\n  if a then\n    b = b\n  else if a then\n    if b then {} else {}\n  else if 1 then {} else {};\n  if z then {} else\n    b = 0;\n  z = -b;\n  a = (x<=-(17))*a;\n  y = 1;\n  while a do\n    while 1 do {};\n  while 23<=-(1&&-(0||0)) do {};\n  z = 0;\n  y = a;\n  if z then\n    if y then\n      a = 1==0/1\n    else {\n      b = b<=b\n    }\n  else {\n    y = 0||z/-10==3+-x\n  };\n  z = z;\n  x = 0;\n  b = 1\n}",Seq [Assign "z" (Binop Div (Var "a") (Const 0)),If (Const 1) (Assign "a" (Var "x")) (Seq []),Assign "b" (Var "a"),Assign "a" (Uminus (Const 0)),While (Binop Minus (Binop LessEq (Var "z") (Uminus (Binop LessEq (Const 1) (Const (-6))))) (Var "z")) (Seq []),Assign "a" (Const 0),Assign "a" (Uminus (Binop Times (Const 0) (Const (-2)))),Assign "b" (Var "x"),Assign "b" (Const 5),Assign "x" (Var "b"),If (Var "a") (Assign "b" (Var "b")) (If (Var "a") (If (Var "b") (Seq []) (Seq [])) (If (Const 1) (Seq []) (Seq []))),If (Var "z") (Seq []) (Assign "b" (Const 0)),Assign "z" (Uminus (Var "b")),Assign "a" (Binop Times (Binop LessEq (Var "x") (Uminus (Const 17))) (Var "a")),Assign "y" (Const 1),While (Var "a") (While (Const 1) (Seq [])),While (Binop LessEq (Const 23) (Uminus (Binop And (Const 1) (Uminus (Binop Or (Const 0) (Const 0)))))) (Seq []),Assign "z" (Const 0),Assign "y" (Var "a"),If (Var "z") (If (Var "y") (Assign "a" (Binop Equal (Const 1) (Binop Div (Const 0) (Const 1)))) (Seq [Assign "b" (Binop LessEq (Var "b") (Var "b"))])) (Seq [Assign "y" (Binop Or (Const 0) (Binop Equal (Binop Div (Var "z") (Const (-10))) (Binop Plus (Const 3) (Uminus (Var "x")))))]),Assign "z" (Var "z"),Assign "x" (Const 0),Assign "b" (Const 1)]),
  ("x = -x&&x",Assign "x" (Binop And (Uminus (Var "x")) (Var "x"))),
  ("a = b",Assign "a" (Var "b")),
  ("{\n  if z then {} else\n    x = z;\n  if 0 then\n    if -z then\n      b = -b\n    else {}\n  else\n    x = -z;\n  if y then {} else if -((x*z||b)-(1&&y))<(1&&(a<=(x||1)||-(z==20))) then\n    if b then {} else {}\n  else\n    b = x||x<x;\n  while z do {};\n  if a then {} else\n    z = b+1*x;\n  z = b;\n  y = -7/x<=0;\n  b = a;\n  x = x;\n  x = y;\n  z = 1*x;\n  b = 1;\n  x = x-z/1;\n  b = 1<=y;\n  y = b;\n  if -(z+-(a--8)) then\n    while z do {}\n  else {};\n  x = y<=-x;\n  b = (x-(1<=b))*-(x+1-(b<=x)&&18);\n  b = z;\n  b = 0;\n  a = a;\n  z = (b||26)*z;\n  y = -(-(1*1)<a)\n}",Seq [If (Var "z") (Seq []) (Assign "x" (Var "z")),If (Const 0) (If (Uminus (Var "z")) (Assign "b" (Uminus (Var "b"))) (Seq [])) (Assign "x" (Uminus (Var "z"))),If (Var "y") (Seq []) (If (Binop Less (Uminus (Binop Minus (Binop Or (Binop Times (Var "x") (Var "z")) (Var "b")) (Binop And (Const 1) (Var "y")))) (Binop And (Const 1) (Binop Or (Binop LessEq (Var "a") (Binop Or (Var "x") (Const 1))) (Uminus (Binop Equal (Var "z") (Const 20)))))) (If (Var "b") (Seq []) (Seq [])) (Assign "b" (Binop Or (Var "x") (Binop Less (Var "x") (Var "x"))))),While (Var "z") (Seq []),If (Var "a") (Seq []) (Assign "z" (Binop Plus (Var "b") (Binop Times (Const 1) (Var "x")))),Assign "z" (Var "b"),Assign "y" (Binop LessEq (Binop Div (Const (-7)) (Var "x")) (Const 0)),Assign "b" (Var "a"),Assign "x" (Var "x"),Assign "x" (Var "y"),Assign "z" (Binop Times (Const 1) (Var "x")),Assign "b" (Const 1),Assign "x" (Binop Minus (Var "x") (Binop Div (Var "z") (Const 1))),Assign "b" (Binop LessEq (Const 1) (Var "y")),Assign "y" (Var "b"),If (Uminus (Binop Plus (Var "z") (Uminus (Binop Minus (Var "a") (Const (-8)))))) (While (Var "z") (Seq [])) (Seq []),Assign "x" (Binop LessEq (Var "y") (Uminus (Var "x"))),Assign "b" (Binop Times (Binop Minus (Var "x") (Binop LessEq (Const 1) (Var "b"))) (Uminus (Binop And (Binop Minus (Binop Plus (Var "x") (Const 1)) (Binop LessEq (Var "b") (Var "x"))) (Const 18)))),Assign "b" (Var "z"),Assign "b" (Const 0),Assign "a" (Var "a"),Assign "z" (Binop Times (Binop Or (Var "b") (Const 26)) (Var "z")),Assign "y" (Uminus (Binop Less (Uminus (Binop Times (Const 1) (Const 1))) (Var "a")))]),
  ("if (1<(x&&-(1)*y))/10 then {} else {\n  y = x;\n  a = x;\n  while -18*x do {};\n  while y do\n    z = -(x*(0||1))<=16\n}",If (Binop Div (Binop Less (Const 1) (Binop And (Var "x") (Binop Times (Uminus (Const 1)) (Var "y")))) (Const 10)) (Seq []) (Seq [Assign "y" (Var "x"),Assign "a" (Var "x"),While (Binop Times (Const (-18)) (Var "x")) (Seq []),While (Var "y") (Assign "z" (Binop LessEq (Uminus (Binop Times (Var "x") (Binop Or (Const 0) (Const 1)))) (Const 16)))])),
  ("{\n  if a then\n    x = 0+x\n  else {\n    a = z;\n    b = -(a*(0==-23)*z)\n  };\n  while -27 do\n    b = -25;\n  while 0 do\n    if 0==x then\n      y = -(x+b)\n    else {\n      x = -12\n    };\n  b = 1;\n  if -27 then\n    b = a<=a\n  else\n    a = 26<-(0<1||-b);\n  while 1 do\n    while 0&&13<=a do {\n      y = b\n    };\n  if 0 then\n    z = 1==(-(17)<b)\n  else\n    x = 1+x;\n  if -b then\n    while 18==y do\n      a = 1\n  else\n    x = -(-x)+y||1;\n  while a||-(-z||x) do {\n    while y do {}\n  };\n  a = (b&&0)-z;\n  y = x;\n  z = 0;\n  while z do {\n    z = a\n  };\n  z = 1<=1;\n  z = y;\n  if b then {} else\n    b = 22*0;\n  if -17-(1||-(1<=1))||4 then\n    b = z<a*(y-x)\n  else if 0 then {\n    if 1*1*(x*a) then {} else {}\n  } else {}\n}",Seq [If (Var "a") (Assign "x" (Binop Plus (Const 0) (Var "x"))) (Seq [Assign "a" (Var "z"),Assign "b" (Uminus (Binop Times (Binop Times (Var "a") (Binop Equal (Const 0) (Const (-23)))) (Var "z")))]),While (Const (-27)) (Assign "b" (Const (-25))),While (Const 0) (If (Binop Equal (Const 0) (Var "x")) (Assign "y" (Uminus (Binop Plus (Var "x") (Var "b")))) (Seq [Assign "x" (Const (-12))])),Assign "b" (Const 1),If (Const (-27)) (Assign "b" (Binop LessEq (Var "a") (Var "a"))) (Assign "a" (Binop Less (Const 26) (Uminus (Binop Or (Binop Less (Const 0) (Const 1)) (Uminus (Var "b")))))),While (Const 1) (While (Binop And (Const 0) (Binop LessEq (Const 13) (Var "a"))) (Seq [Assign "y" (Var "b")])),If (Const 0) (Assign "z" (Binop Equal (Const 1) (Binop Less (Uminus (Const 17)) (Var "b")))) (Assign "x" (Binop Plus (Const 1) (Var "x"))),If (Uminus (Var "b")) (While (Binop Equal (Const 18) (Var "y")) (Assign "a" (Const 1))) (Assign "x" (Binop Or (Binop Plus (Uminus (Uminus (Var "x"))) (Var "y")) (Const 1))),While (Binop Or (Var "a") (Uminus (Binop Or (Uminus (Var "z")) (Var "x")))) (Seq [While (Var "y") (Seq [])]),Assign "a" (Binop Minus (Binop And (Var "b") (Const 0)) (Var "z")),Assign "y" (Var "x"),Assign "z" (Const 0),While (Var "z") (Seq [Assign "z" (Var "a")]),Assign "z" (Binop LessEq (Const 1) (Const 1)),Assign "z" (Var "y"),If (Var "b") (Seq []) (Assign "b" (Binop Times (Const 22) (Const 0))),If (Binop Or (Binop Minus (Const (-17)) (Binop Or (Const 1) (Uminus (Binop LessEq (Const 1) (Const 1))))) (Const 4)) (Assign "b" (Binop Less (Var "z") (Binop Times (Var "a") (Binop Minus (Var "y") (Var "x"))))) (If (Const 0) (Seq [If (Binop Times (Binop Times (Const 1) (Const 1)) (Binop Times (Var "x") (Var "a"))) (Seq []) (Seq [])]) (Seq []))]),
  ("if 1 then {\n  if 1/x then {\n    x = 0\n  } else {};\n  x = -9;\n  if z then {} else\n    a = b;\n  z = y/z;\n  a = -11;\n  a = a;\n  x = x<0;\n  x = 1<=z;\n  y = -(-(-1)<0);\n  if (b-(0+1))/b then {} else\n    x = 0\n} else\n  b = -15&&0",If (Const 1) (Seq [If (Binop Div (Const 1) (Var "x")) (Seq [Assign "x" (Const 0)]) (Seq []),Assign "x" (Const (-9)),If (Var "z") (Seq []) (Assign "a" (Var "b")),Assign "z" (Binop Div (Var "y") (Var "z")),Assign "a" (Const (-11)),Assign "a" (Var "a"),Assign "x" (Binop Less (Var "x") (Const 0)),Assign "x" (Binop LessEq (Const 1) (Var "z")),Assign "y" (Uminus (Binop Less (Uminus (Const (-1))) (Const 0))),If (Binop Div (Binop Minus (Var "b") (Binop Plus (Const 0) (Const 1))) (Var "b")) (Seq []) (Assign "x" (Const 0))]) (Assign "b" (Binop And (Const (-15)) (Const 0)))),
  ("while x do\n  while 0 do\n    if -10 then\n      b = x\n    else\n      x = -x<a",While (Var "x") (While (Const 0) (If (Const (-10)) (Assign "b" (Var "x")) (Assign "x" (Binop Less (Uminus (Var "x")) (Var "a")))))),
  ("if 2 then\n  if 13 then\n    y = (7/8*-3-(-(0)&&0))/z\n  else\n    while -(0) do {\n      a = 1\n    }\nelse {\n  if z then {} else {};\n  a = -10<0;\n  if b*(10&&0)==0 then {\n    if 0 then {} else {}\n  } else if -a then\n    x = y\n  else {};\n  while 1 do {}\n}",If (Const 2) (If (Const 13) (Assign "y" (Binop Div (Binop Minus (Binop Times (Binop Div (Const 7) (Const 8)) (Const (-3))) (Binop And (Uminus (Const 0)) (Const 0))) (Var "z"))) (While (Uminus (Const 0)) (Seq [Assign "a" (Const 1)]))) (Seq [If (Var "z") (Seq []) (Seq []),Assign "a" (Binop Less (Const (-10)) (Const 0)),If (Binop Equal (Binop Times (Var "b") (Binop And (Const 10) (Const 0))) (Const 0)) (Seq [If (Const 0) (Seq []) (Seq [])]) (If (Uminus (Var "a")) (Assign "x" (Var "y")) (Seq [])),While (Const 1) (Seq [])])),
  ("{\n  if y then {\n    y = 1<=x\n  } else\n    y = (a&&a--(-a))<=-x;\n  z = 0-x;\n  a = z;\n  while 1 do\n    y = 10;\n  while b<(x&&1)==a do\n    x = -4;\n  b = 0-1;\n  if 7-x<=b then {\n    z = -y;\n    x = y/(0<=b==(a==1--y));\n    if 1 then {} else {}\n  } else\n    while 20 do\n      while 0 do\n        y = 3;\n  while 1 do\n    a = -(b*b)<=-(1/(a&&16))&&a\n}",Seq [If (Var "y") (Seq [Assign "y" (Binop LessEq (Const 1) (Var "x"))]) (Assign "y" (Binop LessEq (Binop And (Var "a") (Binop Minus (Var "a") (Uminus (Uminus (Var "a"))))) (Uminus (Var "x")))),Assign "z" (Binop Minus (Const 0) (Var "x")),Assign "a" (Var "z"),While (Const 1) (Assign "y" (Const 10)),While (Binop Equal (Binop Less (Var "b") (Binop And (Var "x") (Const 1))) (Var "a")) (Assign "x" (Const (-4))),Assign "b" (Binop Minus (Const 0) (Const 1)),If (Binop LessEq (Binop Minus (Const 7) (Var "x")) (Var "b")) (Seq [Assign "z" (Uminus (Var "y")),Assign "x" (Binop Div (Var "y") (Binop Equal (Binop LessEq (Const 0) (Var "b")) (Binop Equal (Var "a") (Binop Minus (Const 1) (Uminus (Var "y")))))),If (Const 1) (Seq []) (Seq [])]) (While (Const 20) (While (Const 0) (Assign "y" (Const 3)))),While (Const 1) (Assign "a" (Binop And (Binop LessEq (Uminus (Binop Times (Var "b") (Var "b"))) (Uminus (Binop Div (Const 1) (Binop And (Var "a") (Const 16))))) (Var "a")))]),
  ("{\n  x = z;\n  while 1<-20 do\n    while -(-(0)) do {};\n  z = 0;\n  if y then\n    z = y\n  else\n    x = 0;\n  y = a;\n  if 27 then\n    x = b*a\n  else {};\n  y = -(a--(1)<(z<=b))&&-(a-x+(y+0));\n  while 0 do\n    if y then\n      y = 0\n    else {};\n  y = y;\n  y = 0-(b+b)+b;\n  b = z;\n  while b<=y*z do\n    while (x||-21)<1 do\n      x = b\n}",Seq [Assign "x" (Var "z"),While (Binop Less (Const 1) (Const (-20))) (While (Uminus (Uminus (Const 0))) (Seq [])),Assign "z" (Const 0),If (Var "y") (Assign "z" (Var "y")) (Assign "x" (Const 0)),Assign "y" (Var "a"),If (Const 27) (Assign "x" (Binop Times (Var "b") (Var "a"))) (Seq []),Assign "y" (Binop And (Uminus (Binop Less (Binop Minus (Var "a") (Uminus (Const 1))) (Binop LessEq (Var "z") (Var "b")))) (Uminus (Binop Plus (Binop Minus (Var "a") (Var "x")) (Binop Plus (Var "y") (Const 0))))),While (Const 0) (If (Var "y") (Assign "y" (Const 0)) (Seq [])),Assign "y" (Var "y"),Assign "y" (Binop Plus (Binop Minus (Const 0) (Binop Plus (Var "b") (Var "b"))) (Var "b")),Assign "b" (Var "z"),While (Binop LessEq (Var "b") (Binop Times (Var "y") (Var "z"))) (While (Binop Less (Binop Or (Var "x") (Const (-21))) (Const 1)) (Assign "x" (Var "b")))]),
  ("{\n  b = z==1;\n  a = y;\n  if z then\n    if z then {} else {}\n  else if 0 then {} else {};\n  if y*z then {} else\n    a = x==a;\n  y = -(-b<=-a);\n  if (-y||z)==-13 then\n    if -((y==1)*0) then {} else {}\n  else\n    z = -3+1;\n  if -(1) then {} else {};\n  y = 0;\n  x = 0==1;\n  b = a;\n  y = y;\n  b = 1;\n  b = 1/((0<=-8&&0)==1);\n  z = -26/(b||1);\n  while y do\n    a = z;\n  x = 1;\n  z = 0;\n  y = 1/-(1);\n  y = 1;\n  a = b/1;\n  if 8 then\n    if -(0)<=a then {} else {}\n  else\n    z = -(0)||-(-(1));\n  if 0 then {\n    y = -(-(-(27)))\n  } else {\n    if y||0 then {} else {}\n  };\n  a = -23==b/-a;\n  b = -28*0;\n  a = b+-x/b;\n  x = 0;\n  while 0 do\n    b = -(-((b&&1)*x));\n  if a then {} else if x then\n    x = -(27)\n  else\n    while (1==a)/(1--(0)<(y<y)) do {};\n  while -26&&z do {};\n  if (a+(-x<0)||z-1)<1 then\n    x = b\n  else {};\n  z = x;\n  y = x\n}",Seq [Assign "b" (Binop Equal (Var "z") (Const 1)),Assign "a" (Var "y"),If (Var "z") (If (Var "z") (Seq []) (Seq [])) (If (Const 0) (Seq []) (Seq [])),If (Binop Times (Var "y") (Var "z")) (Seq []) (Assign "a" (Binop Equal (Var "x") (Var "a"))),Assign "y" (Uminus (Binop LessEq (Uminus (Var "b")) (Uminus (Var "a")))),If (Binop Equal (Binop Or (Uminus (Var "y")) (Var "z")) (Const (-13))) (If (Uminus (Binop Times (Binop Equal (Var "y") (Const 1)) (Const 0))) (Seq []) (Seq [])) (Assign "z" (Binop Plus (Const (-3)) (Const 1))),If (Uminus (Const 1)) (Seq []) (Seq []),Assign "y" (Const 0),Assign "x" (Binop Equal (Const 0) (Const 1)),Assign "b" (Var "a"),Assign "y" (Var "y"),Assign "b" (Const 1),Assign "b" (Binop Div (Const 1) (Binop Equal (Binop And (Binop LessEq (Const 0) (Const (-8))) (Const 0)) (Const 1))),Assign "z" (Binop Div (Const (-26)) (Binop Or (Var "b") (Const 1))),While (Var "y") (Assign "a" (Var "z")),Assign "x" (Const 1),Assign "z" (Const 0),Assign "y" (Binop Div (Const 1) (Uminus (Const 1))),Assign "y" (Const 1),Assign "a" (Binop Div (Var "b") (Const 1)),If (Const 8) (If (Binop LessEq (Uminus (Const 0)) (Var "a")) (Seq []) (Seq [])) (Assign "z" (Binop Or (Uminus (Const 0)) (Uminus (Uminus (Const 1))))),If (Const 0) (Seq [Assign "y" (Uminus (Uminus (Uminus (Const 27))))]) (Seq [If (Binop Or (Var "y") (Const 0)) (Seq []) (Seq [])]),Assign "a" (Binop Equal (Const (-23)) (Binop Div (Var "b") (Uminus (Var "a")))),Assign "b" (Binop Times (Const (-28)) (Const 0)),Assign "a" (Binop Plus (Var "b") (Binop Div (Uminus (Var "x")) (Var "b"))),Assign "x" (Const 0),While (Const 0) (Assign "b" (Uminus (Uminus (Binop Times (Binop And (Var "b") (Const 1)) (Var "x"))))),If (Var "a") (Seq []) (If (Var "x") (Assign "x" (Uminus (Const 27))) (While (Binop Div (Binop Equal (Const 1) (Var "a")) (Binop Less (Binop Minus (Const 1) (Uminus (Const 0))) (Binop Less (Var "y") (Var "y")))) (Seq []))),While (Binop And (Const (-26)) (Var "z")) (Seq []),If (Binop Less (Binop Or (Binop Plus (Var "a") (Binop Less (Uminus (Var "x")) (Const 0))) (Binop Minus (Var "z") (Const 1))) (Const 1)) (Assign "x" (Var "b")) (Seq []),Assign "z" (Var "x"),Assign "y" (Var "x")]),
  ("{\n  if x then {\n    b = b;\n    a = a;\n    if -14==(0<(-(0)<(x/1&&1))) then\n      z = 1<=-17||(5||1)\n    else {}\n  } else {\n    x = 0<=0\n  };\n  x = -(-b);\n  if 0-(x-1)||1 then\n    x = -(28/(1/x))\n  else if -(-18)+5==x then\n    x = a||0\n  else\n    b = (-x<y/0==y+(y+0)==-26)-y;\n  b = 1<(0==x/z+-(-15))+0;\n  if ((b+x<=-b)/(-(5)<=(1==b))<=1)/-(-y) then\n    a = y\n  else {};\n  b = x;\n  x = y/1;\n  z = (-(1||-z)==28)/a;\n  if z then\n    z = -b\n  else\n    x = a--y;\n  if x then {\n    while -(y*a<=b) do {}\n  } else {};\n  while -(-(y&&a&&z||0)) do\n    if b then\n      if a then {} else {}\n    else\n      b = y;\n  y = 6\n}",Seq [If (Var "x") (Seq [Assign "b" (Var "b"),Assign "a" (Var "a"),If (Binop Equal (Const (-14)) (Binop Less (Const 0) (Binop Less (Uminus (Const 0)) (Binop And (Binop Div (Var "x") (Const 1)) (Const 1))))) (Assign "z" (Binop Or (Binop LessEq (Const 1) (Const (-17))) (Binop Or (Const 5) (Const 1)))) (Seq [])]) (Seq [Assign "x" (Binop LessEq (Const 0) (Const 0))]),Assign "x" (Uminus (Uminus (Var "b"))),If (Binop Or (Binop Minus (Const 0) (Binop Minus (Var "x") (Const 1))) (Const 1)) (Assign "x" (Uminus (Binop Div (Const 28) (Binop Div (Const 1) (Var "x"))))) (If (Binop Equal (Binop Plus (Uminus (Const (-18))) (Const 5)) (Var "x")) (Assign "x" (Binop Or (Var "a") (Const 0))) (Assign "b" (Binop Minus (Binop Equal (Binop Equal (Binop Less (Uminus (Var "x")) (Binop Div (Var "y") (Const 0))) (Binop Plus (Var "y") (Binop Plus (Var "y") (Const 0)))) (Const (-26))) (Var "y")))),Assign "b" (Binop Less (Const 1) (Binop Plus (Binop Equal (Const 0) (Binop Plus (Binop Div (Var "x") (Var "z")) (Uminus (Const (-15))))) (Const 0))),If (Binop Div (Binop LessEq (Binop Div (Binop LessEq (Binop Plus (Var "b") (Var "x")) (Uminus (Var "b"))) (Binop LessEq (Uminus (Const 5)) (Binop Equal (Const 1) (Var "b")))) (Const 1)) (Uminus (Uminus (Var "y")))) (Assign "a" (Var "y")) (Seq []),Assign "b" (Var "x"),Assign "x" (Binop Div (Var "y") (Const 1)),Assign "z" (Binop Div (Binop Equal (Uminus (Binop Or (Const 1) (Uminus (Var "z")))) (Const 28)) (Var "a")),If (Var "z") (Assign "z" (Uminus (Var "b"))) (Assign "x" (Binop Minus (Var "a") (Uminus (Var "y")))),If (Var "x") (Seq [While (Uminus (Binop LessEq (Binop Times (Var "y") (Var "a")) (Var "b"))) (Seq [])]) (Seq []),While (Uminus (Uminus (Binop Or (Binop And (Binop And (Var "y") (Var "a")) (Var "z")) (Const 0)))) (If (Var "b") (If (Var "a") (Seq []) (Seq [])) (Assign "b" (Var "y"))),Assign "y" (Const 6)]),
  ("{\n  z = (1<z)-z;\n  while 1 do\n    x = 1<=y;\n  while -(-(1)) do {};\n  while 0*0<((z&&a)<=x) do {};\n  if z<=-(-(-3)) then\n    y = b\n  else\n    x = 1;\n  while -(-(a&&1)) do\n    a = 0;\n  if 1 then {} else {};\n  x = 1;\n  z = -1;\n  a = 1;\n  y = a;\n  a = y;\n  a = -y;\n  z = 1\n}",Seq [Assign "z" (Binop Minus (Binop Less (Const 1) (Var "z")) (Var "z")),While (Const 1) (Assign "x" (Binop LessEq (Const 1) (Var "y"))),While (Uminus (Uminus (Const 1))) (Seq []),While (Binop Less (Binop Times (Const 0) (Const 0)) (Binop LessEq (Binop And (Var "z") (Var "a")) (Var "x"))) (Seq []),If (Binop LessEq (Var "z") (Uminus (Uminus (Const (-3))))) (Assign "y" (Var "b")) (Assign "x" (Const 1)),While (Uminus (Uminus (Binop And (Var "a") (Const 1)))) (Assign "a" (Const 0)),If (Const 1) (Seq []) (Seq []),Assign "x" (Const 1),Assign "z" (Const (-1)),Assign "a" (Const 1),Assign "y" (Var "a"),Assign "a" (Var "y"),Assign "a" (Uminus (Var "y")),Assign "z" (Const 1)]),
  ("a = -(-(1))",Assign "a" (Uminus (Uminus (Const 1)))),
  ("while 1 do\n  a = b",While (Const 1) (Assign "a" (Var "b"))),
  ("b = -a==b",Assign "b" (Binop Equal (Uminus (Var "a")) (Var "b"))),
  ("while z do\n  if (1<=x/(0--y))+a then\n    if y then\n      while b<=-10 do\n        z = 0/1\n    else\n      z = 0||-z\n  else if z then\n    b = a\n  else if -z then\n    b = 0\n  else\n    while z do {}",While (Var "z") (If (Binop Plus (Binop LessEq (Const 1) (Binop Div (Var "x") (Binop Minus (Const 0) (Uminus (Var "y"))))) (Var "a")) (If (Var "y") (While (Binop LessEq (Var "b") (Const (-10))) (Assign "z" (Binop Div (Const 0) (Const 1)))) (Assign "z" (Binop Or (Const 0) (Uminus (Var "z"))))) (If (Var "z") (Assign "b" (Var "a")) (If (Uminus (Var "z")) (Assign "b" (Const 0)) (While (Var "z") (Seq [])))))),
  ("{\n  b = x;\n  while -10||b||0/((x||a)/(0+0)||x) do\n    b = -23;\n  if 1 then\n    a = 4\n  else if z||-(-(-21)) then {} else {};\n  y = b;\n  b = -(21);\n  y = (-(-(1))+x)/(1<-(-(-23-b)));\n  x = (y==1)*1/0;\n  if z then\n    y = x\n  else if 0 then\n    x = -z\n  else {};\n  if x||-(-(-b==z)) then\n    a = z||a\n  else\n    z = (a||y||b)-0;\n  if 1<z then\n    if 4 then {\n      x = 0\n    } else {}\n  else\n    y = -x+(1/0||0<1)-(0==1*y)||(-(y==x)&&(0/26&&y))<(y<=a);\n  x = 1\n}",Seq [Assign "b" (Var "x"),While (Binop Or (Binop Or (Const (-10)) (Var "b")) (Binop Div (Const 0) (Binop Or (Binop Div (Binop Or (Var "x") (Var "a")) (Binop Plus (Const 0) (Const 0))) (Var "x")))) (Assign "b" (Const (-23))),If (Const 1) (Assign "a" (Const 4)) (If (Binop Or (Var "z") (Uminus (Uminus (Const (-21))))) (Seq []) (Seq [])),Assign "y" (Var "b"),Assign "b" (Uminus (Const 21)),Assign "y" (Binop Div (Binop Plus (Uminus (Uminus (Const 1))) (Var "x")) (Binop Less (Const 1) (Uminus (Uminus (Binop Minus (Const (-23)) (Var "b")))))),Assign "x" (Binop Div (Binop Times (Binop Equal (Var "y") (Const 1)) (Const 1)) (Const 0)),If (Var "z") (Assign "y" (Var "x")) (If (Const 0) (Assign "x" (Uminus (Var "z"))) (Seq [])),If (Binop Or (Var "x") (Uminus (Uminus (Binop Equal (Uminus (Var "b")) (Var "z"))))) (Assign "a" (Binop Or (Var "z") (Var "a"))) (Assign "z" (Binop Minus (Binop Or (Binop Or (Var "a") (Var "y")) (Var "b")) (Const 0))),If (Binop Less (Const 1) (Var "z")) (If (Const 4) (Seq [Assign "x" (Const 0)]) (Seq [])) (Assign "y" (Binop Or (Binop Minus (Binop Plus (Uminus (Var "x")) (Binop Or (Binop Div (Const 1) (Const 0)) (Binop Less (Const 0) (Const 1)))) (Binop Equal (Const 0) (Binop Times (Const 1) (Var "y")))) (Binop Less (Binop And (Uminus (Binop Equal (Var "y") (Var "x"))) (Binop And (Binop Div (Const 0) (Const 26)) (Var "y"))) (Binop LessEq (Var "y") (Var "a"))))),Assign "x" (Const 1)]),
  ("while x do\n  y = x",While (Var "x") (Assign "y" (Var "x"))),
  ("a = x||-9||0-x",Assign "a" (Binop Or (Binop Or (Var "x") (Const (-9))) (Binop Minus (Const 0) (Var "x")))),
  ("y = z",Assign "y" (Var "z")),
  ("a = x<1",Assign "a" (Binop Less (Var "x") (Const 1))),
  ("{\n  z = 0;\n  x = -(z==5)&&-23-(-18<-(y<=y));\n  x = 1;\n  z = x/(0*(x&&b)/0--(-29&&y&&0));\n  y = y;\n  if 0 then\n    if b then\n      y = 0\n    else\n      x = x\n  else {};\n  x = b;\n  if b then\n    z = -(1||a)\n  else if (1-b)*0 then {} else {};\n  a = a;\n  z = z\n}",Seq [Assign "z" (Const 0),Assign "x" (Binop And (Uminus (Binop Equal (Var "z") (Const 5))) (Binop Minus (Const (-23)) (Binop Less (Const (-18)) (Uminus (Binop LessEq (Var "y") (Var "y")))))),Assign "x" (Const 1),Assign "z" (Binop Div (Var "x") (Binop Minus (Binop Div (Binop Times (Const 0) (Binop And (Var "x") (Var "b"))) (Const 0)) (Uminus (Binop And (Binop And (Const (-29)) (Var "y")) (Const 0))))),Assign "y" (Var "y"),If (Const 0) (If (Var "b") (Assign "y" (Const 0)) (Assign "x" (Var "x"))) (Seq []),Assign "x" (Var "b"),If (Var "b") (Assign "z" (Uminus (Binop Or (Const 1) (Var "a")))) (If (Binop Times (Binop Minus (Const 1) (Var "b")) (Const 0)) (Seq []) (Seq [])),Assign "a" (Var "a"),Assign "z" (Var "z")]),
  ("{\n  z = x;\n  if x then\n    if 0 then {} else {}\n  else\n    y = 1;\n  while z do {};\n  while z do\n    z = -17;\n  if y then\n    a = -(-b)\n  else\n    x = 8;\n  y = 0;\n  x = a*a;\n  y = 1;\n  if z then\n    if 30==0 then\n      y = x<=0\n    else {}\n  else\n    z = x&&-28==0;\n  if -y--(1) then\n    x = -b*a\n  else\n    a = z;\n  if -(-(y||a)-y) then\n    a = -(-(-30))\n  else if 0 then\n    if x then {} else {}\n  else\n    y = 0;\n  a = y;\n  z = 0&&-(b-z);\n  if -(1) then\n    if z then {} else {}\n  else\n    y = -(1);\n  if 1 then {\n    b = 16;\n    if -(1) then {} else\n      x = 1==1\n  } else\n    x = b;\n  if y<y then\n    while y do\n      while -(-(a&&-(0&&x))) do {}\n  else {\n    x = x\n  };\n  if x then\n    while z do\n      x = y\n  else {\n    if 19<=29 then {} else {}\n  };\n  if y then {\n    y = -(1)\n  } else\n    b = 1;\n  while 22 do\n    z = y+x*1;\n  if y then\n    a = z||0\n  else if b then\n    y = -b\n  else\n    z = 0\n}",Seq [Assign "z" (Var "x"),If (Var "x") (If (Const 0) (Seq []) (Seq [])) (Assign "y" (Const 1)),While (Var "z") (Seq []),While (Var "z") (Assign "z" (Const (-17))),If (Var "y") (Assign "a" (Uminus (Uminus (Var "b")))) (Assign "x" (Const 8)),Assign "y" (Const 0),Assign "x" (Binop Times (Var "a") (Var "a")),Assign "y" (Const 1),If (Var "z") (If (Binop Equal (Const 30) (Const 0)) (Assign "y" (Binop LessEq (Var "x") (Const 0))) (Seq [])) (Assign "z" (Binop And (Var "x") (Binop Equal (Const (-28)) (Const 0)))),If (Binop Minus (Uminus (Var "y")) (Uminus (Const 1))) (Assign "x" (Binop Times (Uminus (Var "b")) (Var "a"))) (Assign "a" (Var "z")),If (Uminus (Binop Minus (Uminus (Binop Or (Var "y") (Var "a"))) (Var "y"))) (Assign "a" (Uminus (Uminus (Const (-30))))) (If (Const 0) (If (Var "x") (Seq []) (Seq [])) (Assign "y" (Const 0))),Assign "a" (Var "y"),Assign "z" (Binop And (Const 0) (Uminus (Binop Minus (Var "b") (Var "z")))),If (Uminus (Const 1)) (If (Var "z") (Seq []) (Seq [])) (Assign "y" (Uminus (Const 1))),If (Const 1) (Seq [Assign "b" (Const 16),If (Uminus (Const 1)) (Seq []) (Assign "x" (Binop Equal (Const 1) (Const 1)))]) (Assign "x" (Var "b")),If (Binop Less (Var "y") (Var "y")) (While (Var "y") (While (Uminus (Uminus (Binop And (Var "a") (Uminus (Binop And (Const 0) (Var "x")))))) (Seq []))) (Seq [Assign "x" (Var "x")]),If (Var "x") (While (Var "z") (Assign "x" (Var "y"))) (Seq [If (Binop LessEq (Const 19) (Const 29)) (Seq []) (Seq [])]),If (Var "y") (Seq [Assign "y" (Uminus (Const 1))]) (Assign "b" (Const 1)),While (Const 22) (Assign "z" (Binop Plus (Var "y") (Binop Times (Var "x") (Const 1)))),If (Var "y") (Assign "a" (Binop Or (Var "z") (Const 0))) (If (Var "b") (Assign "y" (Uminus (Var "b"))) (Assign "z" (Const 0)))]),
  ("{\n  z = -11;\n  while b do {\n    y = 0\n  };\n  x = (a-(-(-(19))||z))*-24;\n  if 1 then\n    if 0 then\n      z = 1\n    else {}\n  else if x then\n    if 1 then {} else {}\n  else {};\n  if (1&&y)<=0 then {\n    while 1 do\n      z = a<y\n  } else\n    x = b;\n  z = 0;\n  y = b==(a<=-a);\n  z = y;\n  if -(-5)<=y/((0+0)/-(y<1)) then {} else\n    z = 0;\n  y = 0+z<=(-((y<0)-z)==-(-14/a));\n  while -(-(-15)&&1) do\n    z = -b;\n  if 0 then\n    y = 26\n  else\n    while a do\n      while 0*-b do {};\n  while -(x<1) do {\n    z = x\n  };\n  b = x&&1==(b<=x)\n}",Seq [Assign "z" (Const (-11)),While (Var "b") (Seq [Assign "y" (Const 0)]),Assign "x" (Binop Times (Binop Minus (Var "a") (Binop Or (Uminus (Uminus (Const 19))) (Var "z"))) (Const (-24))),If (Const 1) (If (Const 0) (Assign "z" (Const 1)) (Seq [])) (If (Var "x") (If (Const 1) (Seq []) (Seq [])) (Seq [])),If (Binop LessEq (Binop And (Const 1) (Var "y")) (Const 0)) (Seq [While (Const 1) (Assign "z" (Binop Less (Var "a") (Var "y")))]) (Assign "x" (Var "b")),Assign "z" (Const 0),Assign "y" (Binop Equal (Var "b") (Binop LessEq (Var "a") (Uminus (Var "a")))),Assign "z" (Var "y"),If (Binop LessEq (Uminus (Const (-5))) (Binop Div (Var "y") (Binop Div (Binop Plus (Const 0) (Const 0)) (Uminus (Binop Less (Var "y") (Const 1)))))) (Seq []) (Assign "z" (Const 0)),Assign "y" (Binop LessEq (Binop Plus (Const 0) (Var "z")) (Binop Equal (Uminus (Binop Minus (Binop Less (Var "y") (Const 0)) (Var "z"))) (Uminus (Binop Div (Const (-14)) (Var "a"))))),While (Uminus (Binop And (Uminus (Const (-15))) (Const 1))) (Assign "z" (Uminus (Var "b"))),If (Const 0) (Assign "y" (Const 26)) (While (Var "a") (While (Binop Times (Const 0) (Uminus (Var "b"))) (Seq []))),While (Uminus (Binop Less (Var "x") (Const 1))) (Seq [Assign "z" (Var "x")]),Assign "b" (Binop And (Var "x") (Binop Equal (Const 1) (Binop LessEq (Var "b") (Var "x"))))]),
  ("a = b-(0/(b+z)*b==1)",Assign "a" (Binop Minus (Var "b") (Binop Equal (Binop Times (Binop Div (Const 0) (Binop Plus (Var "b") (Var "z"))) (Var "b")) (Const 1)))),
  ("x = -(0<=y)*z+1",Assign "x" (Binop Plus (Binop Times (Uminus (Binop LessEq (Const 0) (Var "y"))) (Var "z")) (Const 1))),
  ("if -(z/z)/y then\n  if 0 then\n    z = (b<=x)*0\n  else if y then {} else\n    a = 1-(13-y)\nelse\n  y = 22",If (Binop Div (Uminus (Binop Div (Var "z") (Var "z"))) (Var "y")) (If (Const 0) (Assign "z" (Binop Times (Binop LessEq (Var "b") (Var "x")) (Const 0))) (If (Var "y") (Seq []) (Assign "a" (Binop Minus (Const 1) (Binop Minus (Const 13) (Var "y")))))) (Assign "y" (Const 22))),
  ("if (-6<b*(z<=0))*a<(-23&&a) then\n  while 28 do\n    z = -23\nelse {\n  b = z;\n  a = z;\n  b = 0;\n  if a then\n    if a*(0&&a) then\n      if b then {} else {}\n    else if x then {} else {}\n  else {\n    y = 1\n  };\n  x = 0;\n  x = (-(b-1)||x)+y;\n  x = a;\n  z = a;\n  b = -(1)<=(b/z-(a||0)==(16||x))&&x\n}",If (Binop Less (Binop Times (Binop Less (Const (-6)) (Binop Times (Var "b") (Binop LessEq (Var "z") (Const 0)))) (Var "a")) (Binop And (Const (-23)) (Var "a"))) (While (Const 28) (Assign "z" (Const (-23)))) (Seq [Assign "b" (Var "z"),Assign "a" (Var "z"),Assign "b" (Const 0),If (Var "a") (If (Binop Times (Var "a") (Binop And (Const 0) (Var "a"))) (If (Var "b") (Seq []) (Seq [])) (If (Var "x") (Seq []) (Seq []))) (Seq [Assign "y" (Const 1)]),Assign "x" (Const 0),Assign "x" (Binop Plus (Binop Or (Uminus (Binop Minus (Var "b") (Const 1))) (Var "x")) (Var "y")),Assign "x" (Var "a"),Assign "z" (Var "a"),Assign "b" (Binop And (Binop LessEq (Uminus (Const 1)) (Binop Equal (Binop Minus (Binop Div (Var "b") (Var "z")) (Binop Or (Var "a") (Const 0))) (Binop Or (Const 16) (Var "x")))) (Var "x"))])),
  ("y = -y",Assign "y" (Uminus (Var "y")))
  ]

